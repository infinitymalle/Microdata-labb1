
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000000f4  00000168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000f4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000016a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000098d  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000893  00000000  00000000  00000bb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000301  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00001750  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044d  00000000  00000000  000017b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000021  00000000  00000000  00001c05  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001c26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
   8:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
   c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  10:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  14:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  18:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  1c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  20:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  24:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  28:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  2c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  30:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  34:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  38:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  3c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  40:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  44:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  48:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  4c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  50:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  54:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  58:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	11 e0       	ldi	r17, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	e4 ef       	ldi	r30, 0xF4	; 244
  70:	f0 e0       	ldi	r31, 0x00	; 0
  72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
  74:	05 90       	lpm	r0, Z+
  76:	0d 92       	st	X+, r0
  78:	a2 30       	cpi	r26, 0x02	; 2
  7a:	b1 07       	cpc	r27, r17
  7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>
  7e:	0e 94 45 00 	call	0x8a	; 0x8a <main>
  82:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_exit>

00000086 <__bad_interrupt>:
  86:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000008a <main>:
#include <avr/io.h>
#include "myFunctionsInclude.h"

int main(void)
{
    CLKPR = 0x80;
  8a:	e1 e6       	ldi	r30, 0x61	; 97
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 e8       	ldi	r24, 0x80	; 128
  90:	80 83       	st	Z, r24
	CLKPR = 0x00;
  92:	10 82       	st	Z, r1
	LCD_Init();
  94:	0e 94 55 00 	call	0xaa	; 0xaa <LCD_Init>
	char ch = "A";
	int i = 3;
	writeChar(ch, i);
  98:	63 e0       	ldi	r22, 0x03	; 3
  9a:	70 e0       	ldi	r23, 0x00	; 0
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	91 e0       	ldi	r25, 0x01	; 1
  a0:	0e 94 62 00 	call	0xc4	; 0xc4 <writeChar>
	
}
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	08 95       	ret

000000aa <LCD_Init>:
		LCDCS    - Asynchronous clock source
		LCDMUX's - Duty = 1/4, Bias = 1/3
		LCDPM's  - Number of Segments = 25
	*/
	
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
  aa:	87 eb       	ldi	r24, 0xB7	; 183
  ac:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	/*
		LCD Frame Rate Register:
		LCDCD's - Prescaler setting N = 16
	*/
	
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
  b0:	87 e0       	ldi	r24, 0x07	; 7
  b2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCD Contrast Control Register
		None of the LCDDC's used = 300 microseconds
		LCDCC's = 3,35V
	*/
	
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
  b6:	8f e0       	ldi	r24, 0x0F	; 15
  b8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	
	/*
		LCDEN = LCD Enabled
		LCDAB = Low Power Waveform
	*/
	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
  bc:	80 ec       	ldi	r24, 0xC0	; 192
  be:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
  c2:	08 95       	ret

000000c4 <writeChar>:
}

void writeChar(char ch, int pos)
{
	//LCDDR0 = 0x5;
	LCDDR5 = 0x5;
  c4:	25 e0       	ldi	r18, 0x05	; 5
  c6:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
	LCDDR10 = 0xF;
  ca:	9f e0       	ldi	r25, 0x0F	; 15
  cc:	90 93 f6 00 	sts	0x00F6, r25	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
	LCDDR15 = 0x0;
  d0:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
	LCDDR1 = 0x1;
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
	LCDDR6 = 0x5;
  da:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
	LCDDR11 = 0xF;
  de:	90 93 f7 00 	sts	0x00F7, r25	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
	LCDDR16 = 0x0;
  e2:	10 92 fc 00 	sts	0x00FC, r1	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
	LCDDR8 = 0x1;
  e6:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
	LCDDR13 = 0x1;
  ea:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
  ee:	08 95       	ret

000000f0 <_exit>:
  f0:	f8 94       	cli

000000f2 <__stop_program>:
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <__stop_program>
