
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000634  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005e0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000634  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000664  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000006a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b01  00000000  00000000  00000704  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000964  00000000  00000000  00001205  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000049a  00000000  00000000  00001b69  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000140  00000000  00000000  00002004  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000456  00000000  00000000  00002144  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000694  00000000  00000000  0000259a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002c2e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   8:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  10:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  14:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  18:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  1c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  20:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  24:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  28:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  2c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  30:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  34:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  38:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  3c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  40:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  44:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  48:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  4c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  50:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  54:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  58:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  5c:	07 01       	movw	r0, r14
  5e:	02 01       	movw	r0, r4
  60:	f1 00       	.word	0x00f1	; ????
  62:	e7 00       	.word	0x00e7	; ????
  64:	cb 00       	.word	0x00cb	; ????
  66:	ae 00       	.word	0x00ae	; ????
  68:	a2 00       	.word	0x00a2	; ????
  6a:	70 00       	.word	0x0070	; ????
  6c:	84 00       	.word	0x0084	; ????
  6e:	18 01       	movw	r2, r16

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61
  7c:	0e 94 44 00 	call	0x88	; 0x88 <main>
  80:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <_exit>

00000084 <__bad_interrupt>:
  84:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000088 <main>:
#include "myFunctionsInclude.h"
#include <math.h>

int main(void)
{
    CLKPR = 0x80;
  88:	e1 e6       	ldi	r30, 0x61	; 97
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 e8       	ldi	r24, 0x80	; 128
  8e:	80 83       	st	Z, r24
	CLKPR = 0x00;
  90:	10 82       	st	Z, r1
	LCD_Init();
  92:	0e 94 50 00 	call	0xa0	; 0xa0 <LCD_Init>
	//writeChar('6', 5);
	//writeLong(34675);
	prime();
  96:	0e 94 75 01 	call	0x2ea	; 0x2ea <prime>
}
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	08 95       	ret

000000a0 <LCD_Init>:
	for (int n = 5; n >= 0; n--) {
		char ch = (i % 10) + '0';
		i /= 10;
		writeChar(ch, n);
	}
}
  a0:	87 eb       	ldi	r24, 0xB7	; 183
  a2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
  a6:	87 e0       	ldi	r24, 0x07	; 7
  a8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
  ac:	8f e0       	ldi	r24, 0x0F	; 15
  ae:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
  b2:	80 ec       	ldi	r24, 0xC0	; 192
  b4:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
  b8:	08 95       	ret

000000ba <writeChar>:
  ba:	66 30       	cpi	r22, 0x06	; 6
  bc:	71 05       	cpc	r23, r1
  be:	08 f5       	brcc	.+66     	; 0x102 <writeChar+0x48>
  c0:	9b 01       	movw	r18, r22
  c2:	35 95       	asr	r19
  c4:	27 95       	ror	r18
  c6:	60 ff       	sbrs	r22, 0
  c8:	1d c0       	rjmp	.+58     	; 0x104 <writeChar+0x4a>
  ca:	40 e1       	ldi	r20, 0x10	; 16
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	fc 01       	movw	r30, r24
  d0:	f0 97       	sbiw	r30, 0x30	; 48
  d2:	ea 30       	cpi	r30, 0x0A	; 10
  d4:	f1 05       	cpc	r31, r1
  d6:	a8 f4       	brcc	.+42     	; 0x102 <writeChar+0x48>
  d8:	e2 5d       	subi	r30, 0xD2	; 210
  da:	ff 4f       	sbci	r31, 0xFF	; 255
  dc:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__tablejump2__>
  e0:	f9 01       	movw	r30, r18
  e2:	e4 51       	subi	r30, 0x14	; 20
  e4:	ff 4f       	sbci	r31, 0xFF	; 255
  e6:	80 81       	ld	r24, Z
  e8:	84 0f       	add	r24, r20
  ea:	80 83       	st	Z, r24
  ec:	35 96       	adiw	r30, 0x05	; 5
  ee:	80 81       	ld	r24, Z
  f0:	84 0f       	add	r24, r20
  f2:	80 83       	st	Z, r24
  f4:	35 96       	adiw	r30, 0x05	; 5
  f6:	80 81       	ld	r24, Z
  f8:	48 0f       	add	r20, r24
  fa:	40 83       	st	Z, r20
  fc:	35 96       	adiw	r30, 0x05	; 5
  fe:	80 81       	ld	r24, Z
 100:	80 83       	st	Z, r24
 102:	08 95       	ret
 104:	41 e0       	ldi	r20, 0x01	; 1
 106:	e2 cf       	rjmp	.-60     	; 0xcc <writeChar+0x12>
 108:	f9 01       	movw	r30, r18
 10a:	e4 51       	subi	r30, 0x14	; 20
 10c:	ff 4f       	sbci	r31, 0xFF	; 255
 10e:	80 81       	ld	r24, Z
 110:	84 0f       	add	r24, r20
 112:	80 83       	st	Z, r24
 114:	35 96       	adiw	r30, 0x05	; 5
 116:	90 81       	ld	r25, Z
 118:	84 2f       	mov	r24, r20
 11a:	88 0f       	add	r24, r24
 11c:	88 0f       	add	r24, r24
 11e:	84 0f       	add	r24, r20
 120:	89 0f       	add	r24, r25
 122:	80 83       	st	Z, r24
 124:	35 96       	adiw	r30, 0x05	; 5
 126:	90 81       	ld	r25, Z
 128:	84 2f       	mov	r24, r20
 12a:	88 0f       	add	r24, r24
 12c:	84 0f       	add	r24, r20
 12e:	58 2f       	mov	r21, r24
 130:	55 0f       	add	r21, r21
 132:	55 0f       	add	r21, r21
 134:	85 0f       	add	r24, r21
 136:	89 0f       	add	r24, r25
 138:	80 83       	st	Z, r24
 13a:	35 96       	adiw	r30, 0x05	; 5
 13c:	80 81       	ld	r24, Z
 13e:	48 0f       	add	r20, r24
 140:	40 83       	st	Z, r20
 142:	08 95       	ret
 144:	f9 01       	movw	r30, r18
 146:	e4 51       	subi	r30, 0x14	; 20
 148:	ff 4f       	sbci	r31, 0xFF	; 255
 14a:	80 81       	ld	r24, Z
 14c:	84 0f       	add	r24, r20
 14e:	80 83       	st	Z, r24
 150:	35 96       	adiw	r30, 0x05	; 5
 152:	80 81       	ld	r24, Z
 154:	94 2f       	mov	r25, r20
 156:	99 0f       	add	r25, r25
 158:	99 0f       	add	r25, r25
 15a:	e2 cf       	rjmp	.-60     	; 0x120 <writeChar+0x66>
 15c:	f9 01       	movw	r30, r18
 15e:	e4 51       	subi	r30, 0x14	; 20
 160:	ff 4f       	sbci	r31, 0xFF	; 255
 162:	80 81       	ld	r24, Z
 164:	84 0f       	add	r24, r20
 166:	80 83       	st	Z, r24
 168:	35 96       	adiw	r30, 0x05	; 5
 16a:	80 81       	ld	r24, Z
 16c:	94 2f       	mov	r25, r20
 16e:	99 0f       	add	r25, r25
 170:	99 0f       	add	r25, r25
 172:	89 0f       	add	r24, r25
 174:	80 83       	st	Z, r24
 176:	35 96       	adiw	r30, 0x05	; 5
 178:	50 81       	ld	r21, Z
 17a:	84 2f       	mov	r24, r20
 17c:	88 0f       	add	r24, r24
 17e:	98 2f       	mov	r25, r24
 180:	99 0f       	add	r25, r25
 182:	99 0f       	add	r25, r25
 184:	89 0f       	add	r24, r25
 186:	84 0f       	add	r24, r20
 188:	85 0f       	add	r24, r21
 18a:	80 83       	st	Z, r24
 18c:	35 96       	adiw	r30, 0x05	; 5
 18e:	80 81       	ld	r24, Z
 190:	48 0f       	add	r20, r24
 192:	40 83       	st	Z, r20
 194:	08 95       	ret
 196:	f9 01       	movw	r30, r18
 198:	e4 51       	subi	r30, 0x14	; 20
 19a:	ff 4f       	sbci	r31, 0xFF	; 255
 19c:	80 81       	ld	r24, Z
 19e:	80 83       	st	Z, r24
 1a0:	35 96       	adiw	r30, 0x05	; 5
 1a2:	90 81       	ld	r25, Z
 1a4:	84 2f       	mov	r24, r20
 1a6:	88 0f       	add	r24, r24
 1a8:	88 0f       	add	r24, r24
 1aa:	84 0f       	add	r24, r20
 1ac:	89 0f       	add	r24, r25
 1ae:	80 83       	st	Z, r24
 1b0:	35 96       	adiw	r30, 0x05	; 5
 1b2:	90 81       	ld	r25, Z
 1b4:	54 2f       	mov	r21, r20
 1b6:	55 0f       	add	r21, r21
 1b8:	85 2f       	mov	r24, r21
 1ba:	88 0f       	add	r24, r24
 1bc:	88 0f       	add	r24, r24
 1be:	85 0f       	add	r24, r21
 1c0:	48 0f       	add	r20, r24
 1c2:	49 0f       	add	r20, r25
 1c4:	40 83       	st	Z, r20
 1c6:	35 96       	adiw	r30, 0x05	; 5
 1c8:	80 81       	ld	r24, Z
 1ca:	80 83       	st	Z, r24
 1cc:	08 95       	ret
 1ce:	f9 01       	movw	r30, r18
 1d0:	e4 51       	subi	r30, 0x14	; 20
 1d2:	ff 4f       	sbci	r31, 0xFF	; 255
 1d4:	80 81       	ld	r24, Z
 1d6:	84 0f       	add	r24, r20
 1d8:	80 83       	st	Z, r24
 1da:	35 96       	adiw	r30, 0x05	; 5
 1dc:	80 81       	ld	r24, Z
 1de:	84 0f       	add	r24, r20
 1e0:	c9 cf       	rjmp	.-110    	; 0x174 <writeChar+0xba>
 1e2:	f9 01       	movw	r30, r18
 1e4:	e4 51       	subi	r30, 0x14	; 20
 1e6:	ff 4f       	sbci	r31, 0xFF	; 255
 1e8:	80 81       	ld	r24, Z
 1ea:	84 0f       	add	r24, r20
 1ec:	80 83       	st	Z, r24
 1ee:	35 96       	adiw	r30, 0x05	; 5
 1f0:	80 81       	ld	r24, Z
 1f2:	84 0f       	add	r24, r20
 1f4:	80 83       	st	Z, r24
 1f6:	35 96       	adiw	r30, 0x05	; 5
 1f8:	80 81       	ld	r24, Z
 1fa:	9e e0       	ldi	r25, 0x0E	; 14
 1fc:	49 9f       	mul	r20, r25
 1fe:	80 0d       	add	r24, r0
 200:	11 24       	eor	r1, r1
 202:	9a cf       	rjmp	.-204    	; 0x138 <writeChar+0x7e>
 204:	f9 01       	movw	r30, r18
 206:	e4 51       	subi	r30, 0x14	; 20
 208:	ff 4f       	sbci	r31, 0xFF	; 255
 20a:	80 81       	ld	r24, Z
 20c:	6e cf       	rjmp	.-292    	; 0xea <writeChar+0x30>
 20e:	f9 01       	movw	r30, r18
 210:	e4 51       	subi	r30, 0x14	; 20
 212:	ff 4f       	sbci	r31, 0xFF	; 255
 214:	80 81       	ld	r24, Z
 216:	84 0f       	add	r24, r20
 218:	80 83       	st	Z, r24
 21a:	35 96       	adiw	r30, 0x05	; 5
 21c:	90 81       	ld	r25, Z
 21e:	84 2f       	mov	r24, r20
 220:	88 0f       	add	r24, r24
 222:	88 0f       	add	r24, r24
 224:	84 0f       	add	r24, r20
 226:	98 0f       	add	r25, r24
 228:	90 83       	st	Z, r25
 22a:	35 96       	adiw	r30, 0x05	; 5
 22c:	90 81       	ld	r25, Z
 22e:	83 cf       	rjmp	.-250    	; 0x136 <writeChar+0x7c>
 230:	f9 01       	movw	r30, r18
 232:	e4 51       	subi	r30, 0x14	; 20
 234:	ff 4f       	sbci	r31, 0xFF	; 255
 236:	80 81       	ld	r24, Z
 238:	84 0f       	add	r24, r20
 23a:	80 83       	st	Z, r24
 23c:	35 96       	adiw	r30, 0x05	; 5
 23e:	90 81       	ld	r25, Z
 240:	84 2f       	mov	r24, r20
 242:	88 0f       	add	r24, r24
 244:	88 0f       	add	r24, r24
 246:	84 0f       	add	r24, r20
 248:	89 0f       	add	r24, r25
 24a:	80 83       	st	Z, r24
 24c:	35 96       	adiw	r30, 0x05	; 5
 24e:	80 81       	ld	r24, Z
 250:	54 2f       	mov	r21, r20
 252:	55 0f       	add	r21, r21
 254:	95 2f       	mov	r25, r21
 256:	99 0f       	add	r25, r25
 258:	99 0f       	add	r25, r25
 25a:	95 0f       	add	r25, r21
 25c:	49 0f       	add	r20, r25
 25e:	4c cf       	rjmp	.-360    	; 0xf8 <writeChar+0x3e>

00000260 <is_prime>:
			
		}
	}
}

int is_prime(long i){
 260:	4f 92       	push	r4
 262:	5f 92       	push	r5
 264:	6f 92       	push	r6
 266:	7f 92       	push	r7
 268:	8f 92       	push	r8
 26a:	9f 92       	push	r9
 26c:	af 92       	push	r10
 26e:	bf 92       	push	r11
 270:	cf 92       	push	r12
 272:	df 92       	push	r13
 274:	ef 92       	push	r14
 276:	ff 92       	push	r15
 278:	4b 01       	movw	r8, r22
 27a:	5c 01       	movw	r10, r24
 27c:	0e 94 c8 01 	call	0x390	; 0x390 <__floatsisf>
 280:	0e 94 2d 02 	call	0x45a	; 0x45a <sqrt>
 284:	2b 01       	movw	r4, r22
 286:	3c 01       	movw	r6, r24
	for(long n = 2; n < sqrt(i); n++){
 288:	82 e0       	ldi	r24, 0x02	; 2
 28a:	c8 2e       	mov	r12, r24
 28c:	d1 2c       	mov	r13, r1
 28e:	e1 2c       	mov	r14, r1
 290:	f1 2c       	mov	r15, r1
 292:	0f c0       	rjmp	.+30     	; 0x2b2 <is_prime+0x52>
		if(i % n == 0){
 294:	c5 01       	movw	r24, r10
 296:	b4 01       	movw	r22, r8
 298:	a7 01       	movw	r20, r14
 29a:	96 01       	movw	r18, r12
 29c:	0e 94 a7 02 	call	0x54e	; 0x54e <__divmodsi4>
 2a0:	67 2b       	or	r22, r23
 2a2:	68 2b       	or	r22, r24
 2a4:	69 2b       	or	r22, r25
 2a6:	f1 f0       	breq	.+60     	; 0x2e4 <is_prime+0x84>
		}
	}
}

int is_prime(long i){
	for(long n = 2; n < sqrt(i); n++){
 2a8:	8f ef       	ldi	r24, 0xFF	; 255
 2aa:	c8 1a       	sub	r12, r24
 2ac:	d8 0a       	sbc	r13, r24
 2ae:	e8 0a       	sbc	r14, r24
 2b0:	f8 0a       	sbc	r15, r24
 2b2:	c7 01       	movw	r24, r14
 2b4:	b6 01       	movw	r22, r12
 2b6:	0e 94 c8 01 	call	0x390	; 0x390 <__floatsisf>
 2ba:	a3 01       	movw	r20, r6
 2bc:	92 01       	movw	r18, r4
 2be:	0e 94 c1 01 	call	0x382	; 0x382 <__cmpsf2>
 2c2:	87 fd       	sbrc	r24, 7
 2c4:	e7 cf       	rjmp	.-50     	; 0x294 <is_prime+0x34>
		if(i % n == 0){
			return(0);
		}
	}
	return(1);
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
}
 2ca:	ff 90       	pop	r15
 2cc:	ef 90       	pop	r14
 2ce:	df 90       	pop	r13
 2d0:	cf 90       	pop	r12
 2d2:	bf 90       	pop	r11
 2d4:	af 90       	pop	r10
 2d6:	9f 90       	pop	r9
 2d8:	8f 90       	pop	r8
 2da:	7f 90       	pop	r7
 2dc:	6f 90       	pop	r6
 2de:	5f 90       	pop	r5
 2e0:	4f 90       	pop	r4
 2e2:	08 95       	ret
}

int is_prime(long i){
	for(long n = 2; n < sqrt(i); n++){
		if(i % n == 0){
			return(0);
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	f0 cf       	rjmp	.-32     	; 0x2ca <is_prime+0x6a>

000002ea <prime>:
		i /= 10;
		writeChar(ch, n);
	}
}

void prime(){
 2ea:	4f 92       	push	r4
 2ec:	5f 92       	push	r5
 2ee:	6f 92       	push	r6
 2f0:	7f 92       	push	r7
 2f2:	8f 92       	push	r8
 2f4:	9f 92       	push	r9
 2f6:	af 92       	push	r10
 2f8:	bf 92       	push	r11
 2fa:	ef 92       	push	r14
 2fc:	ff 92       	push	r15
 2fe:	0f 93       	push	r16
 300:	1f 93       	push	r17
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
	for(long i = 2; i <= 999; i++){
 306:	82 e0       	ldi	r24, 0x02	; 2
 308:	88 2e       	mov	r8, r24
 30a:	91 2c       	mov	r9, r1
 30c:	a1 2c       	mov	r10, r1
 30e:	b1 2c       	mov	r11, r1
	}
}

void writeLong(long i){
	for (int n = 5; n >= 0; n--) {
		char ch = (i % 10) + '0';
 310:	9a e0       	ldi	r25, 0x0A	; 10
 312:	49 2e       	mov	r4, r25
 314:	51 2c       	mov	r5, r1
 316:	61 2c       	mov	r6, r1
 318:	71 2c       	mov	r7, r1
	}
}

void prime(){
	for(long i = 2; i <= 999; i++){
		if(is_prime(i)){
 31a:	c5 01       	movw	r24, r10
 31c:	b4 01       	movw	r22, r8
 31e:	0e 94 30 01 	call	0x260	; 0x260 <is_prime>
 322:	89 2b       	or	r24, r25
 324:	99 f0       	breq	.+38     	; 0x34c <prime+0x62>
 326:	74 01       	movw	r14, r8
 328:	85 01       	movw	r16, r10
 32a:	c5 e0       	ldi	r28, 0x05	; 5
 32c:	d0 e0       	ldi	r29, 0x00	; 0
	}
}

void writeLong(long i){
	for (int n = 5; n >= 0; n--) {
		char ch = (i % 10) + '0';
 32e:	b7 01       	movw	r22, r14
 330:	c8 01       	movw	r24, r16
 332:	a3 01       	movw	r20, r6
 334:	92 01       	movw	r18, r4
 336:	0e 94 a7 02 	call	0x54e	; 0x54e <__divmodsi4>
 33a:	86 2f       	mov	r24, r22
		i /= 10;
 33c:	79 01       	movw	r14, r18
 33e:	8a 01       	movw	r16, r20
		writeChar(ch, n);
 340:	be 01       	movw	r22, r28
 342:	80 5d       	subi	r24, 0xD0	; 208
 344:	0e 94 5d 00 	call	0xba	; 0xba <writeChar>
		return;
	}
}

void writeLong(long i){
	for (int n = 5; n >= 0; n--) {
 348:	21 97       	sbiw	r28, 0x01	; 1
 34a:	88 f7       	brcc	.-30     	; 0x32e <prime+0x44>
		writeChar(ch, n);
	}
}

void prime(){
	for(long i = 2; i <= 999; i++){
 34c:	8f ef       	ldi	r24, 0xFF	; 255
 34e:	88 1a       	sub	r8, r24
 350:	98 0a       	sbc	r9, r24
 352:	a8 0a       	sbc	r10, r24
 354:	b8 0a       	sbc	r11, r24
 356:	88 ee       	ldi	r24, 0xE8	; 232
 358:	88 16       	cp	r8, r24
 35a:	83 e0       	ldi	r24, 0x03	; 3
 35c:	98 06       	cpc	r9, r24
 35e:	a1 04       	cpc	r10, r1
 360:	b1 04       	cpc	r11, r1
 362:	d9 f6       	brne	.-74     	; 0x31a <prime+0x30>
		if(is_prime(i)){
			writeLong(i);
			
		}
	}
}
 364:	df 91       	pop	r29
 366:	cf 91       	pop	r28
 368:	1f 91       	pop	r17
 36a:	0f 91       	pop	r16
 36c:	ff 90       	pop	r15
 36e:	ef 90       	pop	r14
 370:	bf 90       	pop	r11
 372:	af 90       	pop	r10
 374:	9f 90       	pop	r9
 376:	8f 90       	pop	r8
 378:	7f 90       	pop	r7
 37a:	6f 90       	pop	r6
 37c:	5f 90       	pop	r5
 37e:	4f 90       	pop	r4
 380:	08 95       	ret

00000382 <__cmpsf2>:
 382:	0e 94 03 02 	call	0x406	; 0x406 <__fp_cmp>
 386:	08 f4       	brcc	.+2      	; 0x38a <__cmpsf2+0x8>
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	08 95       	ret

0000038c <__floatunsisf>:
 38c:	e8 94       	clt
 38e:	09 c0       	rjmp	.+18     	; 0x3a2 <__floatsisf+0x12>

00000390 <__floatsisf>:
 390:	97 fb       	bst	r25, 7
 392:	3e f4       	brtc	.+14     	; 0x3a2 <__floatsisf+0x12>
 394:	90 95       	com	r25
 396:	80 95       	com	r24
 398:	70 95       	com	r23
 39a:	61 95       	neg	r22
 39c:	7f 4f       	sbci	r23, 0xFF	; 255
 39e:	8f 4f       	sbci	r24, 0xFF	; 255
 3a0:	9f 4f       	sbci	r25, 0xFF	; 255
 3a2:	99 23       	and	r25, r25
 3a4:	a9 f0       	breq	.+42     	; 0x3d0 <__floatsisf+0x40>
 3a6:	f9 2f       	mov	r31, r25
 3a8:	96 e9       	ldi	r25, 0x96	; 150
 3aa:	bb 27       	eor	r27, r27
 3ac:	93 95       	inc	r25
 3ae:	f6 95       	lsr	r31
 3b0:	87 95       	ror	r24
 3b2:	77 95       	ror	r23
 3b4:	67 95       	ror	r22
 3b6:	b7 95       	ror	r27
 3b8:	f1 11       	cpse	r31, r1
 3ba:	f8 cf       	rjmp	.-16     	; 0x3ac <__floatsisf+0x1c>
 3bc:	fa f4       	brpl	.+62     	; 0x3fc <__floatsisf+0x6c>
 3be:	bb 0f       	add	r27, r27
 3c0:	11 f4       	brne	.+4      	; 0x3c6 <__floatsisf+0x36>
 3c2:	60 ff       	sbrs	r22, 0
 3c4:	1b c0       	rjmp	.+54     	; 0x3fc <__floatsisf+0x6c>
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	16 c0       	rjmp	.+44     	; 0x3fc <__floatsisf+0x6c>
 3d0:	88 23       	and	r24, r24
 3d2:	11 f0       	breq	.+4      	; 0x3d8 <__floatsisf+0x48>
 3d4:	96 e9       	ldi	r25, 0x96	; 150
 3d6:	11 c0       	rjmp	.+34     	; 0x3fa <__floatsisf+0x6a>
 3d8:	77 23       	and	r23, r23
 3da:	21 f0       	breq	.+8      	; 0x3e4 <__floatsisf+0x54>
 3dc:	9e e8       	ldi	r25, 0x8E	; 142
 3de:	87 2f       	mov	r24, r23
 3e0:	76 2f       	mov	r23, r22
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <__floatsisf+0x5e>
 3e4:	66 23       	and	r22, r22
 3e6:	71 f0       	breq	.+28     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3e8:	96 e8       	ldi	r25, 0x86	; 134
 3ea:	86 2f       	mov	r24, r22
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	60 e0       	ldi	r22, 0x00	; 0
 3f0:	2a f0       	brmi	.+10     	; 0x3fc <__floatsisf+0x6c>
 3f2:	9a 95       	dec	r25
 3f4:	66 0f       	add	r22, r22
 3f6:	77 1f       	adc	r23, r23
 3f8:	88 1f       	adc	r24, r24
 3fa:	da f7       	brpl	.-10     	; 0x3f2 <__floatsisf+0x62>
 3fc:	88 0f       	add	r24, r24
 3fe:	96 95       	lsr	r25
 400:	87 95       	ror	r24
 402:	97 f9       	bld	r25, 7
 404:	08 95       	ret

00000406 <__fp_cmp>:
 406:	99 0f       	add	r25, r25
 408:	00 08       	sbc	r0, r0
 40a:	55 0f       	add	r21, r21
 40c:	aa 0b       	sbc	r26, r26
 40e:	e0 e8       	ldi	r30, 0x80	; 128
 410:	fe ef       	ldi	r31, 0xFE	; 254
 412:	16 16       	cp	r1, r22
 414:	17 06       	cpc	r1, r23
 416:	e8 07       	cpc	r30, r24
 418:	f9 07       	cpc	r31, r25
 41a:	c0 f0       	brcs	.+48     	; 0x44c <__fp_cmp+0x46>
 41c:	12 16       	cp	r1, r18
 41e:	13 06       	cpc	r1, r19
 420:	e4 07       	cpc	r30, r20
 422:	f5 07       	cpc	r31, r21
 424:	98 f0       	brcs	.+38     	; 0x44c <__fp_cmp+0x46>
 426:	62 1b       	sub	r22, r18
 428:	73 0b       	sbc	r23, r19
 42a:	84 0b       	sbc	r24, r20
 42c:	95 0b       	sbc	r25, r21
 42e:	39 f4       	brne	.+14     	; 0x43e <__fp_cmp+0x38>
 430:	0a 26       	eor	r0, r26
 432:	61 f0       	breq	.+24     	; 0x44c <__fp_cmp+0x46>
 434:	23 2b       	or	r18, r19
 436:	24 2b       	or	r18, r20
 438:	25 2b       	or	r18, r21
 43a:	21 f4       	brne	.+8      	; 0x444 <__fp_cmp+0x3e>
 43c:	08 95       	ret
 43e:	0a 26       	eor	r0, r26
 440:	09 f4       	brne	.+2      	; 0x444 <__fp_cmp+0x3e>
 442:	a1 40       	sbci	r26, 0x01	; 1
 444:	a6 95       	lsr	r26
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	81 1d       	adc	r24, r1
 44a:	81 1d       	adc	r24, r1
 44c:	08 95       	ret
 44e:	19 f4       	brne	.+6      	; 0x456 <__fp_cmp+0x50>
 450:	16 f4       	brtc	.+4      	; 0x456 <__fp_cmp+0x50>
 452:	0c 94 7b 02 	jmp	0x4f6	; 0x4f6 <__fp_nan>
 456:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__fp_mpack>

0000045a <sqrt>:
 45a:	0e 94 8d 02 	call	0x51a	; 0x51a <__fp_splitA>
 45e:	b8 f3       	brcs	.-18     	; 0x44e <__fp_cmp+0x48>
 460:	99 23       	and	r25, r25
 462:	c9 f3       	breq	.-14     	; 0x456 <__fp_cmp+0x50>
 464:	b6 f3       	brts	.-20     	; 0x452 <__fp_cmp+0x4c>
 466:	9f 57       	subi	r25, 0x7F	; 127
 468:	55 0b       	sbc	r21, r21
 46a:	87 ff       	sbrs	r24, 7
 46c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__fp_norm2>
 470:	00 24       	eor	r0, r0
 472:	a0 e6       	ldi	r26, 0x60	; 96
 474:	40 ea       	ldi	r20, 0xA0	; 160
 476:	90 01       	movw	r18, r0
 478:	80 58       	subi	r24, 0x80	; 128
 47a:	56 95       	lsr	r21
 47c:	97 95       	ror	r25
 47e:	28 f4       	brcc	.+10     	; 0x48a <sqrt+0x30>
 480:	80 5c       	subi	r24, 0xC0	; 192
 482:	66 0f       	add	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	88 1f       	adc	r24, r24
 488:	20 f0       	brcs	.+8      	; 0x492 <sqrt+0x38>
 48a:	26 17       	cp	r18, r22
 48c:	37 07       	cpc	r19, r23
 48e:	48 07       	cpc	r20, r24
 490:	30 f4       	brcc	.+12     	; 0x49e <sqrt+0x44>
 492:	62 1b       	sub	r22, r18
 494:	73 0b       	sbc	r23, r19
 496:	84 0b       	sbc	r24, r20
 498:	20 29       	or	r18, r0
 49a:	31 29       	or	r19, r1
 49c:	4a 2b       	or	r20, r26
 49e:	a6 95       	lsr	r26
 4a0:	17 94       	ror	r1
 4a2:	07 94       	ror	r0
 4a4:	20 25       	eor	r18, r0
 4a6:	31 25       	eor	r19, r1
 4a8:	4a 27       	eor	r20, r26
 4aa:	58 f7       	brcc	.-42     	; 0x482 <sqrt+0x28>
 4ac:	66 0f       	add	r22, r22
 4ae:	77 1f       	adc	r23, r23
 4b0:	88 1f       	adc	r24, r24
 4b2:	20 f0       	brcs	.+8      	; 0x4bc <sqrt+0x62>
 4b4:	26 17       	cp	r18, r22
 4b6:	37 07       	cpc	r19, r23
 4b8:	48 07       	cpc	r20, r24
 4ba:	30 f4       	brcc	.+12     	; 0x4c8 <sqrt+0x6e>
 4bc:	62 0b       	sbc	r22, r18
 4be:	73 0b       	sbc	r23, r19
 4c0:	84 0b       	sbc	r24, r20
 4c2:	20 0d       	add	r18, r0
 4c4:	31 1d       	adc	r19, r1
 4c6:	41 1d       	adc	r20, r1
 4c8:	a0 95       	com	r26
 4ca:	81 f7       	brne	.-32     	; 0x4ac <sqrt+0x52>
 4cc:	b9 01       	movw	r22, r18
 4ce:	84 2f       	mov	r24, r20
 4d0:	91 58       	subi	r25, 0x81	; 129
 4d2:	88 0f       	add	r24, r24
 4d4:	96 95       	lsr	r25
 4d6:	87 95       	ror	r24
 4d8:	08 95       	ret

000004da <__fp_mpack>:
 4da:	9f 3f       	cpi	r25, 0xFF	; 255
 4dc:	31 f0       	breq	.+12     	; 0x4ea <__fp_mpack_finite+0xc>

000004de <__fp_mpack_finite>:
 4de:	91 50       	subi	r25, 0x01	; 1
 4e0:	20 f4       	brcc	.+8      	; 0x4ea <__fp_mpack_finite+0xc>
 4e2:	87 95       	ror	r24
 4e4:	77 95       	ror	r23
 4e6:	67 95       	ror	r22
 4e8:	b7 95       	ror	r27
 4ea:	88 0f       	add	r24, r24
 4ec:	91 1d       	adc	r25, r1
 4ee:	96 95       	lsr	r25
 4f0:	87 95       	ror	r24
 4f2:	97 f9       	bld	r25, 7
 4f4:	08 95       	ret

000004f6 <__fp_nan>:
 4f6:	9f ef       	ldi	r25, 0xFF	; 255
 4f8:	80 ec       	ldi	r24, 0xC0	; 192
 4fa:	08 95       	ret

000004fc <__fp_norm2>:
 4fc:	91 50       	subi	r25, 0x01	; 1
 4fe:	50 40       	sbci	r21, 0x00	; 0
 500:	66 0f       	add	r22, r22
 502:	77 1f       	adc	r23, r23
 504:	88 1f       	adc	r24, r24
 506:	d2 f7       	brpl	.-12     	; 0x4fc <__fp_norm2>
 508:	08 95       	ret

0000050a <__fp_split3>:
 50a:	57 fd       	sbrc	r21, 7
 50c:	90 58       	subi	r25, 0x80	; 128
 50e:	44 0f       	add	r20, r20
 510:	55 1f       	adc	r21, r21
 512:	59 f0       	breq	.+22     	; 0x52a <__fp_splitA+0x10>
 514:	5f 3f       	cpi	r21, 0xFF	; 255
 516:	71 f0       	breq	.+28     	; 0x534 <__fp_splitA+0x1a>
 518:	47 95       	ror	r20

0000051a <__fp_splitA>:
 51a:	88 0f       	add	r24, r24
 51c:	97 fb       	bst	r25, 7
 51e:	99 1f       	adc	r25, r25
 520:	61 f0       	breq	.+24     	; 0x53a <__fp_splitA+0x20>
 522:	9f 3f       	cpi	r25, 0xFF	; 255
 524:	79 f0       	breq	.+30     	; 0x544 <__fp_splitA+0x2a>
 526:	87 95       	ror	r24
 528:	08 95       	ret
 52a:	12 16       	cp	r1, r18
 52c:	13 06       	cpc	r1, r19
 52e:	14 06       	cpc	r1, r20
 530:	55 1f       	adc	r21, r21
 532:	f2 cf       	rjmp	.-28     	; 0x518 <__fp_split3+0xe>
 534:	46 95       	lsr	r20
 536:	f1 df       	rcall	.-30     	; 0x51a <__fp_splitA>
 538:	08 c0       	rjmp	.+16     	; 0x54a <__fp_splitA+0x30>
 53a:	16 16       	cp	r1, r22
 53c:	17 06       	cpc	r1, r23
 53e:	18 06       	cpc	r1, r24
 540:	99 1f       	adc	r25, r25
 542:	f1 cf       	rjmp	.-30     	; 0x526 <__fp_splitA+0xc>
 544:	86 95       	lsr	r24
 546:	71 05       	cpc	r23, r1
 548:	61 05       	cpc	r22, r1
 54a:	08 94       	sec
 54c:	08 95       	ret

0000054e <__divmodsi4>:
 54e:	05 2e       	mov	r0, r21
 550:	97 fb       	bst	r25, 7
 552:	1e f4       	brtc	.+6      	; 0x55a <__divmodsi4+0xc>
 554:	00 94       	com	r0
 556:	0e 94 be 02 	call	0x57c	; 0x57c <__negsi2>
 55a:	57 fd       	sbrc	r21, 7
 55c:	07 d0       	rcall	.+14     	; 0x56c <__divmodsi4_neg2>
 55e:	0e 94 cc 02 	call	0x598	; 0x598 <__udivmodsi4>
 562:	07 fc       	sbrc	r0, 7
 564:	03 d0       	rcall	.+6      	; 0x56c <__divmodsi4_neg2>
 566:	4e f4       	brtc	.+18     	; 0x57a <__divmodsi4_exit>
 568:	0c 94 be 02 	jmp	0x57c	; 0x57c <__negsi2>

0000056c <__divmodsi4_neg2>:
 56c:	50 95       	com	r21
 56e:	40 95       	com	r20
 570:	30 95       	com	r19
 572:	21 95       	neg	r18
 574:	3f 4f       	sbci	r19, 0xFF	; 255
 576:	4f 4f       	sbci	r20, 0xFF	; 255
 578:	5f 4f       	sbci	r21, 0xFF	; 255

0000057a <__divmodsi4_exit>:
 57a:	08 95       	ret

0000057c <__negsi2>:
 57c:	90 95       	com	r25
 57e:	80 95       	com	r24
 580:	70 95       	com	r23
 582:	61 95       	neg	r22
 584:	7f 4f       	sbci	r23, 0xFF	; 255
 586:	8f 4f       	sbci	r24, 0xFF	; 255
 588:	9f 4f       	sbci	r25, 0xFF	; 255
 58a:	08 95       	ret

0000058c <__tablejump2__>:
 58c:	ee 0f       	add	r30, r30
 58e:	ff 1f       	adc	r31, r31
 590:	05 90       	lpm	r0, Z+
 592:	f4 91       	lpm	r31, Z
 594:	e0 2d       	mov	r30, r0
 596:	09 94       	ijmp

00000598 <__udivmodsi4>:
 598:	a1 e2       	ldi	r26, 0x21	; 33
 59a:	1a 2e       	mov	r1, r26
 59c:	aa 1b       	sub	r26, r26
 59e:	bb 1b       	sub	r27, r27
 5a0:	fd 01       	movw	r30, r26
 5a2:	0d c0       	rjmp	.+26     	; 0x5be <__udivmodsi4_ep>

000005a4 <__udivmodsi4_loop>:
 5a4:	aa 1f       	adc	r26, r26
 5a6:	bb 1f       	adc	r27, r27
 5a8:	ee 1f       	adc	r30, r30
 5aa:	ff 1f       	adc	r31, r31
 5ac:	a2 17       	cp	r26, r18
 5ae:	b3 07       	cpc	r27, r19
 5b0:	e4 07       	cpc	r30, r20
 5b2:	f5 07       	cpc	r31, r21
 5b4:	20 f0       	brcs	.+8      	; 0x5be <__udivmodsi4_ep>
 5b6:	a2 1b       	sub	r26, r18
 5b8:	b3 0b       	sbc	r27, r19
 5ba:	e4 0b       	sbc	r30, r20
 5bc:	f5 0b       	sbc	r31, r21

000005be <__udivmodsi4_ep>:
 5be:	66 1f       	adc	r22, r22
 5c0:	77 1f       	adc	r23, r23
 5c2:	88 1f       	adc	r24, r24
 5c4:	99 1f       	adc	r25, r25
 5c6:	1a 94       	dec	r1
 5c8:	69 f7       	brne	.-38     	; 0x5a4 <__udivmodsi4_loop>
 5ca:	60 95       	com	r22
 5cc:	70 95       	com	r23
 5ce:	80 95       	com	r24
 5d0:	90 95       	com	r25
 5d2:	9b 01       	movw	r18, r22
 5d4:	ac 01       	movw	r20, r24
 5d6:	bd 01       	movw	r22, r26
 5d8:	cf 01       	movw	r24, r30
 5da:	08 95       	ret

000005dc <_exit>:
 5dc:	f8 94       	cli

000005de <__stop_program>:
 5de:	ff cf       	rjmp	.-2      	; 0x5de <__stop_program>
