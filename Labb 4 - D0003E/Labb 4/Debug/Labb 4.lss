
Labb 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001f18  00001fac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f18  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011c  0080011c  00001fc8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001fc8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ff8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000027ac  00000000  00000000  00002270  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000feb  00000000  00000000  00004a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000149d  00000000  00000000  00005a07  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bcc  00000000  00000000  00006ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090d  00000000  00000000  00007a70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002430  00000000  00000000  0000837d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000a7ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 2c 04 	jmp	0x858	; 0x858 <__vector_1>
       8:	0c 94 9b 04 	jmp	0x936	; 0x936 <__vector_2>
       c:	0c 94 0a 05 	jmp	0xa14	; 0xa14 <__vector_3>
      10:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__vector_4>
      14:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 53 0c 	jmp	0x18a6	; 0x18a6 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 01 0c 	jmp	0x1802	; 0x1802 <__vector_9>
      28:	0c 94 57 06 	jmp	0xcae	; 0xcae <__vector_10>
      2c:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__vector_11>
      30:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__vector_12>
      34:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__vector_13>
      38:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__vector_14>
      3c:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__vector_15>
      40:	0c 94 f1 08 	jmp	0x11e2	; 0x11e2 <__vector_16>
      44:	0c 94 60 09 	jmp	0x12c0	; 0x12c0 <__vector_17>
      48:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__vector_18>
      4c:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__vector_19>
      50:	0c 94 ad 0a 	jmp	0x155a	; 0x155a <__vector_20>
      54:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__vector_21>
      58:	0c 94 8b 0b 	jmp	0x1716	; 0x1716 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e8 e1       	ldi	r30, 0x18	; 24
      70:	ff e1       	ldi	r31, 0x1F	; 31
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ac 31       	cpi	r26, 0x1C	; 28
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ac e1       	ldi	r26, 0x1C	; 28
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	af 36       	cpi	r26, 0x6F	; 111
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <main>
      92:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <LCD_Init>:
		LCDCS    - Asynchronous clock source
		LCDMUX's - Duty = 1/4, Bias = 1/3
		LCDPM's  - Number of Segments = 25
	*/
	
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
      9a:	87 eb       	ldi	r24, 0xB7	; 183
      9c:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	/*
		LCD Frame Rate Register:
		LCDCD's - Prescaler setting N = 16
	*/
	
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
      a0:	87 e0       	ldi	r24, 0x07	; 7
      a2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCD Contrast Control Register
		None of the LCDDC's used = 300 microseconds
		LCDCC's = 3,35V
	*/
	
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
      a6:	8f e0       	ldi	r24, 0x0F	; 15
      a8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	
	/*
		LCDEN = LCD Enabled
		LCDAB = Low Power Waveform
	*/
	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
      ac:	80 ec       	ldi	r24, 0xC0	; 192
      ae:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	
	// start joystick
	//DDRB = 0b11010000;								//För att tillåta sättningen av bitarna (Tror vi :))
	//EIFR = (1 << PCIF0) | (1 << PCIF1);
	DDRB  = (1 << DDB7) | (1 << DDB6) | (1 << DDB4) | DDRB;
      b2:	84 b1       	in	r24, 0x04	; 4
      b4:	80 6d       	ori	r24, 0xD0	; 208
      b6:	84 b9       	out	0x04, r24	; 4
	DDRE  = (1 << DDE3) | (1 << DDE2) | DDRE;
      b8:	8d b1       	in	r24, 0x0d	; 13
      ba:	8c 60       	ori	r24, 0x0C	; 12
      bc:	8d b9       	out	0x0d, r24	; 13
	EIMSK = (1 << PCIE1) | (1 << PCIE0) | EIMSK;
      be:	8d b3       	in	r24, 0x1d	; 29
      c0:	80 6c       	ori	r24, 0xC0	; 192
      c2:	8d bb       	out	0x1d, r24	; 29
	/*
		Joystick up
	*/
	PCMSK1 = (1 << PCINT14) | PCMSK1;
      c4:	ec e6       	ldi	r30, 0x6C	; 108
      c6:	f0 e0       	ldi	r31, 0x00	; 0
      c8:	80 81       	ld	r24, Z
      ca:	80 64       	ori	r24, 0x40	; 64
      cc:	80 83       	st	Z, r24
	PORTB = (1 << PB6) | PORTB;
      ce:	85 b1       	in	r24, 0x05	; 5
      d0:	80 64       	ori	r24, 0x40	; 64
      d2:	85 b9       	out	0x05, r24	; 5
	
	/*
		Joystick down
	*/
	PCMSK1 = (1 << PCINT15) | PCMSK1;
      d4:	80 81       	ld	r24, Z
      d6:	80 68       	ori	r24, 0x80	; 128
      d8:	80 83       	st	Z, r24
	PORTB = (1 << PB7) | PORTB;
      da:	85 b1       	in	r24, 0x05	; 5
      dc:	80 68       	ori	r24, 0x80	; 128
      de:	85 b9       	out	0x05, r24	; 5
	
	/*
		Joystick right
	*/
	PCMSK0 = (1 << PCINT3) | PCMSK0;
      e0:	ab e6       	ldi	r26, 0x6B	; 107
      e2:	b0 e0       	ldi	r27, 0x00	; 0
      e4:	8c 91       	ld	r24, X
      e6:	88 60       	ori	r24, 0x08	; 8
      e8:	8c 93       	st	X, r24
	PORTE = (1 << PE3) | PORTE;
      ea:	8e b1       	in	r24, 0x0e	; 14
      ec:	88 60       	ori	r24, 0x08	; 8
      ee:	8e b9       	out	0x0e, r24	; 14
	
	/*
		Joystick left
	*/
	PCMSK0 =  (1 << PCINT2) | PCMSK0;
      f0:	8c 91       	ld	r24, X
      f2:	84 60       	ori	r24, 0x04	; 4
      f4:	8c 93       	st	X, r24
	PORTE =  (1 << PE2) | PORTE;
      f6:	8e b1       	in	r24, 0x0e	; 14
      f8:	84 60       	ori	r24, 0x04	; 4
      fa:	8e b9       	out	0x0e, r24	; 14
	
	/*
		Joystick press
	*/
	PCMSK1 = (1 << PCINT12) | PCMSK1;
      fc:	80 81       	ld	r24, Z
      fe:	80 61       	ori	r24, 0x10	; 16
     100:	80 83       	st	Z, r24
	PORTB = (1 << PB4) | PORTB;
     102:	85 b1       	in	r24, 0x05	; 5
     104:	80 61       	ori	r24, 0x10	; 16
     106:	85 b9       	out	0x05, r24	; 5
	
	//LCDDR1  = 0x40 | (LCDDR1  & 0x99);
	LCDDR0  = 0x20   | (LCDDR0  & 0x99);
     108:	ec ee       	ldi	r30, 0xEC	; 236
     10a:	f0 e0       	ldi	r31, 0x00	; 0
     10c:	80 81       	ld	r24, Z
     10e:	89 79       	andi	r24, 0x99	; 153
     110:	80 62       	ori	r24, 0x20	; 32
     112:	80 83       	st	Z, r24
     114:	08 95       	ret

00000116 <writeChar>:
	pp++;
	writeChar( num % 10 + '0', pp);
}

void writeChar(char ch, int pos)
{
     116:	cf 93       	push	r28
     118:	df 93       	push	r29
     11a:	cd b7       	in	r28, 0x3d	; 61
     11c:	de b7       	in	r29, 0x3e	; 62
     11e:	64 97       	sbiw	r28, 0x14	; 20
     120:	0f b6       	in	r0, 0x3f	; 63
     122:	f8 94       	cli
     124:	de bf       	out	0x3e, r29	; 62
     126:	0f be       	out	0x3f, r0	; 63
     128:	cd bf       	out	0x3d, r28	; 61
	// All the numbers
	// 0 - 0x1551, 1 - 0x0110, 2 - 0x1E11, 3 - 0x1B11, 4 - 0x0B50, 5 - 0x1B41, 6 - 0x1F41, 7 - 0x0111, 8 - 0x1F51, 9 - 0x0B51
	uint16_t scc[] = {0x1551, 0x0110, 0x1E11, 0x1B11, 0x0B50, 0x1B41, 0x1F41, 0x0111, 0x1F51, 0x0B51};
     12a:	94 e1       	ldi	r25, 0x14	; 20
     12c:	e8 e0       	ldi	r30, 0x08	; 8
     12e:	f1 e0       	ldi	r31, 0x01	; 1
     130:	de 01       	movw	r26, r28
     132:	11 96       	adiw	r26, 0x01	; 1
     134:	01 90       	ld	r0, Z+
     136:	0d 92       	st	X+, r0
     138:	9a 95       	dec	r25
     13a:	e1 f7       	brne	.-8      	; 0x134 <writeChar+0x1e>
	
	if(pos >= 0 && pos <= 5){
     13c:	66 30       	cpi	r22, 0x06	; 6
     13e:	71 05       	cpc	r23, r1
     140:	08 f0       	brcs	.+2      	; 0x144 <writeChar+0x2e>
     142:	46 c0       	rjmp	.+140    	; 0x1d0 <writeChar+0xba>
		if (ch >= '0' || ch <= '9'){
			int pair = pos / 2;					      // Make sure it's either pair 0,1 - 2,3 or 4,5
     144:	fb 01       	movw	r30, r22
     146:	77 23       	and	r23, r23
     148:	0c f4       	brge	.+2      	; 0x14c <writeChar+0x36>
     14a:	31 96       	adiw	r30, 0x01	; 1
     14c:	f5 95       	asr	r31
     14e:	e7 95       	ror	r30
			uint8_t *lcddr = (uint8_t *) 0xEC + pair; // Point to register position 0xEC which is LCDDR0 and add pair to get LCDDR0, LCDDR1 or LCDDR2
     150:	e4 51       	subi	r30, 0x14	; 20
     152:	ff 4f       	sbci	r31, 0xFF	; 255
			uint16_t num = scc[ch - '0'];			  // Get the hexadecimal number from the list
     154:	a8 2f       	mov	r26, r24
     156:	b0 e0       	ldi	r27, 0x00	; 0
     158:	d0 97       	sbiw	r26, 0x30	; 48
     15a:	aa 0f       	add	r26, r26
     15c:	bb 1f       	adc	r27, r27
     15e:	81 e0       	ldi	r24, 0x01	; 1
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	8c 0f       	add	r24, r28
     164:	9d 1f       	adc	r25, r29
     166:	a8 0f       	add	r26, r24
     168:	b9 1f       	adc	r27, r25
     16a:	0d 90       	ld	r0, X+
     16c:	bc 91       	ld	r27, X
     16e:	a0 2d       	mov	r26, r0

			for (int i = 0; i <= 3; i++) {			  // Loop through every number in the hexadecimal number
     170:	40 e0       	ldi	r20, 0x00	; 0
     172:	50 e0       	ldi	r21, 0x00	; 0
     174:	2a c0       	rjmp	.+84     	; 0x1ca <writeChar+0xb4>
				int nibble = num & 0xF;				  // Get the least significant number in the hex
     176:	cd 01       	movw	r24, r26
     178:	8f 70       	andi	r24, 0x0F	; 15
     17a:	99 27       	eor	r25, r25
				
				if(pos % 2 == 1) {				      // Check if the nibble parts should be in the left or right number in the pair
     17c:	9b 01       	movw	r18, r22
     17e:	21 70       	andi	r18, 0x01	; 1
     180:	30 78       	andi	r19, 0x80	; 128
     182:	33 23       	and	r19, r19
     184:	34 f4       	brge	.+12     	; 0x192 <writeChar+0x7c>
     186:	21 50       	subi	r18, 0x01	; 1
     188:	31 09       	sbc	r19, r1
     18a:	2e 6f       	ori	r18, 0xFE	; 254
     18c:	3f 6f       	ori	r19, 0xFF	; 255
     18e:	2f 5f       	subi	r18, 0xFF	; 255
     190:	3f 4f       	sbci	r19, 0xFF	; 255
     192:	21 30       	cpi	r18, 0x01	; 1
     194:	31 05       	cpc	r19, r1
     196:	51 f4       	brne	.+20     	; 0x1ac <writeChar+0x96>
					nibble *= 0x10;					  // If pos % 2 == 1 -> nibble will load in right digit
     198:	82 95       	swap	r24
     19a:	92 95       	swap	r25
     19c:	90 7f       	andi	r25, 0xF0	; 240
     19e:	98 27       	eor	r25, r24
     1a0:	80 7f       	andi	r24, 0xF0	; 240
     1a2:	98 27       	eor	r25, r24
					*lcddr = *lcddr & 0xF;
     1a4:	20 81       	ld	r18, Z
     1a6:	2f 70       	andi	r18, 0x0F	; 15
     1a8:	20 83       	st	Z, r18
     1aa:	03 c0       	rjmp	.+6      	; 0x1b2 <writeChar+0x9c>
				}
				
				else {
					*lcddr = *lcddr & 0xF0;
     1ac:	20 81       	ld	r18, Z
     1ae:	20 7f       	andi	r18, 0xF0	; 240
     1b0:	20 83       	st	Z, r18
				}
				
				*lcddr = *lcddr | nibble;			  // Write the nibble to the digit
     1b2:	90 81       	ld	r25, Z
     1b4:	89 2b       	or	r24, r25
     1b6:	80 83       	st	Z, r24
				lcddr += 5;							  // Go to LCDDRx + 5
     1b8:	35 96       	adiw	r30, 0x05	; 5
				num /= 0x10;						  // Next nibble
     1ba:	b2 95       	swap	r27
     1bc:	a2 95       	swap	r26
     1be:	af 70       	andi	r26, 0x0F	; 15
     1c0:	ab 27       	eor	r26, r27
     1c2:	bf 70       	andi	r27, 0x0F	; 15
     1c4:	ab 27       	eor	r26, r27
		if (ch >= '0' || ch <= '9'){
			int pair = pos / 2;					      // Make sure it's either pair 0,1 - 2,3 or 4,5
			uint8_t *lcddr = (uint8_t *) 0xEC + pair; // Point to register position 0xEC which is LCDDR0 and add pair to get LCDDR0, LCDDR1 or LCDDR2
			uint16_t num = scc[ch - '0'];			  // Get the hexadecimal number from the list

			for (int i = 0; i <= 3; i++) {			  // Loop through every number in the hexadecimal number
     1c6:	4f 5f       	subi	r20, 0xFF	; 255
     1c8:	5f 4f       	sbci	r21, 0xFF	; 255
     1ca:	44 30       	cpi	r20, 0x04	; 4
     1cc:	51 05       	cpc	r21, r1
     1ce:	9c f2       	brlt	.-90     	; 0x176 <writeChar+0x60>
				lcddr += 5;							  // Go to LCDDRx + 5
				num /= 0x10;						  // Next nibble
			}
		}
	}
}
     1d0:	64 96       	adiw	r28, 0x14	; 20
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	f8 94       	cli
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	0f be       	out	0x3f, r0	; 63
     1da:	cd bf       	out	0x3d, r28	; 61
     1dc:	df 91       	pop	r29
     1de:	cf 91       	pop	r28
     1e0:	08 95       	ret

000001e2 <printAt>:
	
	
	
}

void printAt(long num, int pos) {
     1e2:	8f 92       	push	r8
     1e4:	9f 92       	push	r9
     1e6:	af 92       	push	r10
     1e8:	bf 92       	push	r11
     1ea:	cf 92       	push	r12
     1ec:	df 92       	push	r13
     1ee:	ef 92       	push	r14
     1f0:	ff 92       	push	r15
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	4b 01       	movw	r8, r22
     1f8:	5c 01       	movw	r10, r24
     1fa:	ea 01       	movw	r28, r20
	int pp = pos;
	writeChar( (num % 100) / 10 + '0', pp);
     1fc:	24 e6       	ldi	r18, 0x64	; 100
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	40 e0       	ldi	r20, 0x00	; 0
     202:	50 e0       	ldi	r21, 0x00	; 0
     204:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <__divmodsi4>
     208:	0f 2e       	mov	r0, r31
     20a:	fa e0       	ldi	r31, 0x0A	; 10
     20c:	cf 2e       	mov	r12, r31
     20e:	d1 2c       	mov	r13, r1
     210:	e1 2c       	mov	r14, r1
     212:	f1 2c       	mov	r15, r1
     214:	f0 2d       	mov	r31, r0
     216:	a7 01       	movw	r20, r14
     218:	96 01       	movw	r18, r12
     21a:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <__divmodsi4>
     21e:	be 01       	movw	r22, r28
     220:	80 e3       	ldi	r24, 0x30	; 48
     222:	82 0f       	add	r24, r18
     224:	0e 94 8b 00 	call	0x116	; 0x116 <writeChar>
	pp++;
     228:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
     22a:	c5 01       	movw	r24, r10
     22c:	b4 01       	movw	r22, r8
     22e:	a7 01       	movw	r20, r14
     230:	96 01       	movw	r18, r12
     232:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <__divmodsi4>
     236:	86 2f       	mov	r24, r22
     238:	be 01       	movw	r22, r28
     23a:	80 5d       	subi	r24, 0xD0	; 208
     23c:	0e 94 8b 00 	call	0x116	; 0x116 <writeChar>
}
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	ff 90       	pop	r15
     246:	ef 90       	pop	r14
     248:	df 90       	pop	r13
     24a:	cf 90       	pop	r12
     24c:	bf 90       	pop	r11
     24e:	af 90       	pop	r10
     250:	9f 90       	pop	r9
     252:	8f 90       	pop	r8
     254:	08 95       	ret

00000256 <updatedisplay>:
// 		return self->pulse->pulse2->currentFreq;
// 	}
// }

void updatedisplay(int pos){
	printAt(3, pos);
     256:	ac 01       	movw	r20, r24
     258:	63 e0       	ldi	r22, 0x03	; 3
     25a:	70 e0       	ldi	r23, 0x00	; 0
     25c:	80 e0       	ldi	r24, 0x00	; 0
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <printAt>
     264:	08 95       	ret

00000266 <direction>:
#include "Joystick.h"
//#include "TinyTimber.h"
//#include "PulseGenerator.h"
//#include "Porthandler.h"

void direction(Joystick *self){
     266:	cf 92       	push	r12
     268:	df 92       	push	r13
     26a:	ef 92       	push	r14
     26c:	ff 92       	push	r15
     26e:	0f 93       	push	r16
     270:	1f 93       	push	r17
	if (PINB >> 7 == 0){
     272:	1f 99       	sbic	0x03, 7	; 3
     274:	31 c0       	rjmp	.+98     	; 0x2d8 <direction+0x72>
		if(self->pulse->focus == 1){
     276:	dc 01       	movw	r26, r24
     278:	14 96       	adiw	r26, 0x04	; 4
     27a:	ed 91       	ld	r30, X+
     27c:	fc 91       	ld	r31, X
     27e:	15 97       	sbiw	r26, 0x05	; 5
     280:	84 81       	ldd	r24, Z+4	; 0x04
     282:	95 81       	ldd	r25, Z+5	; 0x05
     284:	01 97       	sbiw	r24, 0x01	; 1
     286:	a1 f4       	brne	.+40     	; 0x2b0 <direction+0x4a>
			AFTER(MSEC(400), self->pulse->pulse1, decrease, 0);
     288:	06 81       	ldd	r16, Z+6	; 0x06
     28a:	17 81       	ldd	r17, Z+7	; 0x07
     28c:	c1 2c       	mov	r12, r1
     28e:	d1 2c       	mov	r13, r1
     290:	0f 2e       	mov	r0, r31
     292:	f7 e8       	ldi	r31, 0x87	; 135
     294:	ef 2e       	mov	r14, r31
     296:	f2 e0       	ldi	r31, 0x02	; 2
     298:	ff 2e       	mov	r15, r31
     29a:	f0 2d       	mov	r31, r0
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	a9 01       	movw	r20, r18
     2a2:	64 ed       	ldi	r22, 0xD4	; 212
     2a4:	70 e3       	ldi	r23, 0x30	; 48
     2a6:	80 e0       	ldi	r24, 0x00	; 0
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
     2ae:	7d c0       	rjmp	.+250    	; 0x3aa <direction+0x144>
		}else{
			AFTER(MSEC(400), self->pulse->pulse2, decrease, 0);
     2b0:	00 85       	ldd	r16, Z+8	; 0x08
     2b2:	11 85       	ldd	r17, Z+9	; 0x09
     2b4:	c1 2c       	mov	r12, r1
     2b6:	d1 2c       	mov	r13, r1
     2b8:	0f 2e       	mov	r0, r31
     2ba:	f7 e8       	ldi	r31, 0x87	; 135
     2bc:	ef 2e       	mov	r14, r31
     2be:	f2 e0       	ldi	r31, 0x02	; 2
     2c0:	ff 2e       	mov	r15, r31
     2c2:	f0 2d       	mov	r31, r0
     2c4:	20 e0       	ldi	r18, 0x00	; 0
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	a9 01       	movw	r20, r18
     2ca:	64 ed       	ldi	r22, 0xD4	; 212
     2cc:	70 e3       	ldi	r23, 0x30	; 48
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
     2d6:	69 c0       	rjmp	.+210    	; 0x3aa <direction+0x144>
		}
	}
	
	else if (PINB >> 6 == 0){
     2d8:	23 b1       	in	r18, 0x03	; 3
     2da:	22 95       	swap	r18
     2dc:	26 95       	lsr	r18
     2de:	26 95       	lsr	r18
     2e0:	23 70       	andi	r18, 0x03	; 3
     2e2:	89 f5       	brne	.+98     	; 0x346 <direction+0xe0>
		if(self->pulse->focus == 1){
     2e4:	dc 01       	movw	r26, r24
     2e6:	14 96       	adiw	r26, 0x04	; 4
     2e8:	ed 91       	ld	r30, X+
     2ea:	fc 91       	ld	r31, X
     2ec:	15 97       	sbiw	r26, 0x05	; 5
     2ee:	84 81       	ldd	r24, Z+4	; 0x04
     2f0:	95 81       	ldd	r25, Z+5	; 0x05
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	a1 f4       	brne	.+40     	; 0x31e <direction+0xb8>
			AFTER(MSEC(400), self->pulse->pulse1, increase, 0);
     2f6:	06 81       	ldd	r16, Z+6	; 0x06
     2f8:	17 81       	ldd	r17, Z+7	; 0x07
     2fa:	c1 2c       	mov	r12, r1
     2fc:	d1 2c       	mov	r13, r1
     2fe:	0f 2e       	mov	r0, r31
     300:	fc e7       	ldi	r31, 0x7C	; 124
     302:	ef 2e       	mov	r14, r31
     304:	f2 e0       	ldi	r31, 0x02	; 2
     306:	ff 2e       	mov	r15, r31
     308:	f0 2d       	mov	r31, r0
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	a9 01       	movw	r20, r18
     310:	64 ed       	ldi	r22, 0xD4	; 212
     312:	70 e3       	ldi	r23, 0x30	; 48
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
     31c:	46 c0       	rjmp	.+140    	; 0x3aa <direction+0x144>
		}else{
			AFTER(MSEC(400), self->pulse->pulse2, increase, 0);
     31e:	00 85       	ldd	r16, Z+8	; 0x08
     320:	11 85       	ldd	r17, Z+9	; 0x09
     322:	c1 2c       	mov	r12, r1
     324:	d1 2c       	mov	r13, r1
     326:	0f 2e       	mov	r0, r31
     328:	fc e7       	ldi	r31, 0x7C	; 124
     32a:	ef 2e       	mov	r14, r31
     32c:	f2 e0       	ldi	r31, 0x02	; 2
     32e:	ff 2e       	mov	r15, r31
     330:	f0 2d       	mov	r31, r0
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	a9 01       	movw	r20, r18
     338:	64 ed       	ldi	r22, 0xD4	; 212
     33a:	70 e3       	ldi	r23, 0x30	; 48
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
     344:	32 c0       	rjmp	.+100    	; 0x3aa <direction+0x144>
		}
	}
	
	else if(PINB >> 4 == 0){
     346:	23 b1       	in	r18, 0x03	; 3
     348:	22 95       	swap	r18
     34a:	2f 70       	andi	r18, 0x0F	; 15
     34c:	71 f5       	brne	.+92     	; 0x3aa <direction+0x144>
		if(self->pulse->focus == 1){
     34e:	dc 01       	movw	r26, r24
     350:	14 96       	adiw	r26, 0x04	; 4
     352:	ed 91       	ld	r30, X+
     354:	fc 91       	ld	r31, X
     356:	15 97       	sbiw	r26, 0x05	; 5
     358:	84 81       	ldd	r24, Z+4	; 0x04
     35a:	95 81       	ldd	r25, Z+5	; 0x05
     35c:	01 97       	sbiw	r24, 0x01	; 1
     35e:	99 f4       	brne	.+38     	; 0x386 <direction+0x120>
			ASYNC(self->pulse->pulse1, stored, 0);
     360:	06 81       	ldd	r16, Z+6	; 0x06
     362:	17 81       	ldd	r17, Z+7	; 0x07
     364:	c1 2c       	mov	r12, r1
     366:	d1 2c       	mov	r13, r1
     368:	0f 2e       	mov	r0, r31
     36a:	f3 e9       	ldi	r31, 0x93	; 147
     36c:	ef 2e       	mov	r14, r31
     36e:	f2 e0       	ldi	r31, 0x02	; 2
     370:	ff 2e       	mov	r15, r31
     372:	f0 2d       	mov	r31, r0
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	a9 01       	movw	r20, r18
     37a:	60 e0       	ldi	r22, 0x00	; 0
     37c:	70 e0       	ldi	r23, 0x00	; 0
     37e:	cb 01       	movw	r24, r22
     380:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
     384:	12 c0       	rjmp	.+36     	; 0x3aa <direction+0x144>
		}else{
			ASYNC(self->pulse->pulse2, stored, 0);
     386:	00 85       	ldd	r16, Z+8	; 0x08
     388:	11 85       	ldd	r17, Z+9	; 0x09
     38a:	c1 2c       	mov	r12, r1
     38c:	d1 2c       	mov	r13, r1
     38e:	0f 2e       	mov	r0, r31
     390:	f3 e9       	ldi	r31, 0x93	; 147
     392:	ef 2e       	mov	r14, r31
     394:	f2 e0       	ldi	r31, 0x02	; 2
     396:	ff 2e       	mov	r15, r31
     398:	f0 2d       	mov	r31, r0
     39a:	20 e0       	ldi	r18, 0x00	; 0
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	a9 01       	movw	r20, r18
     3a0:	60 e0       	ldi	r22, 0x00	; 0
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	cb 01       	movw	r24, r22
     3a6:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
		}
	}
}
     3aa:	1f 91       	pop	r17
     3ac:	0f 91       	pop	r16
     3ae:	ff 90       	pop	r15
     3b0:	ef 90       	pop	r14
     3b2:	df 90       	pop	r13
     3b4:	cf 90       	pop	r12
     3b6:	08 95       	ret

000003b8 <main>:
#include "Joystick.h"



int main(void)
{
     3b8:	ef 92       	push	r14
     3ba:	ff 92       	push	r15
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	cd b7       	in	r28, 0x3d	; 61
     3c6:	de b7       	in	r29, 0x3e	; 62
     3c8:	a8 97       	sbiw	r28, 0x28	; 40
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
    CLKPR = 0x80;
     3d4:	e1 e6       	ldi	r30, 0x61	; 97
     3d6:	f0 e0       	ldi	r31, 0x00	; 0
     3d8:	80 e8       	ldi	r24, 0x80	; 128
     3da:	80 83       	st	Z, r24
    CLKPR = 0x00;
     3dc:	10 82       	st	Z, r1
    LCD_Init();
     3de:	0e 94 4d 00 	call	0x9a	; 0x9a <LCD_Init>
	
	GUI gui = initGUI();
     3e2:	1a 82       	std	Y+2, r1	; 0x02
     3e4:	19 82       	std	Y+1, r1	; 0x01
     3e6:	1c 82       	std	Y+4, r1	; 0x04
     3e8:	1b 82       	std	Y+3, r1	; 0x03
	Pulsegen pulse1 = initPulsegen(0, 0);
     3ea:	88 e0       	ldi	r24, 0x08	; 8
     3ec:	de 01       	movw	r26, r28
     3ee:	15 96       	adiw	r26, 0x05	; 5
     3f0:	fd 01       	movw	r30, r26
     3f2:	28 2f       	mov	r18, r24
     3f4:	11 92       	st	Z+, r1
     3f6:	2a 95       	dec	r18
     3f8:	e9 f7       	brne	.-6      	; 0x3f4 <main+0x3c>
	Pulsegen pulse2 = initPulsegen(0, 0);
     3fa:	ae 01       	movw	r20, r28
     3fc:	43 5f       	subi	r20, 0xF3	; 243
     3fe:	5f 4f       	sbci	r21, 0xFF	; 255
     400:	fa 01       	movw	r30, r20
     402:	28 2f       	mov	r18, r24
     404:	11 92       	st	Z+, r1
     406:	2a 95       	dec	r18
     408:	e9 f7       	brne	.-6      	; 0x404 <__DATA_REGION_LENGTH__+0x4>
	Pulse pulse = initPulse(1, &pulse1, &pulse2, &gui);
     40a:	1e 8a       	std	Y+22, r1	; 0x16
     40c:	1d 8a       	std	Y+21, r1	; 0x15
     40e:	18 8e       	std	Y+24, r1	; 0x18
     410:	1f 8a       	std	Y+23, r1	; 0x17
     412:	21 e0       	ldi	r18, 0x01	; 1
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	3a 8f       	std	Y+26, r19	; 0x1a
     418:	29 8f       	std	Y+25, r18	; 0x19
     41a:	bc 8f       	std	Y+28, r27	; 0x1c
     41c:	ab 8f       	std	Y+27, r26	; 0x1b
     41e:	5e 8f       	std	Y+30, r21	; 0x1e
     420:	4d 8f       	std	Y+29, r20	; 0x1d
     422:	fe 01       	movw	r30, r28
     424:	31 96       	adiw	r30, 0x01	; 1
     426:	7f 01       	movw	r14, r30
     428:	f8 a3       	std	Y+32, r31	; 0x20
     42a:	ef 8f       	std	Y+31, r30	; 0x1f
	Joystick joystick = initJoystick(&pulse);
     42c:	8e 01       	movw	r16, r28
     42e:	0f 5d       	subi	r16, 0xDF	; 223
     430:	1f 4f       	sbci	r17, 0xFF	; 255
     432:	f8 01       	movw	r30, r16
     434:	11 92       	st	Z+, r1
     436:	8a 95       	dec	r24
     438:	e9 f7       	brne	.-6      	; 0x434 <__DATA_REGION_LENGTH__+0x34>
     43a:	ce 01       	movw	r24, r28
     43c:	45 96       	adiw	r24, 0x15	; 21
     43e:	9e a3       	std	Y+38, r25	; 0x26
     440:	8d a3       	std	Y+37, r24	; 0x25
	
	INSTALL(&joystick, direction, IRQ_PCINT0);
     442:	41 e0       	ldi	r20, 0x01	; 1
     444:	63 e3       	ldi	r22, 0x33	; 51
     446:	71 e0       	ldi	r23, 0x01	; 1
     448:	c8 01       	movw	r24, r16
     44a:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <install>
	INSTALL(&joystick, direction, IRQ_PCINT1);
     44e:	42 e0       	ldi	r20, 0x02	; 2
     450:	63 e3       	ldi	r22, 0x33	; 51
     452:	71 e0       	ldi	r23, 0x01	; 1
     454:	c8 01       	movw	r24, r16
     456:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <install>
	
	return TINYTIMBER(&gui, updategui, NULL);
     45a:	40 e0       	ldi	r20, 0x00	; 0
     45c:	50 e0       	ldi	r21, 0x00	; 0
     45e:	61 e4       	ldi	r22, 0x41	; 65
     460:	72 e0       	ldi	r23, 0x02	; 2
     462:	c7 01       	movw	r24, r14
     464:	0e 94 f1 0e 	call	0x1de2	; 0x1de2 <tinytimber>
}
     468:	a8 96       	adiw	r28, 0x28	; 40
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	f8 94       	cli
     46e:	de bf       	out	0x3e, r29	; 62
     470:	0f be       	out	0x3f, r0	; 63
     472:	cd bf       	out	0x3d, r28	; 61
     474:	df 91       	pop	r29
     476:	cf 91       	pop	r28
     478:	1f 91       	pop	r17
     47a:	0f 91       	pop	r16
     47c:	ff 90       	pop	r15
     47e:	ef 90       	pop	r14
     480:	08 95       	ret

00000482 <updategui>:
//#include "GUI.h"

void changefocus(Pulse *self, int newfocus){
	self->focus = newfocus;
}
void updategui(Pulse *self){
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
	if(self->focus == 1){
     48e:	fc 01       	movw	r30, r24
     490:	24 81       	ldd	r18, Z+4	; 0x04
     492:	35 81       	ldd	r19, Z+5	; 0x05
     494:	21 30       	cpi	r18, 0x01	; 1
     496:	31 05       	cpc	r19, r1
     498:	99 f4       	brne	.+38     	; 0x4c0 <updategui+0x3e>
		ASYNC(self->gui, updatedisplay, 0);
     49a:	02 85       	ldd	r16, Z+10	; 0x0a
     49c:	13 85       	ldd	r17, Z+11	; 0x0b
     49e:	c1 2c       	mov	r12, r1
     4a0:	d1 2c       	mov	r13, r1
     4a2:	0f 2e       	mov	r0, r31
     4a4:	fb e2       	ldi	r31, 0x2B	; 43
     4a6:	ef 2e       	mov	r14, r31
     4a8:	f1 e0       	ldi	r31, 0x01	; 1
     4aa:	ff 2e       	mov	r15, r31
     4ac:	f0 2d       	mov	r31, r0
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	a9 01       	movw	r20, r18
     4b4:	60 e0       	ldi	r22, 0x00	; 0
     4b6:	70 e0       	ldi	r23, 0x00	; 0
     4b8:	cb 01       	movw	r24, r22
     4ba:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
     4be:	15 c0       	rjmp	.+42     	; 0x4ea <updategui+0x68>
	}else{
		ASYNC(self->gui, updatedisplay, 4);
     4c0:	fc 01       	movw	r30, r24
     4c2:	02 85       	ldd	r16, Z+10	; 0x0a
     4c4:	13 85       	ldd	r17, Z+11	; 0x0b
     4c6:	68 94       	set
     4c8:	cc 24       	eor	r12, r12
     4ca:	c2 f8       	bld	r12, 2
     4cc:	d1 2c       	mov	r13, r1
     4ce:	0f 2e       	mov	r0, r31
     4d0:	fb e2       	ldi	r31, 0x2B	; 43
     4d2:	ef 2e       	mov	r14, r31
     4d4:	f1 e0       	ldi	r31, 0x01	; 1
     4d6:	ff 2e       	mov	r15, r31
     4d8:	f0 2d       	mov	r31, r0
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	a9 01       	movw	r20, r18
     4e0:	60 e0       	ldi	r22, 0x00	; 0
     4e2:	70 e0       	ldi	r23, 0x00	; 0
     4e4:	cb 01       	movw	r24, r22
     4e6:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
	}
}
     4ea:	1f 91       	pop	r17
     4ec:	0f 91       	pop	r16
     4ee:	ff 90       	pop	r15
     4f0:	ef 90       	pop	r14
     4f2:	df 90       	pop	r13
     4f4:	cf 90       	pop	r12
     4f6:	08 95       	ret

000004f8 <increase>:
#include <avr/interrupt.h>
#include <stdbool.h>
#include "PulseGenerator.h"

void increase(Pulsegen *self){
	if (self->currentFreq < 99 && self->currentFreq >= 0){
     4f8:	fc 01       	movw	r30, r24
     4fa:	24 81       	ldd	r18, Z+4	; 0x04
     4fc:	35 81       	ldd	r19, Z+5	; 0x05
     4fe:	23 36       	cpi	r18, 0x63	; 99
     500:	31 05       	cpc	r19, r1
     502:	20 f4       	brcc	.+8      	; 0x50c <__stack+0xd>
		self->currentFreq++;
     504:	2f 5f       	subi	r18, 0xFF	; 255
     506:	3f 4f       	sbci	r19, 0xFF	; 255
     508:	35 83       	std	Z+5, r19	; 0x05
     50a:	24 83       	std	Z+4, r18	; 0x04
     50c:	08 95       	ret

0000050e <decrease>:
	}
}

void decrease(Pulsegen *self){
	if (self->currentFreq <=99 && self->currentFreq > 0){
     50e:	fc 01       	movw	r30, r24
     510:	24 81       	ldd	r18, Z+4	; 0x04
     512:	35 81       	ldd	r19, Z+5	; 0x05
     514:	a9 01       	movw	r20, r18
     516:	41 50       	subi	r20, 0x01	; 1
     518:	51 09       	sbc	r21, r1
     51a:	43 36       	cpi	r20, 0x63	; 99
     51c:	51 05       	cpc	r21, r1
     51e:	10 f4       	brcc	.+4      	; 0x524 <decrease+0x16>
		self->currentFreq--;
     520:	55 83       	std	Z+5, r21	; 0x05
     522:	44 83       	std	Z+4, r20	; 0x04
     524:	08 95       	ret

00000526 <stored>:
	}
}

void stored(Pulsegen *self){
     526:	fc 01       	movw	r30, r24
	if(self->currentFreq != 0){
     528:	84 81       	ldd	r24, Z+4	; 0x04
     52a:	95 81       	ldd	r25, Z+5	; 0x05
     52c:	00 97       	sbiw	r24, 0x00	; 0
     52e:	29 f0       	breq	.+10     	; 0x53a <stored+0x14>
		self->storedFreq = self->currentFreq;
     530:	97 83       	std	Z+7, r25	; 0x07
     532:	86 83       	std	Z+6, r24	; 0x06
		self->currentFreq = 0;
     534:	15 82       	std	Z+5, r1	; 0x05
     536:	14 82       	std	Z+4, r1	; 0x04
     538:	08 95       	ret
	}
	else{
		self->currentFreq = self->storedFreq;
     53a:	86 81       	ldd	r24, Z+6	; 0x06
     53c:	97 81       	ldd	r25, Z+7	; 0x07
     53e:	95 83       	std	Z+5, r25	; 0x05
     540:	84 83       	std	Z+4, r24	; 0x04
     542:	08 95       	ret

00000544 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     544:	cf 93       	push	r28
     546:	df 93       	push	r29
     548:	00 d0       	rcall	.+0      	; 0x54a <initialize+0x6>
     54a:	00 d0       	rcall	.+0      	; 0x54c <initialize+0x8>
     54c:	cd b7       	in	r28, 0x3d	; 61
     54e:	de b7       	in	r29, 0x3e	; 62
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	18 c0       	rjmp	.+48     	; 0x586 <initialize+0x42>
     556:	ac 01       	movw	r20, r24
     558:	4f 5f       	subi	r20, 0xFF	; 255
     55a:	5f 4f       	sbci	r21, 0xFF	; 255
     55c:	9a 01       	movw	r18, r20
     55e:	22 95       	swap	r18
     560:	32 95       	swap	r19
     562:	30 7f       	andi	r19, 0xF0	; 240
     564:	32 27       	eor	r19, r18
     566:	20 7f       	andi	r18, 0xF0	; 240
     568:	32 27       	eor	r19, r18
     56a:	21 50       	subi	r18, 0x01	; 1
     56c:	3e 4f       	sbci	r19, 0xFE	; 254
     56e:	82 95       	swap	r24
     570:	92 95       	swap	r25
     572:	90 7f       	andi	r25, 0xF0	; 240
     574:	98 27       	eor	r25, r24
     576:	80 7f       	andi	r24, 0xF0	; 240
     578:	98 27       	eor	r25, r24
     57a:	fc 01       	movw	r30, r24
     57c:	e1 50       	subi	r30, 0x01	; 1
     57e:	fe 4f       	sbci	r31, 0xFE	; 254
     580:	31 83       	std	Z+1, r19	; 0x01
     582:	20 83       	st	Z, r18
     584:	ca 01       	movw	r24, r20
     586:	8e 30       	cpi	r24, 0x0E	; 14
     588:	91 05       	cpc	r25, r1
     58a:	2c f3       	brlt	.-54     	; 0x556 <initialize+0x12>
     58c:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <messages+0xe1>
     590:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <messages+0xe0>
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	15 c0       	rjmp	.+42     	; 0x5c4 <initialize+0x80>
     59a:	ac 01       	movw	r20, r24
     59c:	4f 5f       	subi	r20, 0xFF	; 255
     59e:	5f 4f       	sbci	r21, 0xFF	; 255
     5a0:	6d e1       	ldi	r22, 0x1D	; 29
     5a2:	64 9f       	mul	r22, r20
     5a4:	90 01       	movw	r18, r0
     5a6:	65 9f       	mul	r22, r21
     5a8:	30 0d       	add	r19, r0
     5aa:	11 24       	eor	r1, r1
     5ac:	26 5b       	subi	r18, 0xB6	; 182
     5ae:	3e 4f       	sbci	r19, 0xFE	; 254
     5b0:	68 9f       	mul	r22, r24
     5b2:	f0 01       	movw	r30, r0
     5b4:	69 9f       	mul	r22, r25
     5b6:	f0 0d       	add	r31, r0
     5b8:	11 24       	eor	r1, r1
     5ba:	e6 5b       	subi	r30, 0xB6	; 182
     5bc:	fe 4f       	sbci	r31, 0xFE	; 254
     5be:	31 83       	std	Z+1, r19	; 0x01
     5c0:	20 83       	st	Z, r18
     5c2:	ca 01       	movw	r24, r20
     5c4:	83 30       	cpi	r24, 0x03	; 3
     5c6:	91 05       	cpc	r25, r1
     5c8:	44 f3       	brlt	.-48     	; 0x59a <initialize+0x56>
     5ca:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <threads+0x58>
     5ce:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <threads+0x57>
     5d2:	1a 82       	std	Y+2, r1	; 0x02
     5d4:	19 82       	std	Y+1, r1	; 0x01
     5d6:	32 c0       	rjmp	.+100    	; 0x63c <initialize+0xf8>
     5d8:	2d e1       	ldi	r18, 0x1D	; 29
     5da:	49 81       	ldd	r20, Y+1	; 0x01
     5dc:	5a 81       	ldd	r21, Y+2	; 0x02
     5de:	24 9f       	mul	r18, r20
     5e0:	c0 01       	movw	r24, r0
     5e2:	25 9f       	mul	r18, r21
     5e4:	90 0d       	add	r25, r0
     5e6:	11 24       	eor	r1, r1
     5e8:	fc 01       	movw	r30, r24
     5ea:	e0 5b       	subi	r30, 0xB0	; 176
     5ec:	fe 4f       	sbci	r31, 0xFE	; 254
     5ee:	fc 83       	std	Y+4, r31	; 0x04
     5f0:	eb 83       	std	Y+3, r30	; 0x03
     5f2:	cf 01       	movw	r24, r30
     5f4:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <setjmp>
     5f8:	20 e6       	ldi	r18, 0x60	; 96
     5fa:	49 81       	ldd	r20, Y+1	; 0x01
     5fc:	5a 81       	ldd	r21, Y+2	; 0x02
     5fe:	24 9f       	mul	r18, r20
     600:	c0 01       	movw	r24, r0
     602:	25 9f       	mul	r18, r21
     604:	90 0d       	add	r25, r0
     606:	11 24       	eor	r1, r1
     608:	85 5b       	subi	r24, 0xB5	; 181
     60a:	9c 4f       	sbci	r25, 0xFC	; 252
     60c:	eb 81       	ldd	r30, Y+3	; 0x03
     60e:	fc 81       	ldd	r31, Y+4	; 0x04
     610:	91 8b       	std	Z+17, r25	; 0x11
     612:	80 8b       	std	Z+16, r24	; 0x10
     614:	93 8b       	std	Z+19, r25	; 0x13
     616:	82 8b       	std	Z+18, r24	; 0x12
     618:	8e e7       	ldi	r24, 0x7E	; 126
     61a:	9e e0       	ldi	r25, 0x0E	; 14
     61c:	96 8b       	std	Z+22, r25	; 0x16
     61e:	85 8b       	std	Z+21, r24	; 0x15
     620:	8d e1       	ldi	r24, 0x1D	; 29
     622:	84 9f       	mul	r24, r20
     624:	f0 01       	movw	r30, r0
     626:	85 9f       	mul	r24, r21
     628:	f0 0d       	add	r31, r0
     62a:	11 24       	eor	r1, r1
     62c:	e6 5b       	subi	r30, 0xB6	; 182
     62e:	fe 4f       	sbci	r31, 0xFE	; 254
     630:	15 82       	std	Z+5, r1	; 0x05
     632:	14 82       	std	Z+4, r1	; 0x04
     634:	4f 5f       	subi	r20, 0xFF	; 255
     636:	5f 4f       	sbci	r21, 0xFF	; 255
     638:	5a 83       	std	Y+2, r21	; 0x02
     63a:	49 83       	std	Y+1, r20	; 0x01
     63c:	29 81       	ldd	r18, Y+1	; 0x01
     63e:	3a 81       	ldd	r19, Y+2	; 0x02
     640:	24 30       	cpi	r18, 0x04	; 4
     642:	31 05       	cpc	r19, r1
     644:	4c f2       	brlt	.-110    	; 0x5d8 <initialize+0x94>
     646:	e2 ee       	ldi	r30, 0xE2	; 226
     648:	f1 e0       	ldi	r31, 0x01	; 1
     64a:	11 82       	std	Z+1, r1	; 0x01
     64c:	10 82       	st	Z, r1
     64e:	15 82       	std	Z+5, r1	; 0x05
     650:	14 82       	std	Z+4, r1	; 0x04
     652:	13 82       	std	Z+3, r1	; 0x03
     654:	12 82       	std	Z+2, r1	; 0x02
     656:	e1 e6       	ldi	r30, 0x61	; 97
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	80 e8       	ldi	r24, 0x80	; 128
     65c:	80 83       	st	Z, r24
     65e:	10 82       	st	Z, r1
     660:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     664:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     668:	84 e0       	ldi	r24, 0x04	; 4
     66a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     674:	0f 90       	pop	r0
     676:	0f 90       	pop	r0
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <dispatch>:
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	00 d0       	rcall	.+0      	; 0x688 <dispatch+0x6>
     688:	cd b7       	in	r28, 0x3d	; 61
     68a:	de b7       	in	r29, 0x3e	; 62
     68c:	9a 83       	std	Y+2, r25	; 0x02
     68e:	89 83       	std	Y+1, r24	; 0x01
     690:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     694:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     698:	06 96       	adiw	r24, 0x06	; 6
     69a:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <setjmp>
     69e:	89 2b       	or	r24, r25
     6a0:	59 f4       	brne	.+22     	; 0x6b8 <dispatch+0x36>
     6a2:	89 81       	ldd	r24, Y+1	; 0x01
     6a4:	9a 81       	ldd	r25, Y+2	; 0x02
     6a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     6ae:	61 e0       	ldi	r22, 0x01	; 1
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	06 96       	adiw	r24, 0x06	; 6
     6b4:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <longjmp>
     6b8:	0f 90       	pop	r0
     6ba:	0f 90       	pop	r0
     6bc:	df 91       	pop	r29
     6be:	cf 91       	pop	r28
     6c0:	08 95       	ret

000006c2 <enqueueByDeadline>:
     6c2:	0f 93       	push	r16
     6c4:	1f 93       	push	r17
     6c6:	cf 93       	push	r28
     6c8:	df 93       	push	r29
     6ca:	dc 01       	movw	r26, r24
     6cc:	cb 01       	movw	r24, r22
     6ce:	eb 01       	movw	r28, r22
     6d0:	e8 81       	ld	r30, Y
     6d2:	f9 81       	ldd	r31, Y+1	; 0x01
     6d4:	c0 e0       	ldi	r28, 0x00	; 0
     6d6:	d0 e0       	ldi	r29, 0x00	; 0
     6d8:	04 c0       	rjmp	.+8      	; 0x6e2 <enqueueByDeadline+0x20>
     6da:	ef 01       	movw	r28, r30
     6dc:	01 90       	ld	r0, Z+
     6de:	f0 81       	ld	r31, Z
     6e0:	e0 2d       	mov	r30, r0
     6e2:	30 97       	sbiw	r30, 0x00	; 0
     6e4:	79 f0       	breq	.+30     	; 0x704 <enqueueByDeadline+0x42>
     6e6:	06 81       	ldd	r16, Z+6	; 0x06
     6e8:	17 81       	ldd	r17, Z+7	; 0x07
     6ea:	20 85       	ldd	r18, Z+8	; 0x08
     6ec:	31 85       	ldd	r19, Z+9	; 0x09
     6ee:	16 96       	adiw	r26, 0x06	; 6
     6f0:	4d 91       	ld	r20, X+
     6f2:	5d 91       	ld	r21, X+
     6f4:	6d 91       	ld	r22, X+
     6f6:	7c 91       	ld	r23, X
     6f8:	19 97       	sbiw	r26, 0x09	; 9
     6fa:	40 17       	cp	r20, r16
     6fc:	51 07       	cpc	r21, r17
     6fe:	62 07       	cpc	r22, r18
     700:	73 07       	cpc	r23, r19
     702:	5c f7       	brge	.-42     	; 0x6da <enqueueByDeadline+0x18>
     704:	11 96       	adiw	r26, 0x01	; 1
     706:	fc 93       	st	X, r31
     708:	ee 93       	st	-X, r30
     70a:	20 97       	sbiw	r28, 0x00	; 0
     70c:	21 f4       	brne	.+8      	; 0x716 <enqueueByDeadline+0x54>
     70e:	fc 01       	movw	r30, r24
     710:	b1 83       	std	Z+1, r27	; 0x01
     712:	a0 83       	st	Z, r26
     714:	02 c0       	rjmp	.+4      	; 0x71a <enqueueByDeadline+0x58>
     716:	b9 83       	std	Y+1, r27	; 0x01
     718:	a8 83       	st	Y, r26
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	1f 91       	pop	r17
     720:	0f 91       	pop	r16
     722:	08 95       	ret

00000724 <enqueueByBaseline>:
     724:	0f 93       	push	r16
     726:	1f 93       	push	r17
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	dc 01       	movw	r26, r24
     72e:	cb 01       	movw	r24, r22
     730:	eb 01       	movw	r28, r22
     732:	e8 81       	ld	r30, Y
     734:	f9 81       	ldd	r31, Y+1	; 0x01
     736:	c0 e0       	ldi	r28, 0x00	; 0
     738:	d0 e0       	ldi	r29, 0x00	; 0
     73a:	04 c0       	rjmp	.+8      	; 0x744 <enqueueByBaseline+0x20>
     73c:	ef 01       	movw	r28, r30
     73e:	01 90       	ld	r0, Z+
     740:	f0 81       	ld	r31, Z
     742:	e0 2d       	mov	r30, r0
     744:	30 97       	sbiw	r30, 0x00	; 0
     746:	79 f0       	breq	.+30     	; 0x766 <enqueueByBaseline+0x42>
     748:	02 81       	ldd	r16, Z+2	; 0x02
     74a:	13 81       	ldd	r17, Z+3	; 0x03
     74c:	24 81       	ldd	r18, Z+4	; 0x04
     74e:	35 81       	ldd	r19, Z+5	; 0x05
     750:	12 96       	adiw	r26, 0x02	; 2
     752:	4d 91       	ld	r20, X+
     754:	5d 91       	ld	r21, X+
     756:	6d 91       	ld	r22, X+
     758:	7c 91       	ld	r23, X
     75a:	15 97       	sbiw	r26, 0x05	; 5
     75c:	40 17       	cp	r20, r16
     75e:	51 07       	cpc	r21, r17
     760:	62 07       	cpc	r22, r18
     762:	73 07       	cpc	r23, r19
     764:	5c f7       	brge	.-42     	; 0x73c <enqueueByBaseline+0x18>
     766:	11 96       	adiw	r26, 0x01	; 1
     768:	fc 93       	st	X, r31
     76a:	ee 93       	st	-X, r30
     76c:	20 97       	sbiw	r28, 0x00	; 0
     76e:	21 f4       	brne	.+8      	; 0x778 <enqueueByBaseline+0x54>
     770:	fc 01       	movw	r30, r24
     772:	b1 83       	std	Z+1, r27	; 0x01
     774:	a0 83       	st	Z, r26
     776:	02 c0       	rjmp	.+4      	; 0x77c <enqueueByBaseline+0x58>
     778:	b9 83       	std	Y+1, r27	; 0x01
     77a:	a8 83       	st	Y, r26
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	0f 91       	pop	r16
     784:	08 95       	ret

00000786 <dequeue>:
     786:	dc 01       	movw	r26, r24
     788:	ed 91       	ld	r30, X+
     78a:	fc 91       	ld	r31, X
     78c:	11 97       	sbiw	r26, 0x01	; 1
     78e:	30 97       	sbiw	r30, 0x00	; 0
     790:	59 f4       	brne	.+22     	; 0x7a8 <dequeue+0x22>
     792:	8f ef       	ldi	r24, 0xFF	; 255
     794:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     798:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     79c:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     7a0:	81 e0       	ldi	r24, 0x01	; 1
     7a2:	83 bf       	out	0x33, r24	; 51
     7a4:	88 95       	sleep
     7a6:	fc cf       	rjmp	.-8      	; 0x7a0 <dequeue+0x1a>
     7a8:	20 81       	ld	r18, Z
     7aa:	31 81       	ldd	r19, Z+1	; 0x01
     7ac:	2d 93       	st	X+, r18
     7ae:	3c 93       	st	X, r19
     7b0:	cf 01       	movw	r24, r30
     7b2:	08 95       	ret

000007b4 <insert>:
     7b4:	fb 01       	movw	r30, r22
     7b6:	20 81       	ld	r18, Z
     7b8:	31 81       	ldd	r19, Z+1	; 0x01
     7ba:	fc 01       	movw	r30, r24
     7bc:	31 83       	std	Z+1, r19	; 0x01
     7be:	20 83       	st	Z, r18
     7c0:	fb 01       	movw	r30, r22
     7c2:	91 83       	std	Z+1, r25	; 0x01
     7c4:	80 83       	st	Z, r24
     7c6:	08 95       	ret

000007c8 <push>:
     7c8:	fb 01       	movw	r30, r22
     7ca:	20 81       	ld	r18, Z
     7cc:	31 81       	ldd	r19, Z+1	; 0x01
     7ce:	fc 01       	movw	r30, r24
     7d0:	31 83       	std	Z+1, r19	; 0x01
     7d2:	20 83       	st	Z, r18
     7d4:	fb 01       	movw	r30, r22
     7d6:	91 83       	std	Z+1, r25	; 0x01
     7d8:	80 83       	st	Z, r24
     7da:	08 95       	ret

000007dc <pop>:
     7dc:	dc 01       	movw	r26, r24
     7de:	ed 91       	ld	r30, X+
     7e0:	fc 91       	ld	r31, X
     7e2:	11 97       	sbiw	r26, 0x01	; 1
     7e4:	20 81       	ld	r18, Z
     7e6:	31 81       	ldd	r19, Z+1	; 0x01
     7e8:	2d 93       	st	X+, r18
     7ea:	3c 93       	st	X, r19
     7ec:	cf 01       	movw	r24, r30
     7ee:	08 95       	ret

000007f0 <schedule>:
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     7f8:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     7fc:	c2 81       	ldd	r28, Z+2	; 0x02
     7fe:	d3 81       	ldd	r29, Z+3	; 0x03
     800:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
     804:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
     808:	30 97       	sbiw	r30, 0x00	; 0
     80a:	19 f1       	breq	.+70     	; 0x852 <schedule+0x62>
     80c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     810:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     814:	89 2b       	or	r24, r25
     816:	e9 f0       	breq	.+58     	; 0x852 <schedule+0x62>
     818:	20 97       	sbiw	r28, 0x00	; 0
     81a:	69 f0       	breq	.+26     	; 0x836 <schedule+0x46>
     81c:	86 81       	ldd	r24, Z+6	; 0x06
     81e:	97 81       	ldd	r25, Z+7	; 0x07
     820:	a0 85       	ldd	r26, Z+8	; 0x08
     822:	b1 85       	ldd	r27, Z+9	; 0x09
     824:	4e 81       	ldd	r20, Y+6	; 0x06
     826:	5f 81       	ldd	r21, Y+7	; 0x07
     828:	68 85       	ldd	r22, Y+8	; 0x08
     82a:	79 85       	ldd	r23, Y+9	; 0x09
     82c:	84 1b       	sub	r24, r20
     82e:	95 0b       	sbc	r25, r21
     830:	a6 0b       	sbc	r26, r22
     832:	b7 0b       	sbc	r27, r23
     834:	72 f4       	brpl	.+28     	; 0x852 <schedule+0x62>
     836:	84 e0       	ldi	r24, 0x04	; 4
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	0e 94 ee 03 	call	0x7dc	; 0x7dc <pop>
     83e:	62 e0       	ldi	r22, 0x02	; 2
     840:	71 e0       	ldi	r23, 0x01	; 1
     842:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <push>
     846:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     84a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     84e:	0e 94 41 03 	call	0x682	; 0x682 <dispatch>
     852:	df 91       	pop	r29
     854:	cf 91       	pop	r28
     856:	08 95       	ret

00000858 <__vector_1>:
     858:	1f 92       	push	r1
     85a:	0f 92       	push	r0
     85c:	0f b6       	in	r0, 0x3f	; 63
     85e:	0f 92       	push	r0
     860:	11 24       	eor	r1, r1
     862:	0f 93       	push	r16
     864:	1f 93       	push	r17
     866:	2f 93       	push	r18
     868:	3f 93       	push	r19
     86a:	4f 93       	push	r20
     86c:	5f 93       	push	r21
     86e:	6f 93       	push	r22
     870:	7f 93       	push	r23
     872:	8f 93       	push	r24
     874:	9f 93       	push	r25
     876:	af 93       	push	r26
     878:	bf 93       	push	r27
     87a:	ef 93       	push	r30
     87c:	ff 93       	push	r31
     87e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     882:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     886:	ac 01       	movw	r20, r24
     888:	09 2e       	mov	r0, r25
     88a:	00 0c       	add	r0, r0
     88c:	66 0b       	sbc	r22, r22
     88e:	77 0b       	sbc	r23, r23
     890:	9a 01       	movw	r18, r20
     892:	11 27       	eor	r17, r17
     894:	00 27       	eor	r16, r16
     896:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     89a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     89e:	60 e0       	ldi	r22, 0x00	; 0
     8a0:	70 e0       	ldi	r23, 0x00	; 0
     8a2:	40 2b       	or	r20, r16
     8a4:	51 2b       	or	r21, r17
     8a6:	62 2b       	or	r22, r18
     8a8:	73 2b       	or	r23, r19
     8aa:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     8ae:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     8b2:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     8b6:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     8ba:	b0 9b       	sbis	0x16, 0	; 22
     8bc:	1a c0       	rjmp	.+52     	; 0x8f2 <__vector_1+0x9a>
     8be:	01 96       	adiw	r24, 0x01	; 1
     8c0:	09 2e       	mov	r0, r25
     8c2:	00 0c       	add	r0, r0
     8c4:	aa 0b       	sbc	r26, r26
     8c6:	bb 0b       	sbc	r27, r27
     8c8:	bc 01       	movw	r22, r24
     8ca:	55 27       	eor	r21, r21
     8cc:	44 27       	eor	r20, r20
     8ce:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8d2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	84 2b       	or	r24, r20
     8dc:	95 2b       	or	r25, r21
     8de:	a6 2b       	or	r26, r22
     8e0:	b7 2b       	or	r27, r23
     8e2:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     8e6:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     8ea:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     8ee:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     8f2:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable>
     8f6:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x1>
     8fa:	30 97       	sbiw	r30, 0x00	; 0
     8fc:	39 f0       	breq	.+14     	; 0x90c <__vector_1+0xb4>
     8fe:	60 e0       	ldi	r22, 0x00	; 0
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable>
     906:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x1>
     90a:	09 95       	icall
     90c:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     910:	ff 91       	pop	r31
     912:	ef 91       	pop	r30
     914:	bf 91       	pop	r27
     916:	af 91       	pop	r26
     918:	9f 91       	pop	r25
     91a:	8f 91       	pop	r24
     91c:	7f 91       	pop	r23
     91e:	6f 91       	pop	r22
     920:	5f 91       	pop	r21
     922:	4f 91       	pop	r20
     924:	3f 91       	pop	r19
     926:	2f 91       	pop	r18
     928:	1f 91       	pop	r17
     92a:	0f 91       	pop	r16
     92c:	0f 90       	pop	r0
     92e:	0f be       	out	0x3f, r0	; 63
     930:	0f 90       	pop	r0
     932:	1f 90       	pop	r1
     934:	18 95       	reti

00000936 <__vector_2>:
     936:	1f 92       	push	r1
     938:	0f 92       	push	r0
     93a:	0f b6       	in	r0, 0x3f	; 63
     93c:	0f 92       	push	r0
     93e:	11 24       	eor	r1, r1
     940:	0f 93       	push	r16
     942:	1f 93       	push	r17
     944:	2f 93       	push	r18
     946:	3f 93       	push	r19
     948:	4f 93       	push	r20
     94a:	5f 93       	push	r21
     94c:	6f 93       	push	r22
     94e:	7f 93       	push	r23
     950:	8f 93       	push	r24
     952:	9f 93       	push	r25
     954:	af 93       	push	r26
     956:	bf 93       	push	r27
     958:	ef 93       	push	r30
     95a:	ff 93       	push	r31
     95c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     960:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     964:	ac 01       	movw	r20, r24
     966:	09 2e       	mov	r0, r25
     968:	00 0c       	add	r0, r0
     96a:	66 0b       	sbc	r22, r22
     96c:	77 0b       	sbc	r23, r23
     96e:	9a 01       	movw	r18, r20
     970:	11 27       	eor	r17, r17
     972:	00 27       	eor	r16, r16
     974:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     978:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     97c:	60 e0       	ldi	r22, 0x00	; 0
     97e:	70 e0       	ldi	r23, 0x00	; 0
     980:	40 2b       	or	r20, r16
     982:	51 2b       	or	r21, r17
     984:	62 2b       	or	r22, r18
     986:	73 2b       	or	r23, r19
     988:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     98c:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     990:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     994:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     998:	b0 9b       	sbis	0x16, 0	; 22
     99a:	1a c0       	rjmp	.+52     	; 0x9d0 <__vector_2+0x9a>
     99c:	01 96       	adiw	r24, 0x01	; 1
     99e:	09 2e       	mov	r0, r25
     9a0:	00 0c       	add	r0, r0
     9a2:	aa 0b       	sbc	r26, r26
     9a4:	bb 0b       	sbc	r27, r27
     9a6:	bc 01       	movw	r22, r24
     9a8:	55 27       	eor	r21, r21
     9aa:	44 27       	eor	r20, r20
     9ac:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9b0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9b4:	a0 e0       	ldi	r26, 0x00	; 0
     9b6:	b0 e0       	ldi	r27, 0x00	; 0
     9b8:	84 2b       	or	r24, r20
     9ba:	95 2b       	or	r25, r21
     9bc:	a6 2b       	or	r26, r22
     9be:	b7 2b       	or	r27, r23
     9c0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     9c4:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     9c8:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     9cc:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     9d0:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x2>
     9d4:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x3>
     9d8:	30 97       	sbiw	r30, 0x00	; 0
     9da:	39 f0       	breq	.+14     	; 0x9ea <__vector_2+0xb4>
     9dc:	61 e0       	ldi	r22, 0x01	; 1
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x2>
     9e4:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x3>
     9e8:	09 95       	icall
     9ea:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     9ee:	ff 91       	pop	r31
     9f0:	ef 91       	pop	r30
     9f2:	bf 91       	pop	r27
     9f4:	af 91       	pop	r26
     9f6:	9f 91       	pop	r25
     9f8:	8f 91       	pop	r24
     9fa:	7f 91       	pop	r23
     9fc:	6f 91       	pop	r22
     9fe:	5f 91       	pop	r21
     a00:	4f 91       	pop	r20
     a02:	3f 91       	pop	r19
     a04:	2f 91       	pop	r18
     a06:	1f 91       	pop	r17
     a08:	0f 91       	pop	r16
     a0a:	0f 90       	pop	r0
     a0c:	0f be       	out	0x3f, r0	; 63
     a0e:	0f 90       	pop	r0
     a10:	1f 90       	pop	r1
     a12:	18 95       	reti

00000a14 <__vector_3>:
     a14:	1f 92       	push	r1
     a16:	0f 92       	push	r0
     a18:	0f b6       	in	r0, 0x3f	; 63
     a1a:	0f 92       	push	r0
     a1c:	11 24       	eor	r1, r1
     a1e:	0f 93       	push	r16
     a20:	1f 93       	push	r17
     a22:	2f 93       	push	r18
     a24:	3f 93       	push	r19
     a26:	4f 93       	push	r20
     a28:	5f 93       	push	r21
     a2a:	6f 93       	push	r22
     a2c:	7f 93       	push	r23
     a2e:	8f 93       	push	r24
     a30:	9f 93       	push	r25
     a32:	af 93       	push	r26
     a34:	bf 93       	push	r27
     a36:	ef 93       	push	r30
     a38:	ff 93       	push	r31
     a3a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     a3e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     a42:	ac 01       	movw	r20, r24
     a44:	09 2e       	mov	r0, r25
     a46:	00 0c       	add	r0, r0
     a48:	66 0b       	sbc	r22, r22
     a4a:	77 0b       	sbc	r23, r23
     a4c:	9a 01       	movw	r18, r20
     a4e:	11 27       	eor	r17, r17
     a50:	00 27       	eor	r16, r16
     a52:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a56:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a5a:	60 e0       	ldi	r22, 0x00	; 0
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	40 2b       	or	r20, r16
     a60:	51 2b       	or	r21, r17
     a62:	62 2b       	or	r22, r18
     a64:	73 2b       	or	r23, r19
     a66:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     a6a:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     a6e:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     a72:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     a76:	b0 9b       	sbis	0x16, 0	; 22
     a78:	1a c0       	rjmp	.+52     	; 0xaae <__vector_3+0x9a>
     a7a:	01 96       	adiw	r24, 0x01	; 1
     a7c:	09 2e       	mov	r0, r25
     a7e:	00 0c       	add	r0, r0
     a80:	aa 0b       	sbc	r26, r26
     a82:	bb 0b       	sbc	r27, r27
     a84:	bc 01       	movw	r22, r24
     a86:	55 27       	eor	r21, r21
     a88:	44 27       	eor	r20, r20
     a8a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a8e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a92:	a0 e0       	ldi	r26, 0x00	; 0
     a94:	b0 e0       	ldi	r27, 0x00	; 0
     a96:	84 2b       	or	r24, r20
     a98:	95 2b       	or	r25, r21
     a9a:	a6 2b       	or	r26, r22
     a9c:	b7 2b       	or	r27, r23
     a9e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     aa2:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     aa6:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     aaa:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     aae:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x4>
     ab2:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x5>
     ab6:	30 97       	sbiw	r30, 0x00	; 0
     ab8:	39 f0       	breq	.+14     	; 0xac8 <__vector_3+0xb4>
     aba:	62 e0       	ldi	r22, 0x02	; 2
     abc:	70 e0       	ldi	r23, 0x00	; 0
     abe:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x4>
     ac2:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x5>
     ac6:	09 95       	icall
     ac8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     acc:	ff 91       	pop	r31
     ace:	ef 91       	pop	r30
     ad0:	bf 91       	pop	r27
     ad2:	af 91       	pop	r26
     ad4:	9f 91       	pop	r25
     ad6:	8f 91       	pop	r24
     ad8:	7f 91       	pop	r23
     ada:	6f 91       	pop	r22
     adc:	5f 91       	pop	r21
     ade:	4f 91       	pop	r20
     ae0:	3f 91       	pop	r19
     ae2:	2f 91       	pop	r18
     ae4:	1f 91       	pop	r17
     ae6:	0f 91       	pop	r16
     ae8:	0f 90       	pop	r0
     aea:	0f be       	out	0x3f, r0	; 63
     aec:	0f 90       	pop	r0
     aee:	1f 90       	pop	r1
     af0:	18 95       	reti

00000af2 <__vector_4>:
     af2:	1f 92       	push	r1
     af4:	0f 92       	push	r0
     af6:	0f b6       	in	r0, 0x3f	; 63
     af8:	0f 92       	push	r0
     afa:	11 24       	eor	r1, r1
     afc:	0f 93       	push	r16
     afe:	1f 93       	push	r17
     b00:	2f 93       	push	r18
     b02:	3f 93       	push	r19
     b04:	4f 93       	push	r20
     b06:	5f 93       	push	r21
     b08:	6f 93       	push	r22
     b0a:	7f 93       	push	r23
     b0c:	8f 93       	push	r24
     b0e:	9f 93       	push	r25
     b10:	af 93       	push	r26
     b12:	bf 93       	push	r27
     b14:	ef 93       	push	r30
     b16:	ff 93       	push	r31
     b18:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     b1c:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     b20:	ac 01       	movw	r20, r24
     b22:	09 2e       	mov	r0, r25
     b24:	00 0c       	add	r0, r0
     b26:	66 0b       	sbc	r22, r22
     b28:	77 0b       	sbc	r23, r23
     b2a:	9a 01       	movw	r18, r20
     b2c:	11 27       	eor	r17, r17
     b2e:	00 27       	eor	r16, r16
     b30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	70 e0       	ldi	r23, 0x00	; 0
     b3c:	40 2b       	or	r20, r16
     b3e:	51 2b       	or	r21, r17
     b40:	62 2b       	or	r22, r18
     b42:	73 2b       	or	r23, r19
     b44:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     b48:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     b4c:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     b50:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     b54:	b0 9b       	sbis	0x16, 0	; 22
     b56:	1a c0       	rjmp	.+52     	; 0xb8c <__vector_4+0x9a>
     b58:	01 96       	adiw	r24, 0x01	; 1
     b5a:	09 2e       	mov	r0, r25
     b5c:	00 0c       	add	r0, r0
     b5e:	aa 0b       	sbc	r26, r26
     b60:	bb 0b       	sbc	r27, r27
     b62:	bc 01       	movw	r22, r24
     b64:	55 27       	eor	r21, r21
     b66:	44 27       	eor	r20, r20
     b68:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b6c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	84 2b       	or	r24, r20
     b76:	95 2b       	or	r25, r21
     b78:	a6 2b       	or	r26, r22
     b7a:	b7 2b       	or	r27, r23
     b7c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     b80:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     b84:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     b88:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     b8c:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x6>
     b90:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x7>
     b94:	30 97       	sbiw	r30, 0x00	; 0
     b96:	39 f0       	breq	.+14     	; 0xba6 <__vector_4+0xb4>
     b98:	63 e0       	ldi	r22, 0x03	; 3
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x6>
     ba0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x7>
     ba4:	09 95       	icall
     ba6:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     baa:	ff 91       	pop	r31
     bac:	ef 91       	pop	r30
     bae:	bf 91       	pop	r27
     bb0:	af 91       	pop	r26
     bb2:	9f 91       	pop	r25
     bb4:	8f 91       	pop	r24
     bb6:	7f 91       	pop	r23
     bb8:	6f 91       	pop	r22
     bba:	5f 91       	pop	r21
     bbc:	4f 91       	pop	r20
     bbe:	3f 91       	pop	r19
     bc0:	2f 91       	pop	r18
     bc2:	1f 91       	pop	r17
     bc4:	0f 91       	pop	r16
     bc6:	0f 90       	pop	r0
     bc8:	0f be       	out	0x3f, r0	; 63
     bca:	0f 90       	pop	r0
     bcc:	1f 90       	pop	r1
     bce:	18 95       	reti

00000bd0 <__vector_5>:
     bd0:	1f 92       	push	r1
     bd2:	0f 92       	push	r0
     bd4:	0f b6       	in	r0, 0x3f	; 63
     bd6:	0f 92       	push	r0
     bd8:	11 24       	eor	r1, r1
     bda:	0f 93       	push	r16
     bdc:	1f 93       	push	r17
     bde:	2f 93       	push	r18
     be0:	3f 93       	push	r19
     be2:	4f 93       	push	r20
     be4:	5f 93       	push	r21
     be6:	6f 93       	push	r22
     be8:	7f 93       	push	r23
     bea:	8f 93       	push	r24
     bec:	9f 93       	push	r25
     bee:	af 93       	push	r26
     bf0:	bf 93       	push	r27
     bf2:	ef 93       	push	r30
     bf4:	ff 93       	push	r31
     bf6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     bfa:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     bfe:	ac 01       	movw	r20, r24
     c00:	09 2e       	mov	r0, r25
     c02:	00 0c       	add	r0, r0
     c04:	66 0b       	sbc	r22, r22
     c06:	77 0b       	sbc	r23, r23
     c08:	9a 01       	movw	r18, r20
     c0a:	11 27       	eor	r17, r17
     c0c:	00 27       	eor	r16, r16
     c0e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c12:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c16:	60 e0       	ldi	r22, 0x00	; 0
     c18:	70 e0       	ldi	r23, 0x00	; 0
     c1a:	40 2b       	or	r20, r16
     c1c:	51 2b       	or	r21, r17
     c1e:	62 2b       	or	r22, r18
     c20:	73 2b       	or	r23, r19
     c22:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     c26:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     c2a:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     c2e:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     c32:	b0 9b       	sbis	0x16, 0	; 22
     c34:	1a c0       	rjmp	.+52     	; 0xc6a <__vector_5+0x9a>
     c36:	01 96       	adiw	r24, 0x01	; 1
     c38:	09 2e       	mov	r0, r25
     c3a:	00 0c       	add	r0, r0
     c3c:	aa 0b       	sbc	r26, r26
     c3e:	bb 0b       	sbc	r27, r27
     c40:	bc 01       	movw	r22, r24
     c42:	55 27       	eor	r21, r21
     c44:	44 27       	eor	r20, r20
     c46:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c4a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c4e:	a0 e0       	ldi	r26, 0x00	; 0
     c50:	b0 e0       	ldi	r27, 0x00	; 0
     c52:	84 2b       	or	r24, r20
     c54:	95 2b       	or	r25, r21
     c56:	a6 2b       	or	r26, r22
     c58:	b7 2b       	or	r27, r23
     c5a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     c5e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     c62:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     c66:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     c6a:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x8>
     c6e:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x9>
     c72:	30 97       	sbiw	r30, 0x00	; 0
     c74:	39 f0       	breq	.+14     	; 0xc84 <__vector_5+0xb4>
     c76:	64 e0       	ldi	r22, 0x04	; 4
     c78:	70 e0       	ldi	r23, 0x00	; 0
     c7a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x8>
     c7e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x9>
     c82:	09 95       	icall
     c84:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     c88:	ff 91       	pop	r31
     c8a:	ef 91       	pop	r30
     c8c:	bf 91       	pop	r27
     c8e:	af 91       	pop	r26
     c90:	9f 91       	pop	r25
     c92:	8f 91       	pop	r24
     c94:	7f 91       	pop	r23
     c96:	6f 91       	pop	r22
     c98:	5f 91       	pop	r21
     c9a:	4f 91       	pop	r20
     c9c:	3f 91       	pop	r19
     c9e:	2f 91       	pop	r18
     ca0:	1f 91       	pop	r17
     ca2:	0f 91       	pop	r16
     ca4:	0f 90       	pop	r0
     ca6:	0f be       	out	0x3f, r0	; 63
     ca8:	0f 90       	pop	r0
     caa:	1f 90       	pop	r1
     cac:	18 95       	reti

00000cae <__vector_10>:
     cae:	1f 92       	push	r1
     cb0:	0f 92       	push	r0
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	0f 92       	push	r0
     cb6:	11 24       	eor	r1, r1
     cb8:	0f 93       	push	r16
     cba:	1f 93       	push	r17
     cbc:	2f 93       	push	r18
     cbe:	3f 93       	push	r19
     cc0:	4f 93       	push	r20
     cc2:	5f 93       	push	r21
     cc4:	6f 93       	push	r22
     cc6:	7f 93       	push	r23
     cc8:	8f 93       	push	r24
     cca:	9f 93       	push	r25
     ccc:	af 93       	push	r26
     cce:	bf 93       	push	r27
     cd0:	ef 93       	push	r30
     cd2:	ff 93       	push	r31
     cd4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     cd8:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     cdc:	ac 01       	movw	r20, r24
     cde:	09 2e       	mov	r0, r25
     ce0:	00 0c       	add	r0, r0
     ce2:	66 0b       	sbc	r22, r22
     ce4:	77 0b       	sbc	r23, r23
     ce6:	9a 01       	movw	r18, r20
     ce8:	11 27       	eor	r17, r17
     cea:	00 27       	eor	r16, r16
     cec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cf0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf4:	60 e0       	ldi	r22, 0x00	; 0
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	40 2b       	or	r20, r16
     cfa:	51 2b       	or	r21, r17
     cfc:	62 2b       	or	r22, r18
     cfe:	73 2b       	or	r23, r19
     d00:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     d04:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     d08:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     d0c:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     d10:	b0 9b       	sbis	0x16, 0	; 22
     d12:	1a c0       	rjmp	.+52     	; 0xd48 <__vector_10+0x9a>
     d14:	01 96       	adiw	r24, 0x01	; 1
     d16:	09 2e       	mov	r0, r25
     d18:	00 0c       	add	r0, r0
     d1a:	aa 0b       	sbc	r26, r26
     d1c:	bb 0b       	sbc	r27, r27
     d1e:	bc 01       	movw	r22, r24
     d20:	55 27       	eor	r21, r21
     d22:	44 27       	eor	r20, r20
     d24:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d28:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d2c:	a0 e0       	ldi	r26, 0x00	; 0
     d2e:	b0 e0       	ldi	r27, 0x00	; 0
     d30:	84 2b       	or	r24, r20
     d32:	95 2b       	or	r25, r21
     d34:	a6 2b       	or	r26, r22
     d36:	b7 2b       	or	r27, r23
     d38:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     d3c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     d40:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     d44:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     d48:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0xa>
     d4c:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0xb>
     d50:	30 97       	sbiw	r30, 0x00	; 0
     d52:	39 f0       	breq	.+14     	; 0xd62 <__vector_10+0xb4>
     d54:	65 e0       	ldi	r22, 0x05	; 5
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0xa>
     d5c:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0xb>
     d60:	09 95       	icall
     d62:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     d66:	ff 91       	pop	r31
     d68:	ef 91       	pop	r30
     d6a:	bf 91       	pop	r27
     d6c:	af 91       	pop	r26
     d6e:	9f 91       	pop	r25
     d70:	8f 91       	pop	r24
     d72:	7f 91       	pop	r23
     d74:	6f 91       	pop	r22
     d76:	5f 91       	pop	r21
     d78:	4f 91       	pop	r20
     d7a:	3f 91       	pop	r19
     d7c:	2f 91       	pop	r18
     d7e:	1f 91       	pop	r17
     d80:	0f 91       	pop	r16
     d82:	0f 90       	pop	r0
     d84:	0f be       	out	0x3f, r0	; 63
     d86:	0f 90       	pop	r0
     d88:	1f 90       	pop	r1
     d8a:	18 95       	reti

00000d8c <__vector_11>:
     d8c:	1f 92       	push	r1
     d8e:	0f 92       	push	r0
     d90:	0f b6       	in	r0, 0x3f	; 63
     d92:	0f 92       	push	r0
     d94:	11 24       	eor	r1, r1
     d96:	0f 93       	push	r16
     d98:	1f 93       	push	r17
     d9a:	2f 93       	push	r18
     d9c:	3f 93       	push	r19
     d9e:	4f 93       	push	r20
     da0:	5f 93       	push	r21
     da2:	6f 93       	push	r22
     da4:	7f 93       	push	r23
     da6:	8f 93       	push	r24
     da8:	9f 93       	push	r25
     daa:	af 93       	push	r26
     dac:	bf 93       	push	r27
     dae:	ef 93       	push	r30
     db0:	ff 93       	push	r31
     db2:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     db6:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     dba:	ac 01       	movw	r20, r24
     dbc:	09 2e       	mov	r0, r25
     dbe:	00 0c       	add	r0, r0
     dc0:	66 0b       	sbc	r22, r22
     dc2:	77 0b       	sbc	r23, r23
     dc4:	9a 01       	movw	r18, r20
     dc6:	11 27       	eor	r17, r17
     dc8:	00 27       	eor	r16, r16
     dca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dd2:	60 e0       	ldi	r22, 0x00	; 0
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	40 2b       	or	r20, r16
     dd8:	51 2b       	or	r21, r17
     dda:	62 2b       	or	r22, r18
     ddc:	73 2b       	or	r23, r19
     dde:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     de2:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     de6:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     dea:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     dee:	b0 9b       	sbis	0x16, 0	; 22
     df0:	1a c0       	rjmp	.+52     	; 0xe26 <__vector_11+0x9a>
     df2:	01 96       	adiw	r24, 0x01	; 1
     df4:	09 2e       	mov	r0, r25
     df6:	00 0c       	add	r0, r0
     df8:	aa 0b       	sbc	r26, r26
     dfa:	bb 0b       	sbc	r27, r27
     dfc:	bc 01       	movw	r22, r24
     dfe:	55 27       	eor	r21, r21
     e00:	44 27       	eor	r20, r20
     e02:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e06:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e0a:	a0 e0       	ldi	r26, 0x00	; 0
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	84 2b       	or	r24, r20
     e10:	95 2b       	or	r25, r21
     e12:	a6 2b       	or	r26, r22
     e14:	b7 2b       	or	r27, r23
     e16:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     e1a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     e1e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     e22:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     e26:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xc>
     e2a:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xd>
     e2e:	30 97       	sbiw	r30, 0x00	; 0
     e30:	39 f0       	breq	.+14     	; 0xe40 <__vector_11+0xb4>
     e32:	66 e0       	ldi	r22, 0x06	; 6
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xc>
     e3a:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xd>
     e3e:	09 95       	icall
     e40:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     e44:	ff 91       	pop	r31
     e46:	ef 91       	pop	r30
     e48:	bf 91       	pop	r27
     e4a:	af 91       	pop	r26
     e4c:	9f 91       	pop	r25
     e4e:	8f 91       	pop	r24
     e50:	7f 91       	pop	r23
     e52:	6f 91       	pop	r22
     e54:	5f 91       	pop	r21
     e56:	4f 91       	pop	r20
     e58:	3f 91       	pop	r19
     e5a:	2f 91       	pop	r18
     e5c:	1f 91       	pop	r17
     e5e:	0f 91       	pop	r16
     e60:	0f 90       	pop	r0
     e62:	0f be       	out	0x3f, r0	; 63
     e64:	0f 90       	pop	r0
     e66:	1f 90       	pop	r1
     e68:	18 95       	reti

00000e6a <__vector_12>:
     e6a:	1f 92       	push	r1
     e6c:	0f 92       	push	r0
     e6e:	0f b6       	in	r0, 0x3f	; 63
     e70:	0f 92       	push	r0
     e72:	11 24       	eor	r1, r1
     e74:	0f 93       	push	r16
     e76:	1f 93       	push	r17
     e78:	2f 93       	push	r18
     e7a:	3f 93       	push	r19
     e7c:	4f 93       	push	r20
     e7e:	5f 93       	push	r21
     e80:	6f 93       	push	r22
     e82:	7f 93       	push	r23
     e84:	8f 93       	push	r24
     e86:	9f 93       	push	r25
     e88:	af 93       	push	r26
     e8a:	bf 93       	push	r27
     e8c:	ef 93       	push	r30
     e8e:	ff 93       	push	r31
     e90:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     e94:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     e98:	ac 01       	movw	r20, r24
     e9a:	09 2e       	mov	r0, r25
     e9c:	00 0c       	add	r0, r0
     e9e:	66 0b       	sbc	r22, r22
     ea0:	77 0b       	sbc	r23, r23
     ea2:	9a 01       	movw	r18, r20
     ea4:	11 27       	eor	r17, r17
     ea6:	00 27       	eor	r16, r16
     ea8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	40 2b       	or	r20, r16
     eb6:	51 2b       	or	r21, r17
     eb8:	62 2b       	or	r22, r18
     eba:	73 2b       	or	r23, r19
     ebc:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     ec0:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     ec4:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     ec8:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     ecc:	b0 9b       	sbis	0x16, 0	; 22
     ece:	1a c0       	rjmp	.+52     	; 0xf04 <__vector_12+0x9a>
     ed0:	01 96       	adiw	r24, 0x01	; 1
     ed2:	09 2e       	mov	r0, r25
     ed4:	00 0c       	add	r0, r0
     ed6:	aa 0b       	sbc	r26, r26
     ed8:	bb 0b       	sbc	r27, r27
     eda:	bc 01       	movw	r22, r24
     edc:	55 27       	eor	r21, r21
     ede:	44 27       	eor	r20, r20
     ee0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ee4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ee8:	a0 e0       	ldi	r26, 0x00	; 0
     eea:	b0 e0       	ldi	r27, 0x00	; 0
     eec:	84 2b       	or	r24, r20
     eee:	95 2b       	or	r25, r21
     ef0:	a6 2b       	or	r26, r22
     ef2:	b7 2b       	or	r27, r23
     ef4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     ef8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     efc:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     f00:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     f04:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xe>
     f08:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xf>
     f0c:	30 97       	sbiw	r30, 0x00	; 0
     f0e:	39 f0       	breq	.+14     	; 0xf1e <__vector_12+0xb4>
     f10:	67 e0       	ldi	r22, 0x07	; 7
     f12:	70 e0       	ldi	r23, 0x00	; 0
     f14:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xe>
     f18:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xf>
     f1c:	09 95       	icall
     f1e:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
     f22:	ff 91       	pop	r31
     f24:	ef 91       	pop	r30
     f26:	bf 91       	pop	r27
     f28:	af 91       	pop	r26
     f2a:	9f 91       	pop	r25
     f2c:	8f 91       	pop	r24
     f2e:	7f 91       	pop	r23
     f30:	6f 91       	pop	r22
     f32:	5f 91       	pop	r21
     f34:	4f 91       	pop	r20
     f36:	3f 91       	pop	r19
     f38:	2f 91       	pop	r18
     f3a:	1f 91       	pop	r17
     f3c:	0f 91       	pop	r16
     f3e:	0f 90       	pop	r0
     f40:	0f be       	out	0x3f, r0	; 63
     f42:	0f 90       	pop	r0
     f44:	1f 90       	pop	r1
     f46:	18 95       	reti

00000f48 <__vector_13>:
     f48:	1f 92       	push	r1
     f4a:	0f 92       	push	r0
     f4c:	0f b6       	in	r0, 0x3f	; 63
     f4e:	0f 92       	push	r0
     f50:	11 24       	eor	r1, r1
     f52:	0f 93       	push	r16
     f54:	1f 93       	push	r17
     f56:	2f 93       	push	r18
     f58:	3f 93       	push	r19
     f5a:	4f 93       	push	r20
     f5c:	5f 93       	push	r21
     f5e:	6f 93       	push	r22
     f60:	7f 93       	push	r23
     f62:	8f 93       	push	r24
     f64:	9f 93       	push	r25
     f66:	af 93       	push	r26
     f68:	bf 93       	push	r27
     f6a:	ef 93       	push	r30
     f6c:	ff 93       	push	r31
     f6e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     f72:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     f76:	ac 01       	movw	r20, r24
     f78:	09 2e       	mov	r0, r25
     f7a:	00 0c       	add	r0, r0
     f7c:	66 0b       	sbc	r22, r22
     f7e:	77 0b       	sbc	r23, r23
     f80:	9a 01       	movw	r18, r20
     f82:	11 27       	eor	r17, r17
     f84:	00 27       	eor	r16, r16
     f86:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f8a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f8e:	60 e0       	ldi	r22, 0x00	; 0
     f90:	70 e0       	ldi	r23, 0x00	; 0
     f92:	40 2b       	or	r20, r16
     f94:	51 2b       	or	r21, r17
     f96:	62 2b       	or	r22, r18
     f98:	73 2b       	or	r23, r19
     f9a:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     f9e:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     fa2:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     fa6:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     faa:	b0 9b       	sbis	0x16, 0	; 22
     fac:	1a c0       	rjmp	.+52     	; 0xfe2 <__vector_13+0x9a>
     fae:	01 96       	adiw	r24, 0x01	; 1
     fb0:	09 2e       	mov	r0, r25
     fb2:	00 0c       	add	r0, r0
     fb4:	aa 0b       	sbc	r26, r26
     fb6:	bb 0b       	sbc	r27, r27
     fb8:	bc 01       	movw	r22, r24
     fba:	55 27       	eor	r21, r21
     fbc:	44 27       	eor	r20, r20
     fbe:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fc2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fc6:	a0 e0       	ldi	r26, 0x00	; 0
     fc8:	b0 e0       	ldi	r27, 0x00	; 0
     fca:	84 2b       	or	r24, r20
     fcc:	95 2b       	or	r25, r21
     fce:	a6 2b       	or	r26, r22
     fd0:	b7 2b       	or	r27, r23
     fd2:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     fd6:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     fda:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     fde:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     fe2:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x10>
     fe6:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x11>
     fea:	30 97       	sbiw	r30, 0x00	; 0
     fec:	39 f0       	breq	.+14     	; 0xffc <__vector_13+0xb4>
     fee:	68 e0       	ldi	r22, 0x08	; 8
     ff0:	70 e0       	ldi	r23, 0x00	; 0
     ff2:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x10>
     ff6:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x11>
     ffa:	09 95       	icall
     ffc:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    1000:	ff 91       	pop	r31
    1002:	ef 91       	pop	r30
    1004:	bf 91       	pop	r27
    1006:	af 91       	pop	r26
    1008:	9f 91       	pop	r25
    100a:	8f 91       	pop	r24
    100c:	7f 91       	pop	r23
    100e:	6f 91       	pop	r22
    1010:	5f 91       	pop	r21
    1012:	4f 91       	pop	r20
    1014:	3f 91       	pop	r19
    1016:	2f 91       	pop	r18
    1018:	1f 91       	pop	r17
    101a:	0f 91       	pop	r16
    101c:	0f 90       	pop	r0
    101e:	0f be       	out	0x3f, r0	; 63
    1020:	0f 90       	pop	r0
    1022:	1f 90       	pop	r1
    1024:	18 95       	reti

00001026 <__vector_14>:
    1026:	1f 92       	push	r1
    1028:	0f 92       	push	r0
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	0f 92       	push	r0
    102e:	11 24       	eor	r1, r1
    1030:	0f 93       	push	r16
    1032:	1f 93       	push	r17
    1034:	2f 93       	push	r18
    1036:	3f 93       	push	r19
    1038:	4f 93       	push	r20
    103a:	5f 93       	push	r21
    103c:	6f 93       	push	r22
    103e:	7f 93       	push	r23
    1040:	8f 93       	push	r24
    1042:	9f 93       	push	r25
    1044:	af 93       	push	r26
    1046:	bf 93       	push	r27
    1048:	ef 93       	push	r30
    104a:	ff 93       	push	r31
    104c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1050:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1054:	ac 01       	movw	r20, r24
    1056:	09 2e       	mov	r0, r25
    1058:	00 0c       	add	r0, r0
    105a:	66 0b       	sbc	r22, r22
    105c:	77 0b       	sbc	r23, r23
    105e:	9a 01       	movw	r18, r20
    1060:	11 27       	eor	r17, r17
    1062:	00 27       	eor	r16, r16
    1064:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1068:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    106c:	60 e0       	ldi	r22, 0x00	; 0
    106e:	70 e0       	ldi	r23, 0x00	; 0
    1070:	40 2b       	or	r20, r16
    1072:	51 2b       	or	r21, r17
    1074:	62 2b       	or	r22, r18
    1076:	73 2b       	or	r23, r19
    1078:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    107c:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1080:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1084:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1088:	b0 9b       	sbis	0x16, 0	; 22
    108a:	1a c0       	rjmp	.+52     	; 0x10c0 <__vector_14+0x9a>
    108c:	01 96       	adiw	r24, 0x01	; 1
    108e:	09 2e       	mov	r0, r25
    1090:	00 0c       	add	r0, r0
    1092:	aa 0b       	sbc	r26, r26
    1094:	bb 0b       	sbc	r27, r27
    1096:	bc 01       	movw	r22, r24
    1098:	55 27       	eor	r21, r21
    109a:	44 27       	eor	r20, r20
    109c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10a0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10a4:	a0 e0       	ldi	r26, 0x00	; 0
    10a6:	b0 e0       	ldi	r27, 0x00	; 0
    10a8:	84 2b       	or	r24, r20
    10aa:	95 2b       	or	r25, r21
    10ac:	a6 2b       	or	r26, r22
    10ae:	b7 2b       	or	r27, r23
    10b0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    10b4:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    10b8:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    10bc:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    10c0:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x12>
    10c4:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x13>
    10c8:	30 97       	sbiw	r30, 0x00	; 0
    10ca:	39 f0       	breq	.+14     	; 0x10da <__vector_14+0xb4>
    10cc:	69 e0       	ldi	r22, 0x09	; 9
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x12>
    10d4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x13>
    10d8:	09 95       	icall
    10da:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    10de:	ff 91       	pop	r31
    10e0:	ef 91       	pop	r30
    10e2:	bf 91       	pop	r27
    10e4:	af 91       	pop	r26
    10e6:	9f 91       	pop	r25
    10e8:	8f 91       	pop	r24
    10ea:	7f 91       	pop	r23
    10ec:	6f 91       	pop	r22
    10ee:	5f 91       	pop	r21
    10f0:	4f 91       	pop	r20
    10f2:	3f 91       	pop	r19
    10f4:	2f 91       	pop	r18
    10f6:	1f 91       	pop	r17
    10f8:	0f 91       	pop	r16
    10fa:	0f 90       	pop	r0
    10fc:	0f be       	out	0x3f, r0	; 63
    10fe:	0f 90       	pop	r0
    1100:	1f 90       	pop	r1
    1102:	18 95       	reti

00001104 <__vector_15>:
    1104:	1f 92       	push	r1
    1106:	0f 92       	push	r0
    1108:	0f b6       	in	r0, 0x3f	; 63
    110a:	0f 92       	push	r0
    110c:	11 24       	eor	r1, r1
    110e:	0f 93       	push	r16
    1110:	1f 93       	push	r17
    1112:	2f 93       	push	r18
    1114:	3f 93       	push	r19
    1116:	4f 93       	push	r20
    1118:	5f 93       	push	r21
    111a:	6f 93       	push	r22
    111c:	7f 93       	push	r23
    111e:	8f 93       	push	r24
    1120:	9f 93       	push	r25
    1122:	af 93       	push	r26
    1124:	bf 93       	push	r27
    1126:	ef 93       	push	r30
    1128:	ff 93       	push	r31
    112a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    112e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1132:	ac 01       	movw	r20, r24
    1134:	09 2e       	mov	r0, r25
    1136:	00 0c       	add	r0, r0
    1138:	66 0b       	sbc	r22, r22
    113a:	77 0b       	sbc	r23, r23
    113c:	9a 01       	movw	r18, r20
    113e:	11 27       	eor	r17, r17
    1140:	00 27       	eor	r16, r16
    1142:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1146:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    114a:	60 e0       	ldi	r22, 0x00	; 0
    114c:	70 e0       	ldi	r23, 0x00	; 0
    114e:	40 2b       	or	r20, r16
    1150:	51 2b       	or	r21, r17
    1152:	62 2b       	or	r22, r18
    1154:	73 2b       	or	r23, r19
    1156:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    115a:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    115e:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1162:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1166:	b0 9b       	sbis	0x16, 0	; 22
    1168:	1a c0       	rjmp	.+52     	; 0x119e <__vector_15+0x9a>
    116a:	01 96       	adiw	r24, 0x01	; 1
    116c:	09 2e       	mov	r0, r25
    116e:	00 0c       	add	r0, r0
    1170:	aa 0b       	sbc	r26, r26
    1172:	bb 0b       	sbc	r27, r27
    1174:	bc 01       	movw	r22, r24
    1176:	55 27       	eor	r21, r21
    1178:	44 27       	eor	r20, r20
    117a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    117e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1182:	a0 e0       	ldi	r26, 0x00	; 0
    1184:	b0 e0       	ldi	r27, 0x00	; 0
    1186:	84 2b       	or	r24, r20
    1188:	95 2b       	or	r25, r21
    118a:	a6 2b       	or	r26, r22
    118c:	b7 2b       	or	r27, r23
    118e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1192:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1196:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    119a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    119e:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x14>
    11a2:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x15>
    11a6:	30 97       	sbiw	r30, 0x00	; 0
    11a8:	39 f0       	breq	.+14     	; 0x11b8 <__vector_15+0xb4>
    11aa:	6a e0       	ldi	r22, 0x0A	; 10
    11ac:	70 e0       	ldi	r23, 0x00	; 0
    11ae:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x14>
    11b2:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x15>
    11b6:	09 95       	icall
    11b8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    11bc:	ff 91       	pop	r31
    11be:	ef 91       	pop	r30
    11c0:	bf 91       	pop	r27
    11c2:	af 91       	pop	r26
    11c4:	9f 91       	pop	r25
    11c6:	8f 91       	pop	r24
    11c8:	7f 91       	pop	r23
    11ca:	6f 91       	pop	r22
    11cc:	5f 91       	pop	r21
    11ce:	4f 91       	pop	r20
    11d0:	3f 91       	pop	r19
    11d2:	2f 91       	pop	r18
    11d4:	1f 91       	pop	r17
    11d6:	0f 91       	pop	r16
    11d8:	0f 90       	pop	r0
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	0f 90       	pop	r0
    11de:	1f 90       	pop	r1
    11e0:	18 95       	reti

000011e2 <__vector_16>:
    11e2:	1f 92       	push	r1
    11e4:	0f 92       	push	r0
    11e6:	0f b6       	in	r0, 0x3f	; 63
    11e8:	0f 92       	push	r0
    11ea:	11 24       	eor	r1, r1
    11ec:	0f 93       	push	r16
    11ee:	1f 93       	push	r17
    11f0:	2f 93       	push	r18
    11f2:	3f 93       	push	r19
    11f4:	4f 93       	push	r20
    11f6:	5f 93       	push	r21
    11f8:	6f 93       	push	r22
    11fa:	7f 93       	push	r23
    11fc:	8f 93       	push	r24
    11fe:	9f 93       	push	r25
    1200:	af 93       	push	r26
    1202:	bf 93       	push	r27
    1204:	ef 93       	push	r30
    1206:	ff 93       	push	r31
    1208:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    120c:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1210:	ac 01       	movw	r20, r24
    1212:	09 2e       	mov	r0, r25
    1214:	00 0c       	add	r0, r0
    1216:	66 0b       	sbc	r22, r22
    1218:	77 0b       	sbc	r23, r23
    121a:	9a 01       	movw	r18, r20
    121c:	11 27       	eor	r17, r17
    121e:	00 27       	eor	r16, r16
    1220:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1224:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1228:	60 e0       	ldi	r22, 0x00	; 0
    122a:	70 e0       	ldi	r23, 0x00	; 0
    122c:	40 2b       	or	r20, r16
    122e:	51 2b       	or	r21, r17
    1230:	62 2b       	or	r22, r18
    1232:	73 2b       	or	r23, r19
    1234:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    1238:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    123c:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1240:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1244:	b0 9b       	sbis	0x16, 0	; 22
    1246:	1a c0       	rjmp	.+52     	; 0x127c <__vector_16+0x9a>
    1248:	01 96       	adiw	r24, 0x01	; 1
    124a:	09 2e       	mov	r0, r25
    124c:	00 0c       	add	r0, r0
    124e:	aa 0b       	sbc	r26, r26
    1250:	bb 0b       	sbc	r27, r27
    1252:	bc 01       	movw	r22, r24
    1254:	55 27       	eor	r21, r21
    1256:	44 27       	eor	r20, r20
    1258:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    125c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1260:	a0 e0       	ldi	r26, 0x00	; 0
    1262:	b0 e0       	ldi	r27, 0x00	; 0
    1264:	84 2b       	or	r24, r20
    1266:	95 2b       	or	r25, r21
    1268:	a6 2b       	or	r26, r22
    126a:	b7 2b       	or	r27, r23
    126c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1270:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1274:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1278:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    127c:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x16>
    1280:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x17>
    1284:	30 97       	sbiw	r30, 0x00	; 0
    1286:	39 f0       	breq	.+14     	; 0x1296 <__vector_16+0xb4>
    1288:	6b e0       	ldi	r22, 0x0B	; 11
    128a:	70 e0       	ldi	r23, 0x00	; 0
    128c:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x16>
    1290:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x17>
    1294:	09 95       	icall
    1296:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    129a:	ff 91       	pop	r31
    129c:	ef 91       	pop	r30
    129e:	bf 91       	pop	r27
    12a0:	af 91       	pop	r26
    12a2:	9f 91       	pop	r25
    12a4:	8f 91       	pop	r24
    12a6:	7f 91       	pop	r23
    12a8:	6f 91       	pop	r22
    12aa:	5f 91       	pop	r21
    12ac:	4f 91       	pop	r20
    12ae:	3f 91       	pop	r19
    12b0:	2f 91       	pop	r18
    12b2:	1f 91       	pop	r17
    12b4:	0f 91       	pop	r16
    12b6:	0f 90       	pop	r0
    12b8:	0f be       	out	0x3f, r0	; 63
    12ba:	0f 90       	pop	r0
    12bc:	1f 90       	pop	r1
    12be:	18 95       	reti

000012c0 <__vector_17>:
    12c0:	1f 92       	push	r1
    12c2:	0f 92       	push	r0
    12c4:	0f b6       	in	r0, 0x3f	; 63
    12c6:	0f 92       	push	r0
    12c8:	11 24       	eor	r1, r1
    12ca:	0f 93       	push	r16
    12cc:	1f 93       	push	r17
    12ce:	2f 93       	push	r18
    12d0:	3f 93       	push	r19
    12d2:	4f 93       	push	r20
    12d4:	5f 93       	push	r21
    12d6:	6f 93       	push	r22
    12d8:	7f 93       	push	r23
    12da:	8f 93       	push	r24
    12dc:	9f 93       	push	r25
    12de:	af 93       	push	r26
    12e0:	bf 93       	push	r27
    12e2:	ef 93       	push	r30
    12e4:	ff 93       	push	r31
    12e6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    12ea:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    12ee:	ac 01       	movw	r20, r24
    12f0:	09 2e       	mov	r0, r25
    12f2:	00 0c       	add	r0, r0
    12f4:	66 0b       	sbc	r22, r22
    12f6:	77 0b       	sbc	r23, r23
    12f8:	9a 01       	movw	r18, r20
    12fa:	11 27       	eor	r17, r17
    12fc:	00 27       	eor	r16, r16
    12fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1302:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1306:	60 e0       	ldi	r22, 0x00	; 0
    1308:	70 e0       	ldi	r23, 0x00	; 0
    130a:	40 2b       	or	r20, r16
    130c:	51 2b       	or	r21, r17
    130e:	62 2b       	or	r22, r18
    1310:	73 2b       	or	r23, r19
    1312:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    1316:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    131a:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    131e:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1322:	b0 9b       	sbis	0x16, 0	; 22
    1324:	1a c0       	rjmp	.+52     	; 0x135a <__vector_17+0x9a>
    1326:	01 96       	adiw	r24, 0x01	; 1
    1328:	09 2e       	mov	r0, r25
    132a:	00 0c       	add	r0, r0
    132c:	aa 0b       	sbc	r26, r26
    132e:	bb 0b       	sbc	r27, r27
    1330:	bc 01       	movw	r22, r24
    1332:	55 27       	eor	r21, r21
    1334:	44 27       	eor	r20, r20
    1336:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    133a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    133e:	a0 e0       	ldi	r26, 0x00	; 0
    1340:	b0 e0       	ldi	r27, 0x00	; 0
    1342:	84 2b       	or	r24, r20
    1344:	95 2b       	or	r25, r21
    1346:	a6 2b       	or	r26, r22
    1348:	b7 2b       	or	r27, r23
    134a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    134e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1352:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1356:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    135a:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x18>
    135e:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x19>
    1362:	30 97       	sbiw	r30, 0x00	; 0
    1364:	39 f0       	breq	.+14     	; 0x1374 <__vector_17+0xb4>
    1366:	6c e0       	ldi	r22, 0x0C	; 12
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x18>
    136e:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x19>
    1372:	09 95       	icall
    1374:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    1378:	ff 91       	pop	r31
    137a:	ef 91       	pop	r30
    137c:	bf 91       	pop	r27
    137e:	af 91       	pop	r26
    1380:	9f 91       	pop	r25
    1382:	8f 91       	pop	r24
    1384:	7f 91       	pop	r23
    1386:	6f 91       	pop	r22
    1388:	5f 91       	pop	r21
    138a:	4f 91       	pop	r20
    138c:	3f 91       	pop	r19
    138e:	2f 91       	pop	r18
    1390:	1f 91       	pop	r17
    1392:	0f 91       	pop	r16
    1394:	0f 90       	pop	r0
    1396:	0f be       	out	0x3f, r0	; 63
    1398:	0f 90       	pop	r0
    139a:	1f 90       	pop	r1
    139c:	18 95       	reti

0000139e <__vector_18>:
    139e:	1f 92       	push	r1
    13a0:	0f 92       	push	r0
    13a2:	0f b6       	in	r0, 0x3f	; 63
    13a4:	0f 92       	push	r0
    13a6:	11 24       	eor	r1, r1
    13a8:	0f 93       	push	r16
    13aa:	1f 93       	push	r17
    13ac:	2f 93       	push	r18
    13ae:	3f 93       	push	r19
    13b0:	4f 93       	push	r20
    13b2:	5f 93       	push	r21
    13b4:	6f 93       	push	r22
    13b6:	7f 93       	push	r23
    13b8:	8f 93       	push	r24
    13ba:	9f 93       	push	r25
    13bc:	af 93       	push	r26
    13be:	bf 93       	push	r27
    13c0:	ef 93       	push	r30
    13c2:	ff 93       	push	r31
    13c4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    13c8:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    13cc:	ac 01       	movw	r20, r24
    13ce:	09 2e       	mov	r0, r25
    13d0:	00 0c       	add	r0, r0
    13d2:	66 0b       	sbc	r22, r22
    13d4:	77 0b       	sbc	r23, r23
    13d6:	9a 01       	movw	r18, r20
    13d8:	11 27       	eor	r17, r17
    13da:	00 27       	eor	r16, r16
    13dc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13e0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13e4:	60 e0       	ldi	r22, 0x00	; 0
    13e6:	70 e0       	ldi	r23, 0x00	; 0
    13e8:	40 2b       	or	r20, r16
    13ea:	51 2b       	or	r21, r17
    13ec:	62 2b       	or	r22, r18
    13ee:	73 2b       	or	r23, r19
    13f0:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    13f4:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    13f8:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    13fc:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1400:	b0 9b       	sbis	0x16, 0	; 22
    1402:	1a c0       	rjmp	.+52     	; 0x1438 <__vector_18+0x9a>
    1404:	01 96       	adiw	r24, 0x01	; 1
    1406:	09 2e       	mov	r0, r25
    1408:	00 0c       	add	r0, r0
    140a:	aa 0b       	sbc	r26, r26
    140c:	bb 0b       	sbc	r27, r27
    140e:	bc 01       	movw	r22, r24
    1410:	55 27       	eor	r21, r21
    1412:	44 27       	eor	r20, r20
    1414:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1418:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    141c:	a0 e0       	ldi	r26, 0x00	; 0
    141e:	b0 e0       	ldi	r27, 0x00	; 0
    1420:	84 2b       	or	r24, r20
    1422:	95 2b       	or	r25, r21
    1424:	a6 2b       	or	r26, r22
    1426:	b7 2b       	or	r27, r23
    1428:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    142c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1430:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1434:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1438:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x1a>
    143c:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1b>
    1440:	30 97       	sbiw	r30, 0x00	; 0
    1442:	39 f0       	breq	.+14     	; 0x1452 <__vector_18+0xb4>
    1444:	6d e0       	ldi	r22, 0x0D	; 13
    1446:	70 e0       	ldi	r23, 0x00	; 0
    1448:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x1a>
    144c:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1b>
    1450:	09 95       	icall
    1452:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    1456:	ff 91       	pop	r31
    1458:	ef 91       	pop	r30
    145a:	bf 91       	pop	r27
    145c:	af 91       	pop	r26
    145e:	9f 91       	pop	r25
    1460:	8f 91       	pop	r24
    1462:	7f 91       	pop	r23
    1464:	6f 91       	pop	r22
    1466:	5f 91       	pop	r21
    1468:	4f 91       	pop	r20
    146a:	3f 91       	pop	r19
    146c:	2f 91       	pop	r18
    146e:	1f 91       	pop	r17
    1470:	0f 91       	pop	r16
    1472:	0f 90       	pop	r0
    1474:	0f be       	out	0x3f, r0	; 63
    1476:	0f 90       	pop	r0
    1478:	1f 90       	pop	r1
    147a:	18 95       	reti

0000147c <__vector_19>:
    147c:	1f 92       	push	r1
    147e:	0f 92       	push	r0
    1480:	0f b6       	in	r0, 0x3f	; 63
    1482:	0f 92       	push	r0
    1484:	11 24       	eor	r1, r1
    1486:	0f 93       	push	r16
    1488:	1f 93       	push	r17
    148a:	2f 93       	push	r18
    148c:	3f 93       	push	r19
    148e:	4f 93       	push	r20
    1490:	5f 93       	push	r21
    1492:	6f 93       	push	r22
    1494:	7f 93       	push	r23
    1496:	8f 93       	push	r24
    1498:	9f 93       	push	r25
    149a:	af 93       	push	r26
    149c:	bf 93       	push	r27
    149e:	ef 93       	push	r30
    14a0:	ff 93       	push	r31
    14a2:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    14a6:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    14aa:	ac 01       	movw	r20, r24
    14ac:	09 2e       	mov	r0, r25
    14ae:	00 0c       	add	r0, r0
    14b0:	66 0b       	sbc	r22, r22
    14b2:	77 0b       	sbc	r23, r23
    14b4:	9a 01       	movw	r18, r20
    14b6:	11 27       	eor	r17, r17
    14b8:	00 27       	eor	r16, r16
    14ba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14be:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14c2:	60 e0       	ldi	r22, 0x00	; 0
    14c4:	70 e0       	ldi	r23, 0x00	; 0
    14c6:	40 2b       	or	r20, r16
    14c8:	51 2b       	or	r21, r17
    14ca:	62 2b       	or	r22, r18
    14cc:	73 2b       	or	r23, r19
    14ce:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    14d2:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    14d6:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    14da:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    14de:	b0 9b       	sbis	0x16, 0	; 22
    14e0:	1a c0       	rjmp	.+52     	; 0x1516 <__vector_19+0x9a>
    14e2:	01 96       	adiw	r24, 0x01	; 1
    14e4:	09 2e       	mov	r0, r25
    14e6:	00 0c       	add	r0, r0
    14e8:	aa 0b       	sbc	r26, r26
    14ea:	bb 0b       	sbc	r27, r27
    14ec:	bc 01       	movw	r22, r24
    14ee:	55 27       	eor	r21, r21
    14f0:	44 27       	eor	r20, r20
    14f2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14f6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14fa:	a0 e0       	ldi	r26, 0x00	; 0
    14fc:	b0 e0       	ldi	r27, 0x00	; 0
    14fe:	84 2b       	or	r24, r20
    1500:	95 2b       	or	r25, r21
    1502:	a6 2b       	or	r26, r22
    1504:	b7 2b       	or	r27, r23
    1506:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    150a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    150e:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1512:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1516:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1c>
    151a:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1d>
    151e:	30 97       	sbiw	r30, 0x00	; 0
    1520:	39 f0       	breq	.+14     	; 0x1530 <__vector_19+0xb4>
    1522:	6e e0       	ldi	r22, 0x0E	; 14
    1524:	70 e0       	ldi	r23, 0x00	; 0
    1526:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1c>
    152a:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1d>
    152e:	09 95       	icall
    1530:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    1534:	ff 91       	pop	r31
    1536:	ef 91       	pop	r30
    1538:	bf 91       	pop	r27
    153a:	af 91       	pop	r26
    153c:	9f 91       	pop	r25
    153e:	8f 91       	pop	r24
    1540:	7f 91       	pop	r23
    1542:	6f 91       	pop	r22
    1544:	5f 91       	pop	r21
    1546:	4f 91       	pop	r20
    1548:	3f 91       	pop	r19
    154a:	2f 91       	pop	r18
    154c:	1f 91       	pop	r17
    154e:	0f 91       	pop	r16
    1550:	0f 90       	pop	r0
    1552:	0f be       	out	0x3f, r0	; 63
    1554:	0f 90       	pop	r0
    1556:	1f 90       	pop	r1
    1558:	18 95       	reti

0000155a <__vector_20>:
    155a:	1f 92       	push	r1
    155c:	0f 92       	push	r0
    155e:	0f b6       	in	r0, 0x3f	; 63
    1560:	0f 92       	push	r0
    1562:	11 24       	eor	r1, r1
    1564:	0f 93       	push	r16
    1566:	1f 93       	push	r17
    1568:	2f 93       	push	r18
    156a:	3f 93       	push	r19
    156c:	4f 93       	push	r20
    156e:	5f 93       	push	r21
    1570:	6f 93       	push	r22
    1572:	7f 93       	push	r23
    1574:	8f 93       	push	r24
    1576:	9f 93       	push	r25
    1578:	af 93       	push	r26
    157a:	bf 93       	push	r27
    157c:	ef 93       	push	r30
    157e:	ff 93       	push	r31
    1580:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1584:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1588:	ac 01       	movw	r20, r24
    158a:	09 2e       	mov	r0, r25
    158c:	00 0c       	add	r0, r0
    158e:	66 0b       	sbc	r22, r22
    1590:	77 0b       	sbc	r23, r23
    1592:	9a 01       	movw	r18, r20
    1594:	11 27       	eor	r17, r17
    1596:	00 27       	eor	r16, r16
    1598:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    159c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15a0:	60 e0       	ldi	r22, 0x00	; 0
    15a2:	70 e0       	ldi	r23, 0x00	; 0
    15a4:	40 2b       	or	r20, r16
    15a6:	51 2b       	or	r21, r17
    15a8:	62 2b       	or	r22, r18
    15aa:	73 2b       	or	r23, r19
    15ac:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    15b0:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    15b4:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    15b8:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    15bc:	b0 9b       	sbis	0x16, 0	; 22
    15be:	1a c0       	rjmp	.+52     	; 0x15f4 <__vector_20+0x9a>
    15c0:	01 96       	adiw	r24, 0x01	; 1
    15c2:	09 2e       	mov	r0, r25
    15c4:	00 0c       	add	r0, r0
    15c6:	aa 0b       	sbc	r26, r26
    15c8:	bb 0b       	sbc	r27, r27
    15ca:	bc 01       	movw	r22, r24
    15cc:	55 27       	eor	r21, r21
    15ce:	44 27       	eor	r20, r20
    15d0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15d4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15d8:	a0 e0       	ldi	r26, 0x00	; 0
    15da:	b0 e0       	ldi	r27, 0x00	; 0
    15dc:	84 2b       	or	r24, r20
    15de:	95 2b       	or	r25, r21
    15e0:	a6 2b       	or	r26, r22
    15e2:	b7 2b       	or	r27, r23
    15e4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    15e8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    15ec:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    15f0:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    15f4:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1e>
    15f8:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1f>
    15fc:	30 97       	sbiw	r30, 0x00	; 0
    15fe:	39 f0       	breq	.+14     	; 0x160e <__vector_20+0xb4>
    1600:	6f e0       	ldi	r22, 0x0F	; 15
    1602:	70 e0       	ldi	r23, 0x00	; 0
    1604:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1e>
    1608:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1f>
    160c:	09 95       	icall
    160e:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    1612:	ff 91       	pop	r31
    1614:	ef 91       	pop	r30
    1616:	bf 91       	pop	r27
    1618:	af 91       	pop	r26
    161a:	9f 91       	pop	r25
    161c:	8f 91       	pop	r24
    161e:	7f 91       	pop	r23
    1620:	6f 91       	pop	r22
    1622:	5f 91       	pop	r21
    1624:	4f 91       	pop	r20
    1626:	3f 91       	pop	r19
    1628:	2f 91       	pop	r18
    162a:	1f 91       	pop	r17
    162c:	0f 91       	pop	r16
    162e:	0f 90       	pop	r0
    1630:	0f be       	out	0x3f, r0	; 63
    1632:	0f 90       	pop	r0
    1634:	1f 90       	pop	r1
    1636:	18 95       	reti

00001638 <__vector_21>:
    1638:	1f 92       	push	r1
    163a:	0f 92       	push	r0
    163c:	0f b6       	in	r0, 0x3f	; 63
    163e:	0f 92       	push	r0
    1640:	11 24       	eor	r1, r1
    1642:	0f 93       	push	r16
    1644:	1f 93       	push	r17
    1646:	2f 93       	push	r18
    1648:	3f 93       	push	r19
    164a:	4f 93       	push	r20
    164c:	5f 93       	push	r21
    164e:	6f 93       	push	r22
    1650:	7f 93       	push	r23
    1652:	8f 93       	push	r24
    1654:	9f 93       	push	r25
    1656:	af 93       	push	r26
    1658:	bf 93       	push	r27
    165a:	ef 93       	push	r30
    165c:	ff 93       	push	r31
    165e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1662:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1666:	ac 01       	movw	r20, r24
    1668:	09 2e       	mov	r0, r25
    166a:	00 0c       	add	r0, r0
    166c:	66 0b       	sbc	r22, r22
    166e:	77 0b       	sbc	r23, r23
    1670:	9a 01       	movw	r18, r20
    1672:	11 27       	eor	r17, r17
    1674:	00 27       	eor	r16, r16
    1676:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    167a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    167e:	60 e0       	ldi	r22, 0x00	; 0
    1680:	70 e0       	ldi	r23, 0x00	; 0
    1682:	40 2b       	or	r20, r16
    1684:	51 2b       	or	r21, r17
    1686:	62 2b       	or	r22, r18
    1688:	73 2b       	or	r23, r19
    168a:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    168e:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1692:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1696:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    169a:	b0 9b       	sbis	0x16, 0	; 22
    169c:	1a c0       	rjmp	.+52     	; 0x16d2 <__vector_21+0x9a>
    169e:	01 96       	adiw	r24, 0x01	; 1
    16a0:	09 2e       	mov	r0, r25
    16a2:	00 0c       	add	r0, r0
    16a4:	aa 0b       	sbc	r26, r26
    16a6:	bb 0b       	sbc	r27, r27
    16a8:	bc 01       	movw	r22, r24
    16aa:	55 27       	eor	r21, r21
    16ac:	44 27       	eor	r20, r20
    16ae:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16b2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16b6:	a0 e0       	ldi	r26, 0x00	; 0
    16b8:	b0 e0       	ldi	r27, 0x00	; 0
    16ba:	84 2b       	or	r24, r20
    16bc:	95 2b       	or	r25, r21
    16be:	a6 2b       	or	r26, r22
    16c0:	b7 2b       	or	r27, r23
    16c2:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    16c6:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    16ca:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    16ce:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    16d2:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x20>
    16d6:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x21>
    16da:	30 97       	sbiw	r30, 0x00	; 0
    16dc:	39 f0       	breq	.+14     	; 0x16ec <__vector_21+0xb4>
    16de:	60 e1       	ldi	r22, 0x10	; 16
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x20>
    16e6:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x21>
    16ea:	09 95       	icall
    16ec:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    16f0:	ff 91       	pop	r31
    16f2:	ef 91       	pop	r30
    16f4:	bf 91       	pop	r27
    16f6:	af 91       	pop	r26
    16f8:	9f 91       	pop	r25
    16fa:	8f 91       	pop	r24
    16fc:	7f 91       	pop	r23
    16fe:	6f 91       	pop	r22
    1700:	5f 91       	pop	r21
    1702:	4f 91       	pop	r20
    1704:	3f 91       	pop	r19
    1706:	2f 91       	pop	r18
    1708:	1f 91       	pop	r17
    170a:	0f 91       	pop	r16
    170c:	0f 90       	pop	r0
    170e:	0f be       	out	0x3f, r0	; 63
    1710:	0f 90       	pop	r0
    1712:	1f 90       	pop	r1
    1714:	18 95       	reti

00001716 <__vector_22>:
    1716:	1f 92       	push	r1
    1718:	0f 92       	push	r0
    171a:	0f b6       	in	r0, 0x3f	; 63
    171c:	0f 92       	push	r0
    171e:	11 24       	eor	r1, r1
    1720:	0f 93       	push	r16
    1722:	1f 93       	push	r17
    1724:	2f 93       	push	r18
    1726:	3f 93       	push	r19
    1728:	4f 93       	push	r20
    172a:	5f 93       	push	r21
    172c:	6f 93       	push	r22
    172e:	7f 93       	push	r23
    1730:	8f 93       	push	r24
    1732:	9f 93       	push	r25
    1734:	af 93       	push	r26
    1736:	bf 93       	push	r27
    1738:	ef 93       	push	r30
    173a:	ff 93       	push	r31
    173c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1740:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1744:	ac 01       	movw	r20, r24
    1746:	09 2e       	mov	r0, r25
    1748:	00 0c       	add	r0, r0
    174a:	66 0b       	sbc	r22, r22
    174c:	77 0b       	sbc	r23, r23
    174e:	9a 01       	movw	r18, r20
    1750:	11 27       	eor	r17, r17
    1752:	00 27       	eor	r16, r16
    1754:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1758:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    175c:	60 e0       	ldi	r22, 0x00	; 0
    175e:	70 e0       	ldi	r23, 0x00	; 0
    1760:	40 2b       	or	r20, r16
    1762:	51 2b       	or	r21, r17
    1764:	62 2b       	or	r22, r18
    1766:	73 2b       	or	r23, r19
    1768:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    176c:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1770:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1774:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1778:	b0 9b       	sbis	0x16, 0	; 22
    177a:	1a c0       	rjmp	.+52     	; 0x17b0 <__vector_22+0x9a>
    177c:	01 96       	adiw	r24, 0x01	; 1
    177e:	09 2e       	mov	r0, r25
    1780:	00 0c       	add	r0, r0
    1782:	aa 0b       	sbc	r26, r26
    1784:	bb 0b       	sbc	r27, r27
    1786:	bc 01       	movw	r22, r24
    1788:	55 27       	eor	r21, r21
    178a:	44 27       	eor	r20, r20
    178c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1790:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1794:	a0 e0       	ldi	r26, 0x00	; 0
    1796:	b0 e0       	ldi	r27, 0x00	; 0
    1798:	84 2b       	or	r24, r20
    179a:	95 2b       	or	r25, r21
    179c:	a6 2b       	or	r26, r22
    179e:	b7 2b       	or	r27, r23
    17a0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    17a4:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    17a8:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    17ac:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    17b0:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x22>
    17b4:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x23>
    17b8:	30 97       	sbiw	r30, 0x00	; 0
    17ba:	39 f0       	breq	.+14     	; 0x17ca <__vector_22+0xb4>
    17bc:	61 e1       	ldi	r22, 0x11	; 17
    17be:	70 e0       	ldi	r23, 0x00	; 0
    17c0:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x22>
    17c4:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x23>
    17c8:	09 95       	icall
    17ca:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    17ce:	ff 91       	pop	r31
    17d0:	ef 91       	pop	r30
    17d2:	bf 91       	pop	r27
    17d4:	af 91       	pop	r26
    17d6:	9f 91       	pop	r25
    17d8:	8f 91       	pop	r24
    17da:	7f 91       	pop	r23
    17dc:	6f 91       	pop	r22
    17de:	5f 91       	pop	r21
    17e0:	4f 91       	pop	r20
    17e2:	3f 91       	pop	r19
    17e4:	2f 91       	pop	r18
    17e6:	1f 91       	pop	r17
    17e8:	0f 91       	pop	r16
    17ea:	0f 90       	pop	r0
    17ec:	0f be       	out	0x3f, r0	; 63
    17ee:	0f 90       	pop	r0
    17f0:	1f 90       	pop	r1
    17f2:	18 95       	reti

000017f4 <idle>:
    17f4:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    17f8:	78 94       	sei
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	83 bf       	out	0x33, r24	; 51
    17fe:	88 95       	sleep
    1800:	fc cf       	rjmp	.-8      	; 0x17fa <idle+0x6>

00001802 <__vector_9>:
    1802:	1f 92       	push	r1
    1804:	0f 92       	push	r0
    1806:	0f b6       	in	r0, 0x3f	; 63
    1808:	0f 92       	push	r0
    180a:	11 24       	eor	r1, r1
    180c:	2f 93       	push	r18
    180e:	3f 93       	push	r19
    1810:	4f 93       	push	r20
    1812:	5f 93       	push	r21
    1814:	6f 93       	push	r22
    1816:	7f 93       	push	r23
    1818:	8f 93       	push	r24
    181a:	9f 93       	push	r25
    181c:	ef 93       	push	r30
    181e:	ff 93       	push	r31
    1820:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1824:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1828:	01 96       	adiw	r24, 0x01	; 1
    182a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__data_end+0x1>
    182e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
    1832:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    1836:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    183a:	30 97       	sbiw	r30, 0x00	; 0
    183c:	01 f1       	breq	.+64     	; 0x187e <__vector_9+0x7c>
    183e:	42 81       	ldd	r20, Z+2	; 0x02
    1840:	53 81       	ldd	r21, Z+3	; 0x03
    1842:	64 81       	ldd	r22, Z+4	; 0x04
    1844:	75 81       	ldd	r23, Z+5	; 0x05
    1846:	86 17       	cp	r24, r22
    1848:	97 07       	cpc	r25, r23
    184a:	c9 f4       	brne	.+50     	; 0x187e <__vector_9+0x7c>
    184c:	ca 01       	movw	r24, r20
    184e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1852:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1856:	42 1b       	sub	r20, r18
    1858:	53 0b       	sbc	r21, r19
    185a:	41 30       	cpi	r20, 0x01	; 1
    185c:	51 05       	cpc	r21, r1
    185e:	29 f4       	brne	.+10     	; 0x186a <__vector_9+0x68>
    1860:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1864:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1868:	01 96       	adiw	r24, 0x01	; 1
    186a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    186e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1872:	ef e6       	ldi	r30, 0x6F	; 111
    1874:	f0 e0       	ldi	r31, 0x00	; 0
    1876:	80 81       	ld	r24, Z
    1878:	82 60       	ori	r24, 0x02	; 2
    187a:	80 83       	st	Z, r24
    187c:	05 c0       	rjmp	.+10     	; 0x1888 <__vector_9+0x86>
    187e:	ef e6       	ldi	r30, 0x6F	; 111
    1880:	f0 e0       	ldi	r31, 0x00	; 0
    1882:	80 81       	ld	r24, Z
    1884:	8d 7f       	andi	r24, 0xFD	; 253
    1886:	80 83       	st	Z, r24
    1888:	ff 91       	pop	r31
    188a:	ef 91       	pop	r30
    188c:	9f 91       	pop	r25
    188e:	8f 91       	pop	r24
    1890:	7f 91       	pop	r23
    1892:	6f 91       	pop	r22
    1894:	5f 91       	pop	r21
    1896:	4f 91       	pop	r20
    1898:	3f 91       	pop	r19
    189a:	2f 91       	pop	r18
    189c:	0f 90       	pop	r0
    189e:	0f be       	out	0x3f, r0	; 63
    18a0:	0f 90       	pop	r0
    18a2:	1f 90       	pop	r1
    18a4:	18 95       	reti

000018a6 <__vector_7>:
    18a6:	1f 92       	push	r1
    18a8:	0f 92       	push	r0
    18aa:	0f b6       	in	r0, 0x3f	; 63
    18ac:	0f 92       	push	r0
    18ae:	11 24       	eor	r1, r1
    18b0:	cf 92       	push	r12
    18b2:	df 92       	push	r13
    18b4:	ef 92       	push	r14
    18b6:	ff 92       	push	r15
    18b8:	2f 93       	push	r18
    18ba:	3f 93       	push	r19
    18bc:	4f 93       	push	r20
    18be:	5f 93       	push	r21
    18c0:	6f 93       	push	r22
    18c2:	7f 93       	push	r23
    18c4:	8f 93       	push	r24
    18c6:	9f 93       	push	r25
    18c8:	af 93       	push	r26
    18ca:	bf 93       	push	r27
    18cc:	ef 93       	push	r30
    18ce:	ff 93       	push	r31
    18d0:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    18d4:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    18d8:	6c 01       	movw	r12, r24
    18da:	09 2e       	mov	r0, r25
    18dc:	00 0c       	add	r0, r0
    18de:	ee 08       	sbc	r14, r14
    18e0:	ff 08       	sbc	r15, r15
    18e2:	76 01       	movw	r14, r12
    18e4:	dd 24       	eor	r13, r13
    18e6:	cc 24       	eor	r12, r12
    18e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	70 e0       	ldi	r23, 0x00	; 0
    18f4:	c4 2a       	or	r12, r20
    18f6:	d5 2a       	or	r13, r21
    18f8:	e6 2a       	or	r14, r22
    18fa:	f7 2a       	or	r15, r23
    18fc:	b0 9b       	sbis	0x16, 0	; 22
    18fe:	1e c0       	rjmp	.+60     	; 0x193c <__vector_7+0x96>
    1900:	6c 01       	movw	r12, r24
    1902:	2f ef       	ldi	r18, 0xFF	; 255
    1904:	c2 1a       	sub	r12, r18
    1906:	d2 0a       	sbc	r13, r18
    1908:	0d 2c       	mov	r0, r13
    190a:	00 0c       	add	r0, r0
    190c:	ee 08       	sbc	r14, r14
    190e:	ff 08       	sbc	r15, r15
    1910:	d6 01       	movw	r26, r12
    1912:	99 27       	eor	r25, r25
    1914:	88 27       	eor	r24, r24
    1916:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    191a:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    191e:	e1 2c       	mov	r14, r1
    1920:	f1 2c       	mov	r15, r1
    1922:	c8 2a       	or	r12, r24
    1924:	d9 2a       	or	r13, r25
    1926:	ea 2a       	or	r14, r26
    1928:	fb 2a       	or	r15, r27
    192a:	08 c0       	rjmp	.+16     	; 0x193c <__vector_7+0x96>
    192c:	82 e2       	ldi	r24, 0x22	; 34
    192e:	91 e0       	ldi	r25, 0x01	; 1
    1930:	0e 94 c3 03 	call	0x786	; 0x786 <dequeue>
    1934:	64 e2       	ldi	r22, 0x24	; 36
    1936:	71 e0       	ldi	r23, 0x01	; 1
    1938:	0e 94 61 03 	call	0x6c2	; 0x6c2 <enqueueByDeadline>
    193c:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    1940:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    1944:	30 97       	sbiw	r30, 0x00	; 0
    1946:	69 f0       	breq	.+26     	; 0x1962 <__vector_7+0xbc>
    1948:	82 81       	ldd	r24, Z+2	; 0x02
    194a:	93 81       	ldd	r25, Z+3	; 0x03
    194c:	a4 81       	ldd	r26, Z+4	; 0x04
    194e:	b5 81       	ldd	r27, Z+5	; 0x05
    1950:	8c 19       	sub	r24, r12
    1952:	9d 09       	sbc	r25, r13
    1954:	ae 09       	sbc	r26, r14
    1956:	bf 09       	sbc	r27, r15
    1958:	18 16       	cp	r1, r24
    195a:	19 06       	cpc	r1, r25
    195c:	1a 06       	cpc	r1, r26
    195e:	1b 06       	cpc	r1, r27
    1960:	2c f7       	brge	.-54     	; 0x192c <__vector_7+0x86>
    1962:	30 97       	sbiw	r30, 0x00	; 0
    1964:	21 f1       	breq	.+72     	; 0x19ae <__vector_7+0x108>
    1966:	82 81       	ldd	r24, Z+2	; 0x02
    1968:	93 81       	ldd	r25, Z+3	; 0x03
    196a:	a4 81       	ldd	r26, Z+4	; 0x04
    196c:	b5 81       	ldd	r27, Z+5	; 0x05
    196e:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1972:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1976:	2a 17       	cp	r18, r26
    1978:	3b 07       	cpc	r19, r27
    197a:	c9 f4       	brne	.+50     	; 0x19ae <__vector_7+0x108>
    197c:	9c 01       	movw	r18, r24
    197e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1982:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1986:	84 1b       	sub	r24, r20
    1988:	95 0b       	sbc	r25, r21
    198a:	01 97       	sbiw	r24, 0x01	; 1
    198c:	31 f4       	brne	.+12     	; 0x199a <__vector_7+0xf4>
    198e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1992:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1996:	2f 5f       	subi	r18, 0xFF	; 255
    1998:	3f 4f       	sbci	r19, 0xFF	; 255
    199a:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    199e:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    19a2:	ef e6       	ldi	r30, 0x6F	; 111
    19a4:	f0 e0       	ldi	r31, 0x00	; 0
    19a6:	80 81       	ld	r24, Z
    19a8:	82 60       	ori	r24, 0x02	; 2
    19aa:	80 83       	st	Z, r24
    19ac:	05 c0       	rjmp	.+10     	; 0x19b8 <__vector_7+0x112>
    19ae:	ef e6       	ldi	r30, 0x6F	; 111
    19b0:	f0 e0       	ldi	r31, 0x00	; 0
    19b2:	80 81       	ld	r24, Z
    19b4:	8d 7f       	andi	r24, 0xFD	; 253
    19b6:	80 83       	st	Z, r24
    19b8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <schedule>
    19bc:	ff 91       	pop	r31
    19be:	ef 91       	pop	r30
    19c0:	bf 91       	pop	r27
    19c2:	af 91       	pop	r26
    19c4:	9f 91       	pop	r25
    19c6:	8f 91       	pop	r24
    19c8:	7f 91       	pop	r23
    19ca:	6f 91       	pop	r22
    19cc:	5f 91       	pop	r21
    19ce:	4f 91       	pop	r20
    19d0:	3f 91       	pop	r19
    19d2:	2f 91       	pop	r18
    19d4:	ff 90       	pop	r15
    19d6:	ef 90       	pop	r14
    19d8:	df 90       	pop	r13
    19da:	cf 90       	pop	r12
    19dc:	0f 90       	pop	r0
    19de:	0f be       	out	0x3f, r0	; 63
    19e0:	0f 90       	pop	r0
    19e2:	1f 90       	pop	r1
    19e4:	18 95       	reti

000019e6 <async>:
    19e6:	3f 92       	push	r3
    19e8:	4f 92       	push	r4
    19ea:	5f 92       	push	r5
    19ec:	6f 92       	push	r6
    19ee:	7f 92       	push	r7
    19f0:	8f 92       	push	r8
    19f2:	9f 92       	push	r9
    19f4:	af 92       	push	r10
    19f6:	bf 92       	push	r11
    19f8:	cf 92       	push	r12
    19fa:	df 92       	push	r13
    19fc:	ef 92       	push	r14
    19fe:	ff 92       	push	r15
    1a00:	0f 93       	push	r16
    1a02:	1f 93       	push	r17
    1a04:	cf 93       	push	r28
    1a06:	df 93       	push	r29
    1a08:	2b 01       	movw	r4, r22
    1a0a:	3c 01       	movw	r6, r24
    1a0c:	49 01       	movw	r8, r18
    1a0e:	5a 01       	movw	r10, r20
    1a10:	8f b7       	in	r24, 0x3f	; 63
    1a12:	80 78       	andi	r24, 0x80	; 128
    1a14:	38 2e       	mov	r3, r24
    1a16:	f8 94       	cli
    1a18:	86 e0       	ldi	r24, 0x06	; 6
    1a1a:	91 e0       	ldi	r25, 0x01	; 1
    1a1c:	0e 94 c3 03 	call	0x786	; 0x786 <dequeue>
    1a20:	ec 01       	movw	r28, r24
    1a22:	1b 87       	std	Y+11, r17	; 0x0b
    1a24:	0a 87       	std	Y+10, r16	; 0x0a
    1a26:	fd 86       	std	Y+13, r15	; 0x0d
    1a28:	ec 86       	std	Y+12, r14	; 0x0c
    1a2a:	df 86       	std	Y+15, r13	; 0x0f
    1a2c:	ce 86       	std	Y+14, r12	; 0x0e
    1a2e:	33 20       	and	r3, r3
    1a30:	61 f0       	breq	.+24     	; 0x1a4a <async+0x64>
    1a32:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a36:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a3a:	02 80       	ldd	r0, Z+2	; 0x02
    1a3c:	f3 81       	ldd	r31, Z+3	; 0x03
    1a3e:	e0 2d       	mov	r30, r0
    1a40:	82 81       	ldd	r24, Z+2	; 0x02
    1a42:	93 81       	ldd	r25, Z+3	; 0x03
    1a44:	a4 81       	ldd	r26, Z+4	; 0x04
    1a46:	b5 81       	ldd	r27, Z+5	; 0x05
    1a48:	08 c0       	rjmp	.+16     	; 0x1a5a <async+0x74>
    1a4a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <timestamp>
    1a4e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <timestamp+0x1>
    1a52:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <timestamp+0x2>
    1a56:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <timestamp+0x3>
    1a5a:	48 0e       	add	r4, r24
    1a5c:	59 1e       	adc	r5, r25
    1a5e:	6a 1e       	adc	r6, r26
    1a60:	7b 1e       	adc	r7, r27
    1a62:	4a 82       	std	Y+2, r4	; 0x02
    1a64:	5b 82       	std	Y+3, r5	; 0x03
    1a66:	6c 82       	std	Y+4, r6	; 0x04
    1a68:	7d 82       	std	Y+5, r7	; 0x05
    1a6a:	18 14       	cp	r1, r8
    1a6c:	19 04       	cpc	r1, r9
    1a6e:	1a 04       	cpc	r1, r10
    1a70:	1b 04       	cpc	r1, r11
    1a72:	44 f0       	brlt	.+16     	; 0x1a84 <async+0x9e>
    1a74:	0f 2e       	mov	r0, r31
    1a76:	88 24       	eor	r8, r8
    1a78:	8a 94       	dec	r8
    1a7a:	98 2c       	mov	r9, r8
    1a7c:	a8 2c       	mov	r10, r8
    1a7e:	ff e7       	ldi	r31, 0x7F	; 127
    1a80:	bf 2e       	mov	r11, r31
    1a82:	f0 2d       	mov	r31, r0
    1a84:	84 0c       	add	r8, r4
    1a86:	95 1c       	adc	r9, r5
    1a88:	a6 1c       	adc	r10, r6
    1a8a:	b7 1c       	adc	r11, r7
    1a8c:	8e 82       	std	Y+6, r8	; 0x06
    1a8e:	9f 82       	std	Y+7, r9	; 0x07
    1a90:	a8 86       	std	Y+8, r10	; 0x08
    1a92:	b9 86       	std	Y+9, r11	; 0x09
    1a94:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1a98:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1a9c:	c9 01       	movw	r24, r18
    1a9e:	03 2e       	mov	r0, r19
    1aa0:	00 0c       	add	r0, r0
    1aa2:	aa 0b       	sbc	r26, r26
    1aa4:	bb 0b       	sbc	r27, r27
    1aa6:	dc 01       	movw	r26, r24
    1aa8:	99 27       	eor	r25, r25
    1aaa:	88 27       	eor	r24, r24
    1aac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ab0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ab4:	60 e0       	ldi	r22, 0x00	; 0
    1ab6:	70 e0       	ldi	r23, 0x00	; 0
    1ab8:	84 2b       	or	r24, r20
    1aba:	95 2b       	or	r25, r21
    1abc:	a6 2b       	or	r26, r22
    1abe:	b7 2b       	or	r27, r23
    1ac0:	b0 9b       	sbis	0x16, 0	; 22
    1ac2:	13 c0       	rjmp	.+38     	; 0x1aea <async+0x104>
    1ac4:	c9 01       	movw	r24, r18
    1ac6:	01 96       	adiw	r24, 0x01	; 1
    1ac8:	09 2e       	mov	r0, r25
    1aca:	00 0c       	add	r0, r0
    1acc:	aa 0b       	sbc	r26, r26
    1ace:	bb 0b       	sbc	r27, r27
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	99 27       	eor	r25, r25
    1ad4:	88 27       	eor	r24, r24
    1ad6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ada:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ade:	60 e0       	ldi	r22, 0x00	; 0
    1ae0:	70 e0       	ldi	r23, 0x00	; 0
    1ae2:	84 2b       	or	r24, r20
    1ae4:	95 2b       	or	r25, r21
    1ae6:	a6 2b       	or	r26, r22
    1ae8:	b7 2b       	or	r27, r23
    1aea:	48 1a       	sub	r4, r24
    1aec:	59 0a       	sbc	r5, r25
    1aee:	6a 0a       	sbc	r6, r26
    1af0:	7b 0a       	sbc	r7, r27
    1af2:	14 14       	cp	r1, r4
    1af4:	15 04       	cpc	r1, r5
    1af6:	16 04       	cpc	r1, r6
    1af8:	17 04       	cpc	r1, r7
    1afa:	ac f5       	brge	.+106    	; 0x1b66 <async+0x180>
    1afc:	62 e2       	ldi	r22, 0x22	; 34
    1afe:	71 e0       	ldi	r23, 0x01	; 1
    1b00:	ce 01       	movw	r24, r28
    1b02:	0e 94 92 03 	call	0x724	; 0x724 <enqueueByBaseline>
    1b06:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    1b0a:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    1b0e:	30 97       	sbiw	r30, 0x00	; 0
    1b10:	21 f1       	breq	.+72     	; 0x1b5a <async+0x174>
    1b12:	82 81       	ldd	r24, Z+2	; 0x02
    1b14:	93 81       	ldd	r25, Z+3	; 0x03
    1b16:	a4 81       	ldd	r26, Z+4	; 0x04
    1b18:	b5 81       	ldd	r27, Z+5	; 0x05
    1b1a:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1b1e:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1b22:	2a 17       	cp	r18, r26
    1b24:	3b 07       	cpc	r19, r27
    1b26:	c9 f4       	brne	.+50     	; 0x1b5a <async+0x174>
    1b28:	9c 01       	movw	r18, r24
    1b2a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b2e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b32:	84 1b       	sub	r24, r20
    1b34:	95 0b       	sbc	r25, r21
    1b36:	01 97       	sbiw	r24, 0x01	; 1
    1b38:	31 f4       	brne	.+12     	; 0x1b46 <async+0x160>
    1b3a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b3e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b42:	2f 5f       	subi	r18, 0xFF	; 255
    1b44:	3f 4f       	sbci	r19, 0xFF	; 255
    1b46:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b4a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b4e:	ef e6       	ldi	r30, 0x6F	; 111
    1b50:	f0 e0       	ldi	r31, 0x00	; 0
    1b52:	80 81       	ld	r24, Z
    1b54:	82 60       	ori	r24, 0x02	; 2
    1b56:	80 83       	st	Z, r24
    1b58:	39 c0       	rjmp	.+114    	; 0x1bcc <async+0x1e6>
    1b5a:	ef e6       	ldi	r30, 0x6F	; 111
    1b5c:	f0 e0       	ldi	r31, 0x00	; 0
    1b5e:	80 81       	ld	r24, Z
    1b60:	8d 7f       	andi	r24, 0xFD	; 253
    1b62:	80 83       	st	Z, r24
    1b64:	33 c0       	rjmp	.+102    	; 0x1bcc <async+0x1e6>
    1b66:	64 e2       	ldi	r22, 0x24	; 36
    1b68:	71 e0       	ldi	r23, 0x01	; 1
    1b6a:	ce 01       	movw	r24, r28
    1b6c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <enqueueByDeadline>
    1b70:	33 20       	and	r3, r3
    1b72:	61 f1       	breq	.+88     	; 0x1bcc <async+0x1e6>
    1b74:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1b78:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1b7c:	89 2b       	or	r24, r25
    1b7e:	31 f1       	breq	.+76     	; 0x1bcc <async+0x1e6>
    1b80:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
    1b84:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
    1b88:	86 81       	ldd	r24, Z+6	; 0x06
    1b8a:	97 81       	ldd	r25, Z+7	; 0x07
    1b8c:	a0 85       	ldd	r26, Z+8	; 0x08
    1b8e:	b1 85       	ldd	r27, Z+9	; 0x09
    1b90:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1b94:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1b98:	02 80       	ldd	r0, Z+2	; 0x02
    1b9a:	f3 81       	ldd	r31, Z+3	; 0x03
    1b9c:	e0 2d       	mov	r30, r0
    1b9e:	46 81       	ldd	r20, Z+6	; 0x06
    1ba0:	57 81       	ldd	r21, Z+7	; 0x07
    1ba2:	60 85       	ldd	r22, Z+8	; 0x08
    1ba4:	71 85       	ldd	r23, Z+9	; 0x09
    1ba6:	84 1b       	sub	r24, r20
    1ba8:	95 0b       	sbc	r25, r21
    1baa:	a6 0b       	sbc	r26, r22
    1bac:	b7 0b       	sbc	r27, r23
    1bae:	72 f4       	brpl	.+28     	; 0x1bcc <async+0x1e6>
    1bb0:	84 e0       	ldi	r24, 0x04	; 4
    1bb2:	91 e0       	ldi	r25, 0x01	; 1
    1bb4:	0e 94 ee 03 	call	0x7dc	; 0x7dc <pop>
    1bb8:	62 e0       	ldi	r22, 0x02	; 2
    1bba:	71 e0       	ldi	r23, 0x01	; 1
    1bbc:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <push>
    1bc0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1bc4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1bc8:	0e 94 41 03 	call	0x682	; 0x682 <dispatch>
    1bcc:	33 20       	and	r3, r3
    1bce:	09 f0       	breq	.+2      	; 0x1bd2 <async+0x1ec>
    1bd0:	78 94       	sei
    1bd2:	ce 01       	movw	r24, r28
    1bd4:	df 91       	pop	r29
    1bd6:	cf 91       	pop	r28
    1bd8:	1f 91       	pop	r17
    1bda:	0f 91       	pop	r16
    1bdc:	ff 90       	pop	r15
    1bde:	ef 90       	pop	r14
    1be0:	df 90       	pop	r13
    1be2:	cf 90       	pop	r12
    1be4:	bf 90       	pop	r11
    1be6:	af 90       	pop	r10
    1be8:	9f 90       	pop	r9
    1bea:	8f 90       	pop	r8
    1bec:	7f 90       	pop	r7
    1bee:	6f 90       	pop	r6
    1bf0:	5f 90       	pop	r5
    1bf2:	4f 90       	pop	r4
    1bf4:	3f 90       	pop	r3
    1bf6:	08 95       	ret

00001bf8 <sync>:
    1bf8:	cf 92       	push	r12
    1bfa:	df 92       	push	r13
    1bfc:	ef 92       	push	r14
    1bfe:	ff 92       	push	r15
    1c00:	0f 93       	push	r16
    1c02:	1f 93       	push	r17
    1c04:	cf 93       	push	r28
    1c06:	df 93       	push	r29
    1c08:	ec 01       	movw	r28, r24
    1c0a:	7b 01       	movw	r14, r22
    1c0c:	6a 01       	movw	r12, r20
    1c0e:	1f b7       	in	r17, 0x3f	; 63
    1c10:	10 78       	andi	r17, 0x80	; 128
    1c12:	f8 94       	cli
    1c14:	a8 81       	ld	r26, Y
    1c16:	b9 81       	ldd	r27, Y+1	; 0x01
    1c18:	10 97       	sbiw	r26, 0x00	; 0
    1c1a:	19 f4       	brne	.+6      	; 0x1c22 <sync+0x2a>
    1c1c:	35 c0       	rjmp	.+106    	; 0x1c88 <sync+0x90>
    1c1e:	a0 81       	ld	r26, Z
    1c20:	b1 81       	ldd	r27, Z+1	; 0x01
    1c22:	14 96       	adiw	r26, 0x04	; 4
    1c24:	ed 91       	ld	r30, X+
    1c26:	fc 91       	ld	r31, X
    1c28:	15 97       	sbiw	r26, 0x05	; 5
    1c2a:	30 97       	sbiw	r30, 0x00	; 0
    1c2c:	c1 f7       	brne	.-16     	; 0x1c1e <sync+0x26>
    1c2e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c32:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c36:	a2 17       	cp	r26, r18
    1c38:	b3 07       	cpc	r27, r19
    1c3a:	11 f0       	breq	.+4      	; 0x1c40 <sync+0x48>
    1c3c:	11 11       	cpse	r17, r1
    1c3e:	07 c0       	rjmp	.+14     	; 0x1c4e <sync+0x56>
    1c40:	11 23       	and	r17, r17
    1c42:	09 f4       	brne	.+2      	; 0x1c46 <sync+0x4e>
    1c44:	4a c0       	rjmp	.+148    	; 0x1cda <sync+0xe2>
    1c46:	78 94       	sei
    1c48:	8f ef       	ldi	r24, 0xFF	; 255
    1c4a:	9f ef       	ldi	r25, 0xFF	; 255
    1c4c:	4e c0       	rjmp	.+156    	; 0x1cea <sync+0xf2>
    1c4e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c50:	9b 81       	ldd	r25, Y+3	; 0x03
    1c52:	00 97       	sbiw	r24, 0x00	; 0
    1c54:	19 f0       	breq	.+6      	; 0x1c5c <sync+0x64>
    1c56:	fc 01       	movw	r30, r24
    1c58:	15 82       	std	Z+5, r1	; 0x05
    1c5a:	14 82       	std	Z+4, r1	; 0x04
    1c5c:	3b 83       	std	Y+3, r19	; 0x03
    1c5e:	2a 83       	std	Y+2, r18	; 0x02
    1c60:	f9 01       	movw	r30, r18
    1c62:	d5 83       	std	Z+5, r29	; 0x05
    1c64:	c4 83       	std	Z+4, r28	; 0x04
    1c66:	cd 01       	movw	r24, r26
    1c68:	0e 94 41 03 	call	0x682	; 0x682 <dispatch>
    1c6c:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c70:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c74:	82 81       	ldd	r24, Z+2	; 0x02
    1c76:	93 81       	ldd	r25, Z+3	; 0x03
    1c78:	89 2b       	or	r24, r25
    1c7a:	31 f4       	brne	.+12     	; 0x1c88 <sync+0x90>
    1c7c:	11 23       	and	r17, r17
    1c7e:	81 f1       	breq	.+96     	; 0x1ce0 <sync+0xe8>
    1c80:	78 94       	sei
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	31 c0       	rjmp	.+98     	; 0x1cea <sync+0xf2>
    1c88:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c8c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c90:	99 83       	std	Y+1, r25	; 0x01
    1c92:	88 83       	st	Y, r24
    1c94:	11 23       	and	r17, r17
    1c96:	29 f0       	breq	.+10     	; 0x1ca2 <sync+0xaa>
    1c98:	8a 81       	ldd	r24, Y+2	; 0x02
    1c9a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c9c:	01 97       	sbiw	r24, 0x01	; 1
    1c9e:	09 f0       	breq	.+2      	; 0x1ca2 <sync+0xaa>
    1ca0:	78 94       	sei
    1ca2:	b6 01       	movw	r22, r12
    1ca4:	ce 01       	movw	r24, r28
    1ca6:	f7 01       	movw	r30, r14
    1ca8:	09 95       	icall
    1caa:	f8 2e       	mov	r15, r24
    1cac:	09 2f       	mov	r16, r25
    1cae:	8f b7       	in	r24, 0x3f	; 63
    1cb0:	f8 94       	cli
    1cb2:	19 82       	std	Y+1, r1	; 0x01
    1cb4:	18 82       	st	Y, r1
    1cb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1cba:	82 30       	cpi	r24, 0x02	; 2
    1cbc:	91 05       	cpc	r25, r1
    1cbe:	38 f0       	brcs	.+14     	; 0x1cce <sync+0xd6>
    1cc0:	1b 82       	std	Y+3, r1	; 0x03
    1cc2:	1a 82       	std	Y+2, r1	; 0x02
    1cc4:	fc 01       	movw	r30, r24
    1cc6:	15 82       	std	Z+5, r1	; 0x05
    1cc8:	14 82       	std	Z+4, r1	; 0x04
    1cca:	0e 94 41 03 	call	0x682	; 0x682 <dispatch>
    1cce:	11 23       	and	r17, r17
    1cd0:	51 f0       	breq	.+20     	; 0x1ce6 <sync+0xee>
    1cd2:	78 94       	sei
    1cd4:	8f 2d       	mov	r24, r15
    1cd6:	90 2f       	mov	r25, r16
    1cd8:	08 c0       	rjmp	.+16     	; 0x1cea <sync+0xf2>
    1cda:	8f ef       	ldi	r24, 0xFF	; 255
    1cdc:	9f ef       	ldi	r25, 0xFF	; 255
    1cde:	05 c0       	rjmp	.+10     	; 0x1cea <sync+0xf2>
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	02 c0       	rjmp	.+4      	; 0x1cea <sync+0xf2>
    1ce6:	8f 2d       	mov	r24, r15
    1ce8:	90 2f       	mov	r25, r16
    1cea:	df 91       	pop	r29
    1cec:	cf 91       	pop	r28
    1cee:	1f 91       	pop	r17
    1cf0:	0f 91       	pop	r16
    1cf2:	ff 90       	pop	r15
    1cf4:	ef 90       	pop	r14
    1cf6:	df 90       	pop	r13
    1cf8:	cf 90       	pop	r12
    1cfa:	08 95       	ret

00001cfc <run>:
    1cfc:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d00:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d04:	84 e2       	ldi	r24, 0x24	; 36
    1d06:	91 e0       	ldi	r25, 0x01	; 1
    1d08:	0e 94 c3 03 	call	0x786	; 0x786 <dequeue>
    1d0c:	ec 01       	movw	r28, r24
    1d0e:	f8 01       	movw	r30, r16
    1d10:	93 83       	std	Z+3, r25	; 0x03
    1d12:	82 83       	std	Z+2, r24	; 0x02
    1d14:	78 94       	sei
    1d16:	6c 85       	ldd	r22, Y+12	; 0x0c
    1d18:	7d 85       	ldd	r23, Y+13	; 0x0d
    1d1a:	4e 85       	ldd	r20, Y+14	; 0x0e
    1d1c:	5f 85       	ldd	r21, Y+15	; 0x0f
    1d1e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d20:	9b 85       	ldd	r25, Y+11	; 0x0b
    1d22:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <sync>
    1d26:	8f b7       	in	r24, 0x3f	; 63
    1d28:	f8 94       	cli
    1d2a:	66 e0       	ldi	r22, 0x06	; 6
    1d2c:	71 e0       	ldi	r23, 0x01	; 1
    1d2e:	ce 01       	movw	r24, r28
    1d30:	0e 94 da 03 	call	0x7b4	; 0x7b4 <insert>
    1d34:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1d38:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1d3c:	01 90       	ld	r0, Z+
    1d3e:	f0 81       	ld	r31, Z
    1d40:	e0 2d       	mov	r30, r0
    1d42:	c2 81       	ldd	r28, Z+2	; 0x02
    1d44:	d3 81       	ldd	r29, Z+3	; 0x03
    1d46:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
    1d4a:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
    1d4e:	30 97       	sbiw	r30, 0x00	; 0
    1d50:	a1 f0       	breq	.+40     	; 0x1d7a <run+0x7e>
    1d52:	20 97       	sbiw	r28, 0x00	; 0
    1d54:	99 f2       	breq	.-90     	; 0x1cfc <run>
    1d56:	86 81       	ldd	r24, Z+6	; 0x06
    1d58:	97 81       	ldd	r25, Z+7	; 0x07
    1d5a:	a0 85       	ldd	r26, Z+8	; 0x08
    1d5c:	b1 85       	ldd	r27, Z+9	; 0x09
    1d5e:	4e 81       	ldd	r20, Y+6	; 0x06
    1d60:	5f 81       	ldd	r21, Y+7	; 0x07
    1d62:	68 85       	ldd	r22, Y+8	; 0x08
    1d64:	79 85       	ldd	r23, Y+9	; 0x09
    1d66:	84 1b       	sub	r24, r20
    1d68:	95 0b       	sbc	r25, r21
    1d6a:	a6 0b       	sbc	r26, r22
    1d6c:	b7 0b       	sbc	r27, r23
    1d6e:	18 16       	cp	r1, r24
    1d70:	19 06       	cpc	r1, r25
    1d72:	1a 06       	cpc	r1, r26
    1d74:	1b 06       	cpc	r1, r27
    1d76:	0c f0       	brlt	.+2      	; 0x1d7a <run+0x7e>
    1d78:	c1 cf       	rjmp	.-126    	; 0x1cfc <run>
    1d7a:	82 e0       	ldi	r24, 0x02	; 2
    1d7c:	91 e0       	ldi	r25, 0x01	; 1
    1d7e:	0e 94 ee 03 	call	0x7dc	; 0x7dc <pop>
    1d82:	64 e0       	ldi	r22, 0x04	; 4
    1d84:	71 e0       	ldi	r23, 0x01	; 1
    1d86:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <push>
    1d8a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    1d8e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    1d92:	02 c0       	rjmp	.+4      	; 0x1d98 <run+0x9c>
    1d94:	a0 81       	ld	r26, Z
    1d96:	b1 81       	ldd	r27, Z+1	; 0x01
    1d98:	14 96       	adiw	r26, 0x04	; 4
    1d9a:	ed 91       	ld	r30, X+
    1d9c:	fc 91       	ld	r31, X
    1d9e:	15 97       	sbiw	r26, 0x05	; 5
    1da0:	30 97       	sbiw	r30, 0x00	; 0
    1da2:	c1 f7       	brne	.-16     	; 0x1d94 <run+0x98>
    1da4:	cd 01       	movw	r24, r26
    1da6:	0e 94 41 03 	call	0x682	; 0x682 <dispatch>
    1daa:	a8 cf       	rjmp	.-176    	; 0x1cfc <run>

00001dac <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1dac:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1dae:	42 31       	cpi	r20, 0x12	; 18
    1db0:	b8 f4       	brcc	.+46     	; 0x1de0 <install+0x34>
        char status;
        DISABLE(status);
    1db2:	9f b7       	in	r25, 0x3f	; 63
    1db4:	90 78       	andi	r25, 0x80	; 128
    1db6:	f8 94       	cli
        otable[i] = obj;
    1db8:	50 e0       	ldi	r21, 0x00	; 0
    1dba:	44 0f       	add	r20, r20
    1dbc:	55 1f       	adc	r21, r21
    1dbe:	da 01       	movw	r26, r20
    1dc0:	aa 5d       	subi	r26, 0xDA	; 218
    1dc2:	be 4f       	sbci	r27, 0xFE	; 254
    1dc4:	ed 93       	st	X+, r30
    1dc6:	fc 93       	st	X, r31
        mtable[i] = m;
    1dc8:	da 01       	movw	r26, r20
    1dca:	a2 54       	subi	r26, 0x42	; 66
    1dcc:	be 4f       	sbci	r27, 0xFE	; 254
    1dce:	6d 93       	st	X+, r22
    1dd0:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1dd2:	21 e0       	ldi	r18, 0x01	; 1
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	33 83       	std	Z+3, r19	; 0x03
    1dd8:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1dda:	99 23       	and	r25, r25
    1ddc:	09 f0       	breq	.+2      	; 0x1de0 <install+0x34>
    1dde:	78 94       	sei
    1de0:	08 95       	ret

00001de2 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1de2:	8c 01       	movw	r16, r24
    1de4:	7b 01       	movw	r14, r22
    1de6:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1de8:	8f b7       	in	r24, 0x3f	; 63
    1dea:	f8 94       	cli
    initialize();
    1dec:	0e 94 a2 02 	call	0x544	; 0x544 <initialize>
    ENABLE(1);
    1df0:	78 94       	sei
    if (m != NULL)
    1df2:	e1 14       	cp	r14, r1
    1df4:	f1 04       	cpc	r15, r1
    1df6:	41 f0       	breq	.+16     	; 0x1e08 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	a9 01       	movw	r20, r18
    1dfe:	60 e0       	ldi	r22, 0x00	; 0
    1e00:	70 e0       	ldi	r23, 0x00	; 0
    1e02:	cb 01       	movw	r24, r22
    1e04:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <async>
    DISABLE(status);
    1e08:	8f b7       	in	r24, 0x3f	; 63
    1e0a:	f8 94       	cli
    idle();
    1e0c:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <idle>

00001e10 <__divmodsi4>:
    1e10:	05 2e       	mov	r0, r21
    1e12:	97 fb       	bst	r25, 7
    1e14:	1e f4       	brtc	.+6      	; 0x1e1c <__divmodsi4+0xc>
    1e16:	00 94       	com	r0
    1e18:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__negsi2>
    1e1c:	57 fd       	sbrc	r21, 7
    1e1e:	07 d0       	rcall	.+14     	; 0x1e2e <__divmodsi4_neg2>
    1e20:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <__udivmodsi4>
    1e24:	07 fc       	sbrc	r0, 7
    1e26:	03 d0       	rcall	.+6      	; 0x1e2e <__divmodsi4_neg2>
    1e28:	4e f4       	brtc	.+18     	; 0x1e3c <__divmodsi4_exit>
    1e2a:	0c 94 1f 0f 	jmp	0x1e3e	; 0x1e3e <__negsi2>

00001e2e <__divmodsi4_neg2>:
    1e2e:	50 95       	com	r21
    1e30:	40 95       	com	r20
    1e32:	30 95       	com	r19
    1e34:	21 95       	neg	r18
    1e36:	3f 4f       	sbci	r19, 0xFF	; 255
    1e38:	4f 4f       	sbci	r20, 0xFF	; 255
    1e3a:	5f 4f       	sbci	r21, 0xFF	; 255

00001e3c <__divmodsi4_exit>:
    1e3c:	08 95       	ret

00001e3e <__negsi2>:
    1e3e:	90 95       	com	r25
    1e40:	80 95       	com	r24
    1e42:	70 95       	com	r23
    1e44:	61 95       	neg	r22
    1e46:	7f 4f       	sbci	r23, 0xFF	; 255
    1e48:	8f 4f       	sbci	r24, 0xFF	; 255
    1e4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e4c:	08 95       	ret

00001e4e <__udivmodsi4>:
    1e4e:	a1 e2       	ldi	r26, 0x21	; 33
    1e50:	1a 2e       	mov	r1, r26
    1e52:	aa 1b       	sub	r26, r26
    1e54:	bb 1b       	sub	r27, r27
    1e56:	fd 01       	movw	r30, r26
    1e58:	0d c0       	rjmp	.+26     	; 0x1e74 <__udivmodsi4_ep>

00001e5a <__udivmodsi4_loop>:
    1e5a:	aa 1f       	adc	r26, r26
    1e5c:	bb 1f       	adc	r27, r27
    1e5e:	ee 1f       	adc	r30, r30
    1e60:	ff 1f       	adc	r31, r31
    1e62:	a2 17       	cp	r26, r18
    1e64:	b3 07       	cpc	r27, r19
    1e66:	e4 07       	cpc	r30, r20
    1e68:	f5 07       	cpc	r31, r21
    1e6a:	20 f0       	brcs	.+8      	; 0x1e74 <__udivmodsi4_ep>
    1e6c:	a2 1b       	sub	r26, r18
    1e6e:	b3 0b       	sbc	r27, r19
    1e70:	e4 0b       	sbc	r30, r20
    1e72:	f5 0b       	sbc	r31, r21

00001e74 <__udivmodsi4_ep>:
    1e74:	66 1f       	adc	r22, r22
    1e76:	77 1f       	adc	r23, r23
    1e78:	88 1f       	adc	r24, r24
    1e7a:	99 1f       	adc	r25, r25
    1e7c:	1a 94       	dec	r1
    1e7e:	69 f7       	brne	.-38     	; 0x1e5a <__udivmodsi4_loop>
    1e80:	60 95       	com	r22
    1e82:	70 95       	com	r23
    1e84:	80 95       	com	r24
    1e86:	90 95       	com	r25
    1e88:	9b 01       	movw	r18, r22
    1e8a:	ac 01       	movw	r20, r24
    1e8c:	bd 01       	movw	r22, r26
    1e8e:	cf 01       	movw	r24, r30
    1e90:	08 95       	ret

00001e92 <setjmp>:
    1e92:	dc 01       	movw	r26, r24
    1e94:	2d 92       	st	X+, r2
    1e96:	3d 92       	st	X+, r3
    1e98:	4d 92       	st	X+, r4
    1e9a:	5d 92       	st	X+, r5
    1e9c:	6d 92       	st	X+, r6
    1e9e:	7d 92       	st	X+, r7
    1ea0:	8d 92       	st	X+, r8
    1ea2:	9d 92       	st	X+, r9
    1ea4:	ad 92       	st	X+, r10
    1ea6:	bd 92       	st	X+, r11
    1ea8:	cd 92       	st	X+, r12
    1eaa:	dd 92       	st	X+, r13
    1eac:	ed 92       	st	X+, r14
    1eae:	fd 92       	st	X+, r15
    1eb0:	0d 93       	st	X+, r16
    1eb2:	1d 93       	st	X+, r17
    1eb4:	cd 93       	st	X+, r28
    1eb6:	dd 93       	st	X+, r29
    1eb8:	ff 91       	pop	r31
    1eba:	ef 91       	pop	r30
    1ebc:	8d b7       	in	r24, 0x3d	; 61
    1ebe:	8d 93       	st	X+, r24
    1ec0:	8e b7       	in	r24, 0x3e	; 62
    1ec2:	8d 93       	st	X+, r24
    1ec4:	8f b7       	in	r24, 0x3f	; 63
    1ec6:	8d 93       	st	X+, r24
    1ec8:	ed 93       	st	X+, r30
    1eca:	fd 93       	st	X+, r31
    1ecc:	88 27       	eor	r24, r24
    1ece:	99 27       	eor	r25, r25
    1ed0:	09 94       	ijmp

00001ed2 <longjmp>:
    1ed2:	dc 01       	movw	r26, r24
    1ed4:	cb 01       	movw	r24, r22
    1ed6:	81 30       	cpi	r24, 0x01	; 1
    1ed8:	91 05       	cpc	r25, r1
    1eda:	81 1d       	adc	r24, r1
    1edc:	2d 90       	ld	r2, X+
    1ede:	3d 90       	ld	r3, X+
    1ee0:	4d 90       	ld	r4, X+
    1ee2:	5d 90       	ld	r5, X+
    1ee4:	6d 90       	ld	r6, X+
    1ee6:	7d 90       	ld	r7, X+
    1ee8:	8d 90       	ld	r8, X+
    1eea:	9d 90       	ld	r9, X+
    1eec:	ad 90       	ld	r10, X+
    1eee:	bd 90       	ld	r11, X+
    1ef0:	cd 90       	ld	r12, X+
    1ef2:	dd 90       	ld	r13, X+
    1ef4:	ed 90       	ld	r14, X+
    1ef6:	fd 90       	ld	r15, X+
    1ef8:	0d 91       	ld	r16, X+
    1efa:	1d 91       	ld	r17, X+
    1efc:	cd 91       	ld	r28, X+
    1efe:	dd 91       	ld	r29, X+
    1f00:	ed 91       	ld	r30, X+
    1f02:	fd 91       	ld	r31, X+
    1f04:	0d 90       	ld	r0, X+
    1f06:	f8 94       	cli
    1f08:	fe bf       	out	0x3e, r31	; 62
    1f0a:	0f be       	out	0x3f, r0	; 63
    1f0c:	ed bf       	out	0x3d, r30	; 61
    1f0e:	ed 91       	ld	r30, X+
    1f10:	fd 91       	ld	r31, X+
    1f12:	09 94       	ijmp

00001f14 <_exit>:
    1f14:	f8 94       	cli

00001f16 <__stop_program>:
    1f16:	ff cf       	rjmp	.-2      	; 0x1f16 <__stop_program>
