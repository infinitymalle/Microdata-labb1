
Labb 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  0000170c  000017a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000170c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011a  0080011a  000017ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000017ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  0000182c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c96  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c7d  00000000  00000000  00003672  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000120a  00000000  00000000  000042ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a9c  00000000  00000000  000054fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000820  00000000  00000000  00005f98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000215f  00000000  00000000  000067b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00008917  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 42 02 	jmp	0x484	; 0x484 <__vector_1>
       8:	0c 94 b1 02 	jmp	0x562	; 0x562 <__vector_2>
       c:	0c 94 20 03 	jmp	0x640	; 0x640 <__vector_3>
      10:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__vector_4>
      14:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 10 0a 	jmp	0x1420	; 0x1420 <__vector_9>
      28:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__vector_10>
      2c:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__vector_11>
      30:	0c 94 4b 05 	jmp	0xa96	; 0xa96 <__vector_12>
      34:	0c 94 ba 05 	jmp	0xb74	; 0xb74 <__vector_13>
      38:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__vector_14>
      3c:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__vector_15>
      40:	0c 94 07 07 	jmp	0xe0e	; 0xe0e <__vector_16>
      44:	0c 94 76 07 	jmp	0xeec	; 0xeec <__vector_17>
      48:	0c 94 e5 07 	jmp	0xfca	; 0xfca <__vector_18>
      4c:	0c 94 54 08 	jmp	0x10a8	; 0x10a8 <__vector_19>
      50:	0c 94 c3 08 	jmp	0x1186	; 0x1186 <__vector_20>
      54:	0c 94 32 09 	jmp	0x1264	; 0x1264 <__vector_21>
      58:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ec e0       	ldi	r30, 0x0C	; 12
      70:	f7 e1       	ldi	r31, 0x17	; 23
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	aa 31       	cpi	r26, 0x1A	; 26
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	aa e1       	ldi	r26, 0x1A	; 26
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ad 36       	cpi	r26, 0x6D	; 109
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 88 01 	call	0x310	; 0x310 <main>
      92:	0c 94 84 0b 	jmp	0x1708	; 0x1708 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <writeChar>:
	pp++;
	writeChar( num % 10 + '0', pp);
}

void writeChar(char ch, int pos)
{
      9a:	cf 93       	push	r28
      9c:	df 93       	push	r29
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	64 97       	sbiw	r28, 0x14	; 20
      a4:	0f b6       	in	r0, 0x3f	; 63
      a6:	f8 94       	cli
      a8:	de bf       	out	0x3e, r29	; 62
      aa:	0f be       	out	0x3f, r0	; 63
      ac:	cd bf       	out	0x3d, r28	; 61
	// All the numbers
	// 0 - 0x1551, 1 - 0x0110, 2 - 0x1E11, 3 - 0x1B11, 4 - 0x0B50, 5 - 0x1B41, 6 - 0x1F41, 7 - 0x0111, 8 - 0x1F51, 9 - 0x0B51
	uint16_t scc[] = {0x1551, 0x0110, 0x1E11, 0x1B11, 0x0B50, 0x1B41, 0x1F41, 0x0111, 0x1F51, 0x0B51};
      ae:	94 e1       	ldi	r25, 0x14	; 20
      b0:	e6 e0       	ldi	r30, 0x06	; 6
      b2:	f1 e0       	ldi	r31, 0x01	; 1
      b4:	de 01       	movw	r26, r28
      b6:	11 96       	adiw	r26, 0x01	; 1
      b8:	01 90       	ld	r0, Z+
      ba:	0d 92       	st	X+, r0
      bc:	9a 95       	dec	r25
      be:	e1 f7       	brne	.-8      	; 0xb8 <writeChar+0x1e>
	
	if(pos >= 0 && pos <= 5){
      c0:	66 30       	cpi	r22, 0x06	; 6
      c2:	71 05       	cpc	r23, r1
      c4:	08 f0       	brcs	.+2      	; 0xc8 <writeChar+0x2e>
      c6:	46 c0       	rjmp	.+140    	; 0x154 <writeChar+0xba>
		if (ch >= '0' || ch <= '9'){
			int pair = pos / 2;					      // Make sure it's either pair 0,1 - 2,3 or 4,5
      c8:	fb 01       	movw	r30, r22
      ca:	77 23       	and	r23, r23
      cc:	0c f4       	brge	.+2      	; 0xd0 <writeChar+0x36>
      ce:	31 96       	adiw	r30, 0x01	; 1
      d0:	f5 95       	asr	r31
      d2:	e7 95       	ror	r30
			uint8_t *lcddr = (uint8_t *) 0xEC + pair; // Point to register position 0xEC which is LCDDR0 and add pair to get LCDDR0, LCDDR1 or LCDDR2
      d4:	e4 51       	subi	r30, 0x14	; 20
      d6:	ff 4f       	sbci	r31, 0xFF	; 255
			uint16_t num = scc[ch - '0'];			  // Get the hexadecimal number from the list
      d8:	a8 2f       	mov	r26, r24
      da:	b0 e0       	ldi	r27, 0x00	; 0
      dc:	d0 97       	sbiw	r26, 0x30	; 48
      de:	aa 0f       	add	r26, r26
      e0:	bb 1f       	adc	r27, r27
      e2:	81 e0       	ldi	r24, 0x01	; 1
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	8c 0f       	add	r24, r28
      e8:	9d 1f       	adc	r25, r29
      ea:	a8 0f       	add	r26, r24
      ec:	b9 1f       	adc	r27, r25
      ee:	0d 90       	ld	r0, X+
      f0:	bc 91       	ld	r27, X
      f2:	a0 2d       	mov	r26, r0

			for (int i = 0; i <= 3; i++) {			  // Loop through every number in the hexadecimal number
      f4:	40 e0       	ldi	r20, 0x00	; 0
      f6:	50 e0       	ldi	r21, 0x00	; 0
      f8:	2a c0       	rjmp	.+84     	; 0x14e <writeChar+0xb4>
				int nibble = num & 0xF;				  // Get the least significant number in the hex
      fa:	cd 01       	movw	r24, r26
      fc:	8f 70       	andi	r24, 0x0F	; 15
      fe:	99 27       	eor	r25, r25
				
				if(pos % 2 == 1) {				      // Check if the nibble parts should be in the left or right number in the pair
     100:	9b 01       	movw	r18, r22
     102:	21 70       	andi	r18, 0x01	; 1
     104:	30 78       	andi	r19, 0x80	; 128
     106:	33 23       	and	r19, r19
     108:	34 f4       	brge	.+12     	; 0x116 <writeChar+0x7c>
     10a:	21 50       	subi	r18, 0x01	; 1
     10c:	31 09       	sbc	r19, r1
     10e:	2e 6f       	ori	r18, 0xFE	; 254
     110:	3f 6f       	ori	r19, 0xFF	; 255
     112:	2f 5f       	subi	r18, 0xFF	; 255
     114:	3f 4f       	sbci	r19, 0xFF	; 255
     116:	21 30       	cpi	r18, 0x01	; 1
     118:	31 05       	cpc	r19, r1
     11a:	51 f4       	brne	.+20     	; 0x130 <writeChar+0x96>
					nibble *= 0x10;					  // If pos % 2 == 1 -> nibble will load in right digit
     11c:	82 95       	swap	r24
     11e:	92 95       	swap	r25
     120:	90 7f       	andi	r25, 0xF0	; 240
     122:	98 27       	eor	r25, r24
     124:	80 7f       	andi	r24, 0xF0	; 240
     126:	98 27       	eor	r25, r24
					*lcddr = *lcddr & 0xF;
     128:	20 81       	ld	r18, Z
     12a:	2f 70       	andi	r18, 0x0F	; 15
     12c:	20 83       	st	Z, r18
     12e:	03 c0       	rjmp	.+6      	; 0x136 <writeChar+0x9c>
				}
				
				else {
					*lcddr = *lcddr & 0xF0;
     130:	20 81       	ld	r18, Z
     132:	20 7f       	andi	r18, 0xF0	; 240
     134:	20 83       	st	Z, r18
				}
				
				*lcddr = *lcddr | nibble;			  // Write the nibble to the digit
     136:	90 81       	ld	r25, Z
     138:	89 2b       	or	r24, r25
     13a:	80 83       	st	Z, r24
				lcddr += 5;							  // Go to LCDDRx + 5
     13c:	35 96       	adiw	r30, 0x05	; 5
				num /= 0x10;						  // Next nibble
     13e:	b2 95       	swap	r27
     140:	a2 95       	swap	r26
     142:	af 70       	andi	r26, 0x0F	; 15
     144:	ab 27       	eor	r26, r27
     146:	bf 70       	andi	r27, 0x0F	; 15
     148:	ab 27       	eor	r26, r27
		if (ch >= '0' || ch <= '9'){
			int pair = pos / 2;					      // Make sure it's either pair 0,1 - 2,3 or 4,5
			uint8_t *lcddr = (uint8_t *) 0xEC + pair; // Point to register position 0xEC which is LCDDR0 and add pair to get LCDDR0, LCDDR1 or LCDDR2
			uint16_t num = scc[ch - '0'];			  // Get the hexadecimal number from the list

			for (int i = 0; i <= 3; i++) {			  // Loop through every number in the hexadecimal number
     14a:	4f 5f       	subi	r20, 0xFF	; 255
     14c:	5f 4f       	sbci	r21, 0xFF	; 255
     14e:	44 30       	cpi	r20, 0x04	; 4
     150:	51 05       	cpc	r21, r1
     152:	9c f2       	brlt	.-90     	; 0xfa <writeChar+0x60>
				lcddr += 5;							  // Go to LCDDRx + 5
				num /= 0x10;						  // Next nibble
			}
		}
	}
}
     154:	64 96       	adiw	r28, 0x14	; 20
     156:	0f b6       	in	r0, 0x3f	; 63
     158:	f8 94       	cli
     15a:	de bf       	out	0x3e, r29	; 62
     15c:	0f be       	out	0x3f, r0	; 63
     15e:	cd bf       	out	0x3d, r28	; 61
     160:	df 91       	pop	r29
     162:	cf 91       	pop	r28
     164:	08 95       	ret

00000166 <printAt>:
	printAt(0, '4');
	printAt(0, '5');
	button();
}

void printAt(long num, int pos) {
     166:	8f 92       	push	r8
     168:	9f 92       	push	r9
     16a:	af 92       	push	r10
     16c:	bf 92       	push	r11
     16e:	cf 92       	push	r12
     170:	df 92       	push	r13
     172:	ef 92       	push	r14
     174:	ff 92       	push	r15
     176:	cf 93       	push	r28
     178:	df 93       	push	r29
     17a:	4b 01       	movw	r8, r22
     17c:	5c 01       	movw	r10, r24
     17e:	ea 01       	movw	r28, r20
	int pp = pos;
	writeChar( (num % 100) / 10 + '0', pp);
     180:	24 e6       	ldi	r18, 0x64	; 100
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	40 e0       	ldi	r20, 0x00	; 0
     186:	50 e0       	ldi	r21, 0x00	; 0
     188:	0e 94 02 0b 	call	0x1604	; 0x1604 <__divmodsi4>
     18c:	0f 2e       	mov	r0, r31
     18e:	fa e0       	ldi	r31, 0x0A	; 10
     190:	cf 2e       	mov	r12, r31
     192:	d1 2c       	mov	r13, r1
     194:	e1 2c       	mov	r14, r1
     196:	f1 2c       	mov	r15, r1
     198:	f0 2d       	mov	r31, r0
     19a:	a7 01       	movw	r20, r14
     19c:	96 01       	movw	r18, r12
     19e:	0e 94 02 0b 	call	0x1604	; 0x1604 <__divmodsi4>
     1a2:	be 01       	movw	r22, r28
     1a4:	80 e3       	ldi	r24, 0x30	; 48
     1a6:	82 0f       	add	r24, r18
     1a8:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
	pp++;
     1ac:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
     1ae:	c5 01       	movw	r24, r10
     1b0:	b4 01       	movw	r22, r8
     1b2:	a7 01       	movw	r20, r14
     1b4:	96 01       	movw	r18, r12
     1b6:	0e 94 02 0b 	call	0x1604	; 0x1604 <__divmodsi4>
     1ba:	86 2f       	mov	r24, r22
     1bc:	be 01       	movw	r22, r28
     1be:	80 5d       	subi	r24, 0xD0	; 208
     1c0:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
}
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	ff 90       	pop	r15
     1ca:	ef 90       	pop	r14
     1cc:	df 90       	pop	r13
     1ce:	cf 90       	pop	r12
     1d0:	bf 90       	pop	r11
     1d2:	af 90       	pop	r10
     1d4:	9f 90       	pop	r9
     1d6:	8f 90       	pop	r8
     1d8:	08 95       	ret

000001da <button>:
			}
		}
	}
}

void button(){
     1da:	cf 93       	push	r28
     1dc:	df 93       	push	r29
     1de:	00 d0       	rcall	.+0      	; 0x1e0 <button+0x6>
     1e0:	cd b7       	in	r28, 0x3d	; 61
     1e2:	de b7       	in	r29, 0x3e	; 62
	LCDDR8 = 1;
     1e4:	81 e0       	ldi	r24, 0x01	; 1
     1e6:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
	LCDDR13 = 0;
     1ea:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
	
	bool buttonPushed = false;
	volatile int i = 1;
     1ee:	81 e0       	ldi	r24, 0x01	; 1
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	9a 83       	std	Y+2, r25	; 0x02
     1f4:	89 83       	std	Y+1, r24	; 0x01

void button(){
	LCDDR8 = 1;
	LCDDR13 = 0;
	
	bool buttonPushed = false;
     1f6:	20 e0       	ldi	r18, 0x00	; 0
	volatile int i = 1;
	while(i){
     1f8:	26 c0       	rjmp	.+76     	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
		if (PINE >> 2 == 0 && !buttonPushed && LCDDR13 == 0x1){
     1fa:	8c b1       	in	r24, 0x0c	; 12
     1fc:	86 95       	lsr	r24
     1fe:	86 95       	lsr	r24
     200:	61 f4       	brne	.+24     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
     202:	21 11       	cpse	r18, r1
     204:	0a c0       	rjmp	.+20     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
     206:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
     20a:	81 30       	cpi	r24, 0x01	; 1
     20c:	31 f4       	brne	.+12     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
			buttonPushed = true;
			LCDDR13 = 0;
     20e:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR8 = 1;
     212:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
	
	bool buttonPushed = false;
	volatile int i = 1;
	while(i){
		if (PINE >> 2 == 0 && !buttonPushed && LCDDR13 == 0x1){
			buttonPushed = true;
     216:	21 e0       	ldi	r18, 0x01	; 1
			LCDDR13 = 0;
			LCDDR8 = 1;
     218:	16 c0       	rjmp	.+44     	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
		}
		
		else if (PINE >> 2 == 0 && !buttonPushed && LCDDR8 == 0x1) {
     21a:	8c b1       	in	r24, 0x0c	; 12
     21c:	86 95       	lsr	r24
     21e:	86 95       	lsr	r24
     220:	61 f4       	brne	.+24     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
     222:	21 11       	cpse	r18, r1
     224:	0a c0       	rjmp	.+20     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
     226:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
     22a:	81 30       	cpi	r24, 0x01	; 1
     22c:	31 f4       	brne	.+12     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
			buttonPushed = true;
			LCDDR13 = 1;
     22e:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR8 = 0;
     232:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
			LCDDR13 = 0;
			LCDDR8 = 1;
		}
		
		else if (PINE >> 2 == 0 && !buttonPushed && LCDDR8 == 0x1) {
			buttonPushed = true;
     236:	21 e0       	ldi	r18, 0x01	; 1
			LCDDR13 = 1;
			LCDDR8 = 0;
     238:	06 c0       	rjmp	.+12     	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
		}
		
		else if (PINE >> 2 == 1){
     23a:	8c b1       	in	r24, 0x0c	; 12
     23c:	86 95       	lsr	r24
     23e:	86 95       	lsr	r24
     240:	81 30       	cpi	r24, 0x01	; 1
     242:	09 f4       	brne	.+2      	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
			buttonPushed = false;
     244:	20 e0       	ldi	r18, 0x00	; 0
	LCDDR8 = 1;
	LCDDR13 = 0;
	
	bool buttonPushed = false;
	volatile int i = 1;
	while(i){
     246:	89 81       	ldd	r24, Y+1	; 0x01
     248:	9a 81       	ldd	r25, Y+2	; 0x02
     24a:	89 2b       	or	r24, r25
     24c:	b1 f6       	brne	.-84     	; 0x1fa <button+0x20>
		
		else if (PINE >> 2 == 1){
			buttonPushed = false;
		}
	}
}
     24e:	0f 90       	pop	r0
     250:	0f 90       	pop	r0
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	08 95       	ret

00000258 <LCD_Init>:
		LCDCS    - Asynchronous clock source
		LCDMUX's - Duty = 1/4, Bias = 1/3
		LCDPM's  - Number of Segments = 25
	*/
	
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     258:	87 eb       	ldi	r24, 0xB7	; 183
     25a:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	/*
		LCD Frame Rate Register:
		LCDCD's - Prescaler setting N = 16
	*/
	
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     25e:	87 e0       	ldi	r24, 0x07	; 7
     260:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCD Contrast Control Register
		None of the LCDDC's used = 300 microseconds
		LCDCC's = 3,35V
	*/
	
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     264:	8f e0       	ldi	r24, 0x0F	; 15
     266:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	
	/*
		LCDEN = LCD Enabled
		LCDAB = Low Power Waveform
	*/
	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
     26a:	80 ec       	ldi	r24, 0xC0	; 192
     26c:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	
	// start joystick
	//DDRB = 0b11010000;								//För att tillåta sättningen av bitarna (Tror vi :))
	//EIFR = (1 << PCIF0) | (1 << PCIF1);
	DDRB  = (1 << DDB7) | (1 << DDB6) | (1 << DDB4) | DDRB;
     270:	84 b1       	in	r24, 0x04	; 4
     272:	80 6d       	ori	r24, 0xD0	; 208
     274:	84 b9       	out	0x04, r24	; 4
	DDRE  = (1 << DDE3) | (1 << DDE2) | DDRE;
     276:	8d b1       	in	r24, 0x0d	; 13
     278:	8c 60       	ori	r24, 0x0C	; 12
     27a:	8d b9       	out	0x0d, r24	; 13
	EIMSK = (1 << PCIE1) | (1 << PCIE0) | EIMSK;
     27c:	8d b3       	in	r24, 0x1d	; 29
     27e:	80 6c       	ori	r24, 0xC0	; 192
     280:	8d bb       	out	0x1d, r24	; 29
	/*
		Joystick up
	*/
	PCMSK1 = (1 << PCINT14) | PCMSK1;
     282:	ec e6       	ldi	r30, 0x6C	; 108
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	80 81       	ld	r24, Z
     288:	80 64       	ori	r24, 0x40	; 64
     28a:	80 83       	st	Z, r24
	PORTB = (1 << PB6) | PORTB;
     28c:	85 b1       	in	r24, 0x05	; 5
     28e:	80 64       	ori	r24, 0x40	; 64
     290:	85 b9       	out	0x05, r24	; 5
	
	/*
		Joystick down
	*/
	PCMSK1 = (1 << PCINT15) | PCMSK1;
     292:	80 81       	ld	r24, Z
     294:	80 68       	ori	r24, 0x80	; 128
     296:	80 83       	st	Z, r24
	PORTB = (1 << PB7) | PORTB;
     298:	85 b1       	in	r24, 0x05	; 5
     29a:	80 68       	ori	r24, 0x80	; 128
     29c:	85 b9       	out	0x05, r24	; 5
	
	/*
		Joystick right
	*/
	PCMSK0 = (1 << PCINT3) | PCMSK0;
     29e:	ab e6       	ldi	r26, 0x6B	; 107
     2a0:	b0 e0       	ldi	r27, 0x00	; 0
     2a2:	8c 91       	ld	r24, X
     2a4:	88 60       	ori	r24, 0x08	; 8
     2a6:	8c 93       	st	X, r24
	PORTE = (1 << PE3) | PORTE;
     2a8:	8e b1       	in	r24, 0x0e	; 14
     2aa:	88 60       	ori	r24, 0x08	; 8
     2ac:	8e b9       	out	0x0e, r24	; 14
	
	/*
		Joystick left
	*/
	PCMSK0 =  (1 << PCINT2) | PCMSK0;
     2ae:	8c 91       	ld	r24, X
     2b0:	84 60       	ori	r24, 0x04	; 4
     2b2:	8c 93       	st	X, r24
	PORTE =  (1 << PE2) | PORTE;
     2b4:	8e b1       	in	r24, 0x0e	; 14
     2b6:	84 60       	ori	r24, 0x04	; 4
     2b8:	8e b9       	out	0x0e, r24	; 14
	
	/*
		Joystick press
	*/
	PCMSK1 = (1 << PCINT12) | PCMSK1;
     2ba:	80 81       	ld	r24, Z
     2bc:	80 61       	ori	r24, 0x10	; 16
     2be:	80 83       	st	Z, r24
	PORTB = (1 << PB4) | PORTB;
     2c0:	85 b1       	in	r24, 0x05	; 5
     2c2:	80 61       	ori	r24, 0x10	; 16
     2c4:	85 b9       	out	0x05, r24	; 5
	
	//LCDDR1  = 0x40 | (LCDDR1  & 0x99);
	LCDDR0  = 0x20   | (LCDDR0  & 0x99);
     2c6:	ec ee       	ldi	r30, 0xEC	; 236
     2c8:	f0 e0       	ldi	r31, 0x00	; 0
     2ca:	80 81       	ld	r24, Z
     2cc:	89 79       	andi	r24, 0x99	; 153
     2ce:	80 62       	ori	r24, 0x20	; 32
     2d0:	80 83       	st	Z, r24
	//EMIF = (1 << PCIF1) | (1 << PCIF0);
	
	
	printAt(0, '0');
     2d2:	40 e3       	ldi	r20, 0x30	; 48
     2d4:	50 e0       	ldi	r21, 0x00	; 0
     2d6:	60 e0       	ldi	r22, 0x00	; 0
     2d8:	70 e0       	ldi	r23, 0x00	; 0
     2da:	cb 01       	movw	r24, r22
     2dc:	0e 94 b3 00 	call	0x166	; 0x166 <printAt>
	printAt(0, '1');
     2e0:	41 e3       	ldi	r20, 0x31	; 49
     2e2:	50 e0       	ldi	r21, 0x00	; 0
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	70 e0       	ldi	r23, 0x00	; 0
     2e8:	cb 01       	movw	r24, r22
     2ea:	0e 94 b3 00 	call	0x166	; 0x166 <printAt>
	printAt(0, '4');
     2ee:	44 e3       	ldi	r20, 0x34	; 52
     2f0:	50 e0       	ldi	r21, 0x00	; 0
     2f2:	60 e0       	ldi	r22, 0x00	; 0
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	cb 01       	movw	r24, r22
     2f8:	0e 94 b3 00 	call	0x166	; 0x166 <printAt>
	printAt(0, '5');
     2fc:	45 e3       	ldi	r20, 0x35	; 53
     2fe:	50 e0       	ldi	r21, 0x00	; 0
     300:	60 e0       	ldi	r22, 0x00	; 0
     302:	70 e0       	ldi	r23, 0x00	; 0
     304:	cb 01       	movw	r24, r22
     306:	0e 94 b3 00 	call	0x166	; 0x166 <printAt>
	button();
     30a:	0e 94 ed 00 	call	0x1da	; 0x1da <button>
     30e:	08 95       	ret

00000310 <main>:
#include "Gui.h"


int main(void)
{
    CLKPR = 0x80;
     310:	e1 e6       	ldi	r30, 0x61	; 97
     312:	f0 e0       	ldi	r31, 0x00	; 0
     314:	80 e8       	ldi	r24, 0x80	; 128
     316:	80 83       	st	Z, r24
    CLKPR = 0x00;
     318:	10 82       	st	Z, r1
    LCD_Init();
     31a:	0e 94 2c 01 	call	0x258	; 0x258 <LCD_Init>
	
}
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	08 95       	ret

00000324 <dispatch>:

static void idle(void) {
    schedule();
    ENABLE(1);
    while (1) {
        SLEEP();
     324:	cf 93       	push	r28
     326:	df 93       	push	r29
     328:	00 d0       	rcall	.+0      	; 0x32a <dispatch+0x6>
     32a:	cd b7       	in	r28, 0x3d	; 61
     32c:	de b7       	in	r29, 0x3e	; 62
     32e:	9a 83       	std	Y+2, r25	; 0x02
     330:	89 83       	std	Y+1, r24	; 0x01
     332:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     336:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     33a:	06 96       	adiw	r24, 0x06	; 6
     33c:	0e 94 43 0b 	call	0x1686	; 0x1686 <setjmp>
     340:	89 2b       	or	r24, r25
     342:	59 f4       	brne	.+22     	; 0x35a <dispatch+0x36>
     344:	89 81       	ldd	r24, Y+1	; 0x01
     346:	9a 81       	ldd	r25, Y+2	; 0x02
     348:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     34c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     350:	61 e0       	ldi	r22, 0x01	; 1
     352:	70 e0       	ldi	r23, 0x00	; 0
     354:	06 96       	adiw	r24, 0x06	; 6
     356:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <longjmp>
     35a:	0f 90       	pop	r0
     35c:	0f 90       	pop	r0
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	08 95       	ret

00000364 <enqueueByDeadline>:
     364:	0f 93       	push	r16
     366:	1f 93       	push	r17
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	dc 01       	movw	r26, r24
     36e:	cb 01       	movw	r24, r22
     370:	eb 01       	movw	r28, r22
     372:	e8 81       	ld	r30, Y
     374:	f9 81       	ldd	r31, Y+1	; 0x01
     376:	c0 e0       	ldi	r28, 0x00	; 0
     378:	d0 e0       	ldi	r29, 0x00	; 0
     37a:	04 c0       	rjmp	.+8      	; 0x384 <enqueueByDeadline+0x20>
     37c:	ef 01       	movw	r28, r30
     37e:	01 90       	ld	r0, Z+
     380:	f0 81       	ld	r31, Z
     382:	e0 2d       	mov	r30, r0
     384:	30 97       	sbiw	r30, 0x00	; 0
     386:	79 f0       	breq	.+30     	; 0x3a6 <enqueueByDeadline+0x42>
     388:	06 81       	ldd	r16, Z+6	; 0x06
     38a:	17 81       	ldd	r17, Z+7	; 0x07
     38c:	20 85       	ldd	r18, Z+8	; 0x08
     38e:	31 85       	ldd	r19, Z+9	; 0x09
     390:	16 96       	adiw	r26, 0x06	; 6
     392:	4d 91       	ld	r20, X+
     394:	5d 91       	ld	r21, X+
     396:	6d 91       	ld	r22, X+
     398:	7c 91       	ld	r23, X
     39a:	19 97       	sbiw	r26, 0x09	; 9
     39c:	40 17       	cp	r20, r16
     39e:	51 07       	cpc	r21, r17
     3a0:	62 07       	cpc	r22, r18
     3a2:	73 07       	cpc	r23, r19
     3a4:	5c f7       	brge	.-42     	; 0x37c <enqueueByDeadline+0x18>
     3a6:	11 96       	adiw	r26, 0x01	; 1
     3a8:	fc 93       	st	X, r31
     3aa:	ee 93       	st	-X, r30
     3ac:	20 97       	sbiw	r28, 0x00	; 0
     3ae:	21 f4       	brne	.+8      	; 0x3b8 <enqueueByDeadline+0x54>
     3b0:	fc 01       	movw	r30, r24
     3b2:	b1 83       	std	Z+1, r27	; 0x01
     3b4:	a0 83       	st	Z, r26
     3b6:	02 c0       	rjmp	.+4      	; 0x3bc <enqueueByDeadline+0x58>
     3b8:	b9 83       	std	Y+1, r27	; 0x01
     3ba:	a8 83       	st	Y, r26
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	1f 91       	pop	r17
     3c2:	0f 91       	pop	r16
     3c4:	08 95       	ret

000003c6 <dequeue>:
     3c6:	dc 01       	movw	r26, r24
     3c8:	ed 91       	ld	r30, X+
     3ca:	fc 91       	ld	r31, X
     3cc:	11 97       	sbiw	r26, 0x01	; 1
     3ce:	30 97       	sbiw	r30, 0x00	; 0
     3d0:	59 f4       	brne	.+22     	; 0x3e8 <dequeue+0x22>
     3d2:	8f ef       	ldi	r24, 0xFF	; 255
     3d4:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     3d8:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     3dc:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	83 bf       	out	0x33, r24	; 51
     3e4:	88 95       	sleep
     3e6:	fc cf       	rjmp	.-8      	; 0x3e0 <dequeue+0x1a>
     3e8:	20 81       	ld	r18, Z
     3ea:	31 81       	ldd	r19, Z+1	; 0x01
     3ec:	2d 93       	st	X+, r18
     3ee:	3c 93       	st	X, r19
     3f0:	cf 01       	movw	r24, r30
     3f2:	08 95       	ret

000003f4 <push>:
     3f4:	fb 01       	movw	r30, r22
     3f6:	20 81       	ld	r18, Z
     3f8:	31 81       	ldd	r19, Z+1	; 0x01
     3fa:	fc 01       	movw	r30, r24
     3fc:	31 83       	std	Z+1, r19	; 0x01
     3fe:	20 83       	st	Z, r18
     400:	fb 01       	movw	r30, r22
     402:	91 83       	std	Z+1, r25	; 0x01
     404:	80 83       	st	Z, r24
     406:	08 95       	ret

00000408 <pop>:
     408:	dc 01       	movw	r26, r24
     40a:	ed 91       	ld	r30, X+
     40c:	fc 91       	ld	r31, X
     40e:	11 97       	sbiw	r26, 0x01	; 1
     410:	20 81       	ld	r18, Z
     412:	31 81       	ldd	r19, Z+1	; 0x01
     414:	2d 93       	st	X+, r18
     416:	3c 93       	st	X, r19
     418:	cf 01       	movw	r24, r30
     41a:	08 95       	ret

0000041c <schedule>:
     41c:	cf 93       	push	r28
     41e:	df 93       	push	r29
     420:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     424:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     428:	c2 81       	ldd	r28, Z+2	; 0x02
     42a:	d3 81       	ldd	r29, Z+3	; 0x03
     42c:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <msgQ>
     430:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <msgQ+0x1>
     434:	30 97       	sbiw	r30, 0x00	; 0
     436:	19 f1       	breq	.+70     	; 0x47e <schedule+0x62>
     438:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     43c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     440:	89 2b       	or	r24, r25
     442:	e9 f0       	breq	.+58     	; 0x47e <schedule+0x62>
     444:	20 97       	sbiw	r28, 0x00	; 0
     446:	69 f0       	breq	.+26     	; 0x462 <schedule+0x46>
     448:	86 81       	ldd	r24, Z+6	; 0x06
     44a:	97 81       	ldd	r25, Z+7	; 0x07
     44c:	a0 85       	ldd	r26, Z+8	; 0x08
     44e:	b1 85       	ldd	r27, Z+9	; 0x09
     450:	4e 81       	ldd	r20, Y+6	; 0x06
     452:	5f 81       	ldd	r21, Y+7	; 0x07
     454:	68 85       	ldd	r22, Y+8	; 0x08
     456:	79 85       	ldd	r23, Y+9	; 0x09
     458:	84 1b       	sub	r24, r20
     45a:	95 0b       	sbc	r25, r21
     45c:	a6 0b       	sbc	r26, r22
     45e:	b7 0b       	sbc	r27, r23
     460:	72 f4       	brpl	.+28     	; 0x47e <schedule+0x62>
     462:	84 e0       	ldi	r24, 0x04	; 4
     464:	91 e0       	ldi	r25, 0x01	; 1
     466:	0e 94 04 02 	call	0x408	; 0x408 <pop>
     46a:	62 e0       	ldi	r22, 0x02	; 2
     46c:	71 e0       	ldi	r23, 0x01	; 1
     46e:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <push>
     472:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     476:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     47a:	0e 94 92 01 	call	0x324	; 0x324 <dispatch>
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <__vector_1>:
     484:	1f 92       	push	r1
     486:	0f 92       	push	r0
     488:	0f b6       	in	r0, 0x3f	; 63
     48a:	0f 92       	push	r0
     48c:	11 24       	eor	r1, r1
     48e:	0f 93       	push	r16
     490:	1f 93       	push	r17
     492:	2f 93       	push	r18
     494:	3f 93       	push	r19
     496:	4f 93       	push	r20
     498:	5f 93       	push	r21
     49a:	6f 93       	push	r22
     49c:	7f 93       	push	r23
     49e:	8f 93       	push	r24
     4a0:	9f 93       	push	r25
     4a2:	af 93       	push	r26
     4a4:	bf 93       	push	r27
     4a6:	ef 93       	push	r30
     4a8:	ff 93       	push	r31
     4aa:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     4ae:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     4b2:	ac 01       	movw	r20, r24
     4b4:	09 2e       	mov	r0, r25
     4b6:	00 0c       	add	r0, r0
     4b8:	66 0b       	sbc	r22, r22
     4ba:	77 0b       	sbc	r23, r23
     4bc:	9a 01       	movw	r18, r20
     4be:	11 27       	eor	r17, r17
     4c0:	00 27       	eor	r16, r16
     4c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     4c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     4ca:	60 e0       	ldi	r22, 0x00	; 0
     4cc:	70 e0       	ldi	r23, 0x00	; 0
     4ce:	40 2b       	or	r20, r16
     4d0:	51 2b       	or	r21, r17
     4d2:	62 2b       	or	r22, r18
     4d4:	73 2b       	or	r23, r19
     4d6:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     4da:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     4de:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     4e2:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     4e6:	b0 9b       	sbis	0x16, 0	; 22
     4e8:	1a c0       	rjmp	.+52     	; 0x51e <__stack+0x1f>
     4ea:	01 96       	adiw	r24, 0x01	; 1
     4ec:	09 2e       	mov	r0, r25
     4ee:	00 0c       	add	r0, r0
     4f0:	aa 0b       	sbc	r26, r26
     4f2:	bb 0b       	sbc	r27, r27
     4f4:	bc 01       	movw	r22, r24
     4f6:	55 27       	eor	r21, r21
     4f8:	44 27       	eor	r20, r20
     4fa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     4fe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     502:	a0 e0       	ldi	r26, 0x00	; 0
     504:	b0 e0       	ldi	r27, 0x00	; 0
     506:	84 2b       	or	r24, r20
     508:	95 2b       	or	r25, r21
     50a:	a6 2b       	or	r26, r22
     50c:	b7 2b       	or	r27, r23
     50e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     512:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     516:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     51a:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     51e:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable>
     522:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0x1>
     526:	30 97       	sbiw	r30, 0x00	; 0
     528:	39 f0       	breq	.+14     	; 0x538 <__stack+0x39>
     52a:	60 e0       	ldi	r22, 0x00	; 0
     52c:	70 e0       	ldi	r23, 0x00	; 0
     52e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable>
     532:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0x1>
     536:	09 95       	icall
     538:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     53c:	ff 91       	pop	r31
     53e:	ef 91       	pop	r30
     540:	bf 91       	pop	r27
     542:	af 91       	pop	r26
     544:	9f 91       	pop	r25
     546:	8f 91       	pop	r24
     548:	7f 91       	pop	r23
     54a:	6f 91       	pop	r22
     54c:	5f 91       	pop	r21
     54e:	4f 91       	pop	r20
     550:	3f 91       	pop	r19
     552:	2f 91       	pop	r18
     554:	1f 91       	pop	r17
     556:	0f 91       	pop	r16
     558:	0f 90       	pop	r0
     55a:	0f be       	out	0x3f, r0	; 63
     55c:	0f 90       	pop	r0
     55e:	1f 90       	pop	r1
     560:	18 95       	reti

00000562 <__vector_2>:
     562:	1f 92       	push	r1
     564:	0f 92       	push	r0
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	0f 92       	push	r0
     56a:	11 24       	eor	r1, r1
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	2f 93       	push	r18
     572:	3f 93       	push	r19
     574:	4f 93       	push	r20
     576:	5f 93       	push	r21
     578:	6f 93       	push	r22
     57a:	7f 93       	push	r23
     57c:	8f 93       	push	r24
     57e:	9f 93       	push	r25
     580:	af 93       	push	r26
     582:	bf 93       	push	r27
     584:	ef 93       	push	r30
     586:	ff 93       	push	r31
     588:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     58c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     590:	ac 01       	movw	r20, r24
     592:	09 2e       	mov	r0, r25
     594:	00 0c       	add	r0, r0
     596:	66 0b       	sbc	r22, r22
     598:	77 0b       	sbc	r23, r23
     59a:	9a 01       	movw	r18, r20
     59c:	11 27       	eor	r17, r17
     59e:	00 27       	eor	r16, r16
     5a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     5a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     5a8:	60 e0       	ldi	r22, 0x00	; 0
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	40 2b       	or	r20, r16
     5ae:	51 2b       	or	r21, r17
     5b0:	62 2b       	or	r22, r18
     5b2:	73 2b       	or	r23, r19
     5b4:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     5b8:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     5bc:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     5c0:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     5c4:	b0 9b       	sbis	0x16, 0	; 22
     5c6:	1a c0       	rjmp	.+52     	; 0x5fc <__vector_2+0x9a>
     5c8:	01 96       	adiw	r24, 0x01	; 1
     5ca:	09 2e       	mov	r0, r25
     5cc:	00 0c       	add	r0, r0
     5ce:	aa 0b       	sbc	r26, r26
     5d0:	bb 0b       	sbc	r27, r27
     5d2:	bc 01       	movw	r22, r24
     5d4:	55 27       	eor	r21, r21
     5d6:	44 27       	eor	r20, r20
     5d8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     5dc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     5e0:	a0 e0       	ldi	r26, 0x00	; 0
     5e2:	b0 e0       	ldi	r27, 0x00	; 0
     5e4:	84 2b       	or	r24, r20
     5e6:	95 2b       	or	r25, r21
     5e8:	a6 2b       	or	r26, r22
     5ea:	b7 2b       	or	r27, r23
     5ec:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     5f0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     5f4:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     5f8:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     5fc:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x2>
     600:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x3>
     604:	30 97       	sbiw	r30, 0x00	; 0
     606:	39 f0       	breq	.+14     	; 0x616 <__vector_2+0xb4>
     608:	61 e0       	ldi	r22, 0x01	; 1
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x2>
     610:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x3>
     614:	09 95       	icall
     616:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     61a:	ff 91       	pop	r31
     61c:	ef 91       	pop	r30
     61e:	bf 91       	pop	r27
     620:	af 91       	pop	r26
     622:	9f 91       	pop	r25
     624:	8f 91       	pop	r24
     626:	7f 91       	pop	r23
     628:	6f 91       	pop	r22
     62a:	5f 91       	pop	r21
     62c:	4f 91       	pop	r20
     62e:	3f 91       	pop	r19
     630:	2f 91       	pop	r18
     632:	1f 91       	pop	r17
     634:	0f 91       	pop	r16
     636:	0f 90       	pop	r0
     638:	0f be       	out	0x3f, r0	; 63
     63a:	0f 90       	pop	r0
     63c:	1f 90       	pop	r1
     63e:	18 95       	reti

00000640 <__vector_3>:
     640:	1f 92       	push	r1
     642:	0f 92       	push	r0
     644:	0f b6       	in	r0, 0x3f	; 63
     646:	0f 92       	push	r0
     648:	11 24       	eor	r1, r1
     64a:	0f 93       	push	r16
     64c:	1f 93       	push	r17
     64e:	2f 93       	push	r18
     650:	3f 93       	push	r19
     652:	4f 93       	push	r20
     654:	5f 93       	push	r21
     656:	6f 93       	push	r22
     658:	7f 93       	push	r23
     65a:	8f 93       	push	r24
     65c:	9f 93       	push	r25
     65e:	af 93       	push	r26
     660:	bf 93       	push	r27
     662:	ef 93       	push	r30
     664:	ff 93       	push	r31
     666:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     66a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     66e:	ac 01       	movw	r20, r24
     670:	09 2e       	mov	r0, r25
     672:	00 0c       	add	r0, r0
     674:	66 0b       	sbc	r22, r22
     676:	77 0b       	sbc	r23, r23
     678:	9a 01       	movw	r18, r20
     67a:	11 27       	eor	r17, r17
     67c:	00 27       	eor	r16, r16
     67e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     682:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     686:	60 e0       	ldi	r22, 0x00	; 0
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	40 2b       	or	r20, r16
     68c:	51 2b       	or	r21, r17
     68e:	62 2b       	or	r22, r18
     690:	73 2b       	or	r23, r19
     692:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     696:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     69a:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     69e:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     6a2:	b0 9b       	sbis	0x16, 0	; 22
     6a4:	1a c0       	rjmp	.+52     	; 0x6da <__vector_3+0x9a>
     6a6:	01 96       	adiw	r24, 0x01	; 1
     6a8:	09 2e       	mov	r0, r25
     6aa:	00 0c       	add	r0, r0
     6ac:	aa 0b       	sbc	r26, r26
     6ae:	bb 0b       	sbc	r27, r27
     6b0:	bc 01       	movw	r22, r24
     6b2:	55 27       	eor	r21, r21
     6b4:	44 27       	eor	r20, r20
     6b6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6ba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6be:	a0 e0       	ldi	r26, 0x00	; 0
     6c0:	b0 e0       	ldi	r27, 0x00	; 0
     6c2:	84 2b       	or	r24, r20
     6c4:	95 2b       	or	r25, r21
     6c6:	a6 2b       	or	r26, r22
     6c8:	b7 2b       	or	r27, r23
     6ca:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     6ce:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     6d2:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     6d6:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     6da:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x4>
     6de:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x5>
     6e2:	30 97       	sbiw	r30, 0x00	; 0
     6e4:	39 f0       	breq	.+14     	; 0x6f4 <__vector_3+0xb4>
     6e6:	62 e0       	ldi	r22, 0x02	; 2
     6e8:	70 e0       	ldi	r23, 0x00	; 0
     6ea:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x4>
     6ee:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x5>
     6f2:	09 95       	icall
     6f4:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     6f8:	ff 91       	pop	r31
     6fa:	ef 91       	pop	r30
     6fc:	bf 91       	pop	r27
     6fe:	af 91       	pop	r26
     700:	9f 91       	pop	r25
     702:	8f 91       	pop	r24
     704:	7f 91       	pop	r23
     706:	6f 91       	pop	r22
     708:	5f 91       	pop	r21
     70a:	4f 91       	pop	r20
     70c:	3f 91       	pop	r19
     70e:	2f 91       	pop	r18
     710:	1f 91       	pop	r17
     712:	0f 91       	pop	r16
     714:	0f 90       	pop	r0
     716:	0f be       	out	0x3f, r0	; 63
     718:	0f 90       	pop	r0
     71a:	1f 90       	pop	r1
     71c:	18 95       	reti

0000071e <__vector_4>:
     71e:	1f 92       	push	r1
     720:	0f 92       	push	r0
     722:	0f b6       	in	r0, 0x3f	; 63
     724:	0f 92       	push	r0
     726:	11 24       	eor	r1, r1
     728:	0f 93       	push	r16
     72a:	1f 93       	push	r17
     72c:	2f 93       	push	r18
     72e:	3f 93       	push	r19
     730:	4f 93       	push	r20
     732:	5f 93       	push	r21
     734:	6f 93       	push	r22
     736:	7f 93       	push	r23
     738:	8f 93       	push	r24
     73a:	9f 93       	push	r25
     73c:	af 93       	push	r26
     73e:	bf 93       	push	r27
     740:	ef 93       	push	r30
     742:	ff 93       	push	r31
     744:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     748:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     74c:	ac 01       	movw	r20, r24
     74e:	09 2e       	mov	r0, r25
     750:	00 0c       	add	r0, r0
     752:	66 0b       	sbc	r22, r22
     754:	77 0b       	sbc	r23, r23
     756:	9a 01       	movw	r18, r20
     758:	11 27       	eor	r17, r17
     75a:	00 27       	eor	r16, r16
     75c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     760:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	70 e0       	ldi	r23, 0x00	; 0
     768:	40 2b       	or	r20, r16
     76a:	51 2b       	or	r21, r17
     76c:	62 2b       	or	r22, r18
     76e:	73 2b       	or	r23, r19
     770:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     774:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     778:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     77c:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     780:	b0 9b       	sbis	0x16, 0	; 22
     782:	1a c0       	rjmp	.+52     	; 0x7b8 <__vector_4+0x9a>
     784:	01 96       	adiw	r24, 0x01	; 1
     786:	09 2e       	mov	r0, r25
     788:	00 0c       	add	r0, r0
     78a:	aa 0b       	sbc	r26, r26
     78c:	bb 0b       	sbc	r27, r27
     78e:	bc 01       	movw	r22, r24
     790:	55 27       	eor	r21, r21
     792:	44 27       	eor	r20, r20
     794:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     798:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     79c:	a0 e0       	ldi	r26, 0x00	; 0
     79e:	b0 e0       	ldi	r27, 0x00	; 0
     7a0:	84 2b       	or	r24, r20
     7a2:	95 2b       	or	r25, r21
     7a4:	a6 2b       	or	r26, r22
     7a6:	b7 2b       	or	r27, r23
     7a8:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     7ac:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     7b0:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     7b4:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     7b8:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x6>
     7bc:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x7>
     7c0:	30 97       	sbiw	r30, 0x00	; 0
     7c2:	39 f0       	breq	.+14     	; 0x7d2 <__vector_4+0xb4>
     7c4:	63 e0       	ldi	r22, 0x03	; 3
     7c6:	70 e0       	ldi	r23, 0x00	; 0
     7c8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x6>
     7cc:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x7>
     7d0:	09 95       	icall
     7d2:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     7d6:	ff 91       	pop	r31
     7d8:	ef 91       	pop	r30
     7da:	bf 91       	pop	r27
     7dc:	af 91       	pop	r26
     7de:	9f 91       	pop	r25
     7e0:	8f 91       	pop	r24
     7e2:	7f 91       	pop	r23
     7e4:	6f 91       	pop	r22
     7e6:	5f 91       	pop	r21
     7e8:	4f 91       	pop	r20
     7ea:	3f 91       	pop	r19
     7ec:	2f 91       	pop	r18
     7ee:	1f 91       	pop	r17
     7f0:	0f 91       	pop	r16
     7f2:	0f 90       	pop	r0
     7f4:	0f be       	out	0x3f, r0	; 63
     7f6:	0f 90       	pop	r0
     7f8:	1f 90       	pop	r1
     7fa:	18 95       	reti

000007fc <__vector_5>:
     7fc:	1f 92       	push	r1
     7fe:	0f 92       	push	r0
     800:	0f b6       	in	r0, 0x3f	; 63
     802:	0f 92       	push	r0
     804:	11 24       	eor	r1, r1
     806:	0f 93       	push	r16
     808:	1f 93       	push	r17
     80a:	2f 93       	push	r18
     80c:	3f 93       	push	r19
     80e:	4f 93       	push	r20
     810:	5f 93       	push	r21
     812:	6f 93       	push	r22
     814:	7f 93       	push	r23
     816:	8f 93       	push	r24
     818:	9f 93       	push	r25
     81a:	af 93       	push	r26
     81c:	bf 93       	push	r27
     81e:	ef 93       	push	r30
     820:	ff 93       	push	r31
     822:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     826:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     82a:	ac 01       	movw	r20, r24
     82c:	09 2e       	mov	r0, r25
     82e:	00 0c       	add	r0, r0
     830:	66 0b       	sbc	r22, r22
     832:	77 0b       	sbc	r23, r23
     834:	9a 01       	movw	r18, r20
     836:	11 27       	eor	r17, r17
     838:	00 27       	eor	r16, r16
     83a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     83e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     842:	60 e0       	ldi	r22, 0x00	; 0
     844:	70 e0       	ldi	r23, 0x00	; 0
     846:	40 2b       	or	r20, r16
     848:	51 2b       	or	r21, r17
     84a:	62 2b       	or	r22, r18
     84c:	73 2b       	or	r23, r19
     84e:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     852:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     856:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     85a:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     85e:	b0 9b       	sbis	0x16, 0	; 22
     860:	1a c0       	rjmp	.+52     	; 0x896 <__vector_5+0x9a>
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	09 2e       	mov	r0, r25
     866:	00 0c       	add	r0, r0
     868:	aa 0b       	sbc	r26, r26
     86a:	bb 0b       	sbc	r27, r27
     86c:	bc 01       	movw	r22, r24
     86e:	55 27       	eor	r21, r21
     870:	44 27       	eor	r20, r20
     872:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     876:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     87a:	a0 e0       	ldi	r26, 0x00	; 0
     87c:	b0 e0       	ldi	r27, 0x00	; 0
     87e:	84 2b       	or	r24, r20
     880:	95 2b       	or	r25, r21
     882:	a6 2b       	or	r26, r22
     884:	b7 2b       	or	r27, r23
     886:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     88a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     88e:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     892:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     896:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x8>
     89a:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x9>
     89e:	30 97       	sbiw	r30, 0x00	; 0
     8a0:	39 f0       	breq	.+14     	; 0x8b0 <__vector_5+0xb4>
     8a2:	64 e0       	ldi	r22, 0x04	; 4
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x8>
     8aa:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x9>
     8ae:	09 95       	icall
     8b0:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     8b4:	ff 91       	pop	r31
     8b6:	ef 91       	pop	r30
     8b8:	bf 91       	pop	r27
     8ba:	af 91       	pop	r26
     8bc:	9f 91       	pop	r25
     8be:	8f 91       	pop	r24
     8c0:	7f 91       	pop	r23
     8c2:	6f 91       	pop	r22
     8c4:	5f 91       	pop	r21
     8c6:	4f 91       	pop	r20
     8c8:	3f 91       	pop	r19
     8ca:	2f 91       	pop	r18
     8cc:	1f 91       	pop	r17
     8ce:	0f 91       	pop	r16
     8d0:	0f 90       	pop	r0
     8d2:	0f be       	out	0x3f, r0	; 63
     8d4:	0f 90       	pop	r0
     8d6:	1f 90       	pop	r1
     8d8:	18 95       	reti

000008da <__vector_10>:
     8da:	1f 92       	push	r1
     8dc:	0f 92       	push	r0
     8de:	0f b6       	in	r0, 0x3f	; 63
     8e0:	0f 92       	push	r0
     8e2:	11 24       	eor	r1, r1
     8e4:	0f 93       	push	r16
     8e6:	1f 93       	push	r17
     8e8:	2f 93       	push	r18
     8ea:	3f 93       	push	r19
     8ec:	4f 93       	push	r20
     8ee:	5f 93       	push	r21
     8f0:	6f 93       	push	r22
     8f2:	7f 93       	push	r23
     8f4:	8f 93       	push	r24
     8f6:	9f 93       	push	r25
     8f8:	af 93       	push	r26
     8fa:	bf 93       	push	r27
     8fc:	ef 93       	push	r30
     8fe:	ff 93       	push	r31
     900:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     904:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     908:	ac 01       	movw	r20, r24
     90a:	09 2e       	mov	r0, r25
     90c:	00 0c       	add	r0, r0
     90e:	66 0b       	sbc	r22, r22
     910:	77 0b       	sbc	r23, r23
     912:	9a 01       	movw	r18, r20
     914:	11 27       	eor	r17, r17
     916:	00 27       	eor	r16, r16
     918:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     91c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	40 2b       	or	r20, r16
     926:	51 2b       	or	r21, r17
     928:	62 2b       	or	r22, r18
     92a:	73 2b       	or	r23, r19
     92c:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     930:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     934:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     938:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     93c:	b0 9b       	sbis	0x16, 0	; 22
     93e:	1a c0       	rjmp	.+52     	; 0x974 <__vector_10+0x9a>
     940:	01 96       	adiw	r24, 0x01	; 1
     942:	09 2e       	mov	r0, r25
     944:	00 0c       	add	r0, r0
     946:	aa 0b       	sbc	r26, r26
     948:	bb 0b       	sbc	r27, r27
     94a:	bc 01       	movw	r22, r24
     94c:	55 27       	eor	r21, r21
     94e:	44 27       	eor	r20, r20
     950:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     954:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     958:	a0 e0       	ldi	r26, 0x00	; 0
     95a:	b0 e0       	ldi	r27, 0x00	; 0
     95c:	84 2b       	or	r24, r20
     95e:	95 2b       	or	r25, r21
     960:	a6 2b       	or	r26, r22
     962:	b7 2b       	or	r27, r23
     964:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     968:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     96c:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     970:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     974:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0xa>
     978:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0xb>
     97c:	30 97       	sbiw	r30, 0x00	; 0
     97e:	39 f0       	breq	.+14     	; 0x98e <__vector_10+0xb4>
     980:	65 e0       	ldi	r22, 0x05	; 5
     982:	70 e0       	ldi	r23, 0x00	; 0
     984:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0xa>
     988:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0xb>
     98c:	09 95       	icall
     98e:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     992:	ff 91       	pop	r31
     994:	ef 91       	pop	r30
     996:	bf 91       	pop	r27
     998:	af 91       	pop	r26
     99a:	9f 91       	pop	r25
     99c:	8f 91       	pop	r24
     99e:	7f 91       	pop	r23
     9a0:	6f 91       	pop	r22
     9a2:	5f 91       	pop	r21
     9a4:	4f 91       	pop	r20
     9a6:	3f 91       	pop	r19
     9a8:	2f 91       	pop	r18
     9aa:	1f 91       	pop	r17
     9ac:	0f 91       	pop	r16
     9ae:	0f 90       	pop	r0
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	0f 90       	pop	r0
     9b4:	1f 90       	pop	r1
     9b6:	18 95       	reti

000009b8 <__vector_11>:
     9b8:	1f 92       	push	r1
     9ba:	0f 92       	push	r0
     9bc:	0f b6       	in	r0, 0x3f	; 63
     9be:	0f 92       	push	r0
     9c0:	11 24       	eor	r1, r1
     9c2:	0f 93       	push	r16
     9c4:	1f 93       	push	r17
     9c6:	2f 93       	push	r18
     9c8:	3f 93       	push	r19
     9ca:	4f 93       	push	r20
     9cc:	5f 93       	push	r21
     9ce:	6f 93       	push	r22
     9d0:	7f 93       	push	r23
     9d2:	8f 93       	push	r24
     9d4:	9f 93       	push	r25
     9d6:	af 93       	push	r26
     9d8:	bf 93       	push	r27
     9da:	ef 93       	push	r30
     9dc:	ff 93       	push	r31
     9de:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     9e2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     9e6:	ac 01       	movw	r20, r24
     9e8:	09 2e       	mov	r0, r25
     9ea:	00 0c       	add	r0, r0
     9ec:	66 0b       	sbc	r22, r22
     9ee:	77 0b       	sbc	r23, r23
     9f0:	9a 01       	movw	r18, r20
     9f2:	11 27       	eor	r17, r17
     9f4:	00 27       	eor	r16, r16
     9f6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9fa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	40 2b       	or	r20, r16
     a04:	51 2b       	or	r21, r17
     a06:	62 2b       	or	r22, r18
     a08:	73 2b       	or	r23, r19
     a0a:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     a0e:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     a12:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     a16:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     a1a:	b0 9b       	sbis	0x16, 0	; 22
     a1c:	1a c0       	rjmp	.+52     	; 0xa52 <__vector_11+0x9a>
     a1e:	01 96       	adiw	r24, 0x01	; 1
     a20:	09 2e       	mov	r0, r25
     a22:	00 0c       	add	r0, r0
     a24:	aa 0b       	sbc	r26, r26
     a26:	bb 0b       	sbc	r27, r27
     a28:	bc 01       	movw	r22, r24
     a2a:	55 27       	eor	r21, r21
     a2c:	44 27       	eor	r20, r20
     a2e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a32:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a36:	a0 e0       	ldi	r26, 0x00	; 0
     a38:	b0 e0       	ldi	r27, 0x00	; 0
     a3a:	84 2b       	or	r24, r20
     a3c:	95 2b       	or	r25, r21
     a3e:	a6 2b       	or	r26, r22
     a40:	b7 2b       	or	r27, r23
     a42:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     a46:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     a4a:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     a4e:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     a52:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0xc>
     a56:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0xd>
     a5a:	30 97       	sbiw	r30, 0x00	; 0
     a5c:	39 f0       	breq	.+14     	; 0xa6c <__vector_11+0xb4>
     a5e:	66 e0       	ldi	r22, 0x06	; 6
     a60:	70 e0       	ldi	r23, 0x00	; 0
     a62:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0xc>
     a66:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0xd>
     a6a:	09 95       	icall
     a6c:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     a70:	ff 91       	pop	r31
     a72:	ef 91       	pop	r30
     a74:	bf 91       	pop	r27
     a76:	af 91       	pop	r26
     a78:	9f 91       	pop	r25
     a7a:	8f 91       	pop	r24
     a7c:	7f 91       	pop	r23
     a7e:	6f 91       	pop	r22
     a80:	5f 91       	pop	r21
     a82:	4f 91       	pop	r20
     a84:	3f 91       	pop	r19
     a86:	2f 91       	pop	r18
     a88:	1f 91       	pop	r17
     a8a:	0f 91       	pop	r16
     a8c:	0f 90       	pop	r0
     a8e:	0f be       	out	0x3f, r0	; 63
     a90:	0f 90       	pop	r0
     a92:	1f 90       	pop	r1
     a94:	18 95       	reti

00000a96 <__vector_12>:
     a96:	1f 92       	push	r1
     a98:	0f 92       	push	r0
     a9a:	0f b6       	in	r0, 0x3f	; 63
     a9c:	0f 92       	push	r0
     a9e:	11 24       	eor	r1, r1
     aa0:	0f 93       	push	r16
     aa2:	1f 93       	push	r17
     aa4:	2f 93       	push	r18
     aa6:	3f 93       	push	r19
     aa8:	4f 93       	push	r20
     aaa:	5f 93       	push	r21
     aac:	6f 93       	push	r22
     aae:	7f 93       	push	r23
     ab0:	8f 93       	push	r24
     ab2:	9f 93       	push	r25
     ab4:	af 93       	push	r26
     ab6:	bf 93       	push	r27
     ab8:	ef 93       	push	r30
     aba:	ff 93       	push	r31
     abc:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     ac0:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     ac4:	ac 01       	movw	r20, r24
     ac6:	09 2e       	mov	r0, r25
     ac8:	00 0c       	add	r0, r0
     aca:	66 0b       	sbc	r22, r22
     acc:	77 0b       	sbc	r23, r23
     ace:	9a 01       	movw	r18, r20
     ad0:	11 27       	eor	r17, r17
     ad2:	00 27       	eor	r16, r16
     ad4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ad8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     adc:	60 e0       	ldi	r22, 0x00	; 0
     ade:	70 e0       	ldi	r23, 0x00	; 0
     ae0:	40 2b       	or	r20, r16
     ae2:	51 2b       	or	r21, r17
     ae4:	62 2b       	or	r22, r18
     ae6:	73 2b       	or	r23, r19
     ae8:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     aec:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     af0:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     af4:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     af8:	b0 9b       	sbis	0x16, 0	; 22
     afa:	1a c0       	rjmp	.+52     	; 0xb30 <__vector_12+0x9a>
     afc:	01 96       	adiw	r24, 0x01	; 1
     afe:	09 2e       	mov	r0, r25
     b00:	00 0c       	add	r0, r0
     b02:	aa 0b       	sbc	r26, r26
     b04:	bb 0b       	sbc	r27, r27
     b06:	bc 01       	movw	r22, r24
     b08:	55 27       	eor	r21, r21
     b0a:	44 27       	eor	r20, r20
     b0c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b10:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b14:	a0 e0       	ldi	r26, 0x00	; 0
     b16:	b0 e0       	ldi	r27, 0x00	; 0
     b18:	84 2b       	or	r24, r20
     b1a:	95 2b       	or	r25, r21
     b1c:	a6 2b       	or	r26, r22
     b1e:	b7 2b       	or	r27, r23
     b20:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     b24:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     b28:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     b2c:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     b30:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xe>
     b34:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xf>
     b38:	30 97       	sbiw	r30, 0x00	; 0
     b3a:	39 f0       	breq	.+14     	; 0xb4a <__vector_12+0xb4>
     b3c:	67 e0       	ldi	r22, 0x07	; 7
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xe>
     b44:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xf>
     b48:	09 95       	icall
     b4a:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     b4e:	ff 91       	pop	r31
     b50:	ef 91       	pop	r30
     b52:	bf 91       	pop	r27
     b54:	af 91       	pop	r26
     b56:	9f 91       	pop	r25
     b58:	8f 91       	pop	r24
     b5a:	7f 91       	pop	r23
     b5c:	6f 91       	pop	r22
     b5e:	5f 91       	pop	r21
     b60:	4f 91       	pop	r20
     b62:	3f 91       	pop	r19
     b64:	2f 91       	pop	r18
     b66:	1f 91       	pop	r17
     b68:	0f 91       	pop	r16
     b6a:	0f 90       	pop	r0
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	0f 90       	pop	r0
     b70:	1f 90       	pop	r1
     b72:	18 95       	reti

00000b74 <__vector_13>:
     b74:	1f 92       	push	r1
     b76:	0f 92       	push	r0
     b78:	0f b6       	in	r0, 0x3f	; 63
     b7a:	0f 92       	push	r0
     b7c:	11 24       	eor	r1, r1
     b7e:	0f 93       	push	r16
     b80:	1f 93       	push	r17
     b82:	2f 93       	push	r18
     b84:	3f 93       	push	r19
     b86:	4f 93       	push	r20
     b88:	5f 93       	push	r21
     b8a:	6f 93       	push	r22
     b8c:	7f 93       	push	r23
     b8e:	8f 93       	push	r24
     b90:	9f 93       	push	r25
     b92:	af 93       	push	r26
     b94:	bf 93       	push	r27
     b96:	ef 93       	push	r30
     b98:	ff 93       	push	r31
     b9a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     b9e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     ba2:	ac 01       	movw	r20, r24
     ba4:	09 2e       	mov	r0, r25
     ba6:	00 0c       	add	r0, r0
     ba8:	66 0b       	sbc	r22, r22
     baa:	77 0b       	sbc	r23, r23
     bac:	9a 01       	movw	r18, r20
     bae:	11 27       	eor	r17, r17
     bb0:	00 27       	eor	r16, r16
     bb2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bb6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bba:	60 e0       	ldi	r22, 0x00	; 0
     bbc:	70 e0       	ldi	r23, 0x00	; 0
     bbe:	40 2b       	or	r20, r16
     bc0:	51 2b       	or	r21, r17
     bc2:	62 2b       	or	r22, r18
     bc4:	73 2b       	or	r23, r19
     bc6:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     bca:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     bce:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     bd2:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     bd6:	b0 9b       	sbis	0x16, 0	; 22
     bd8:	1a c0       	rjmp	.+52     	; 0xc0e <__vector_13+0x9a>
     bda:	01 96       	adiw	r24, 0x01	; 1
     bdc:	09 2e       	mov	r0, r25
     bde:	00 0c       	add	r0, r0
     be0:	aa 0b       	sbc	r26, r26
     be2:	bb 0b       	sbc	r27, r27
     be4:	bc 01       	movw	r22, r24
     be6:	55 27       	eor	r21, r21
     be8:	44 27       	eor	r20, r20
     bea:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bee:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf2:	a0 e0       	ldi	r26, 0x00	; 0
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
     bf6:	84 2b       	or	r24, r20
     bf8:	95 2b       	or	r25, r21
     bfa:	a6 2b       	or	r26, r22
     bfc:	b7 2b       	or	r27, r23
     bfe:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     c02:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     c06:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     c0a:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     c0e:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x10>
     c12:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x11>
     c16:	30 97       	sbiw	r30, 0x00	; 0
     c18:	39 f0       	breq	.+14     	; 0xc28 <__vector_13+0xb4>
     c1a:	68 e0       	ldi	r22, 0x08	; 8
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x10>
     c22:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x11>
     c26:	09 95       	icall
     c28:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     c2c:	ff 91       	pop	r31
     c2e:	ef 91       	pop	r30
     c30:	bf 91       	pop	r27
     c32:	af 91       	pop	r26
     c34:	9f 91       	pop	r25
     c36:	8f 91       	pop	r24
     c38:	7f 91       	pop	r23
     c3a:	6f 91       	pop	r22
     c3c:	5f 91       	pop	r21
     c3e:	4f 91       	pop	r20
     c40:	3f 91       	pop	r19
     c42:	2f 91       	pop	r18
     c44:	1f 91       	pop	r17
     c46:	0f 91       	pop	r16
     c48:	0f 90       	pop	r0
     c4a:	0f be       	out	0x3f, r0	; 63
     c4c:	0f 90       	pop	r0
     c4e:	1f 90       	pop	r1
     c50:	18 95       	reti

00000c52 <__vector_14>:
     c52:	1f 92       	push	r1
     c54:	0f 92       	push	r0
     c56:	0f b6       	in	r0, 0x3f	; 63
     c58:	0f 92       	push	r0
     c5a:	11 24       	eor	r1, r1
     c5c:	0f 93       	push	r16
     c5e:	1f 93       	push	r17
     c60:	2f 93       	push	r18
     c62:	3f 93       	push	r19
     c64:	4f 93       	push	r20
     c66:	5f 93       	push	r21
     c68:	6f 93       	push	r22
     c6a:	7f 93       	push	r23
     c6c:	8f 93       	push	r24
     c6e:	9f 93       	push	r25
     c70:	af 93       	push	r26
     c72:	bf 93       	push	r27
     c74:	ef 93       	push	r30
     c76:	ff 93       	push	r31
     c78:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     c7c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     c80:	ac 01       	movw	r20, r24
     c82:	09 2e       	mov	r0, r25
     c84:	00 0c       	add	r0, r0
     c86:	66 0b       	sbc	r22, r22
     c88:	77 0b       	sbc	r23, r23
     c8a:	9a 01       	movw	r18, r20
     c8c:	11 27       	eor	r17, r17
     c8e:	00 27       	eor	r16, r16
     c90:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c94:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	40 2b       	or	r20, r16
     c9e:	51 2b       	or	r21, r17
     ca0:	62 2b       	or	r22, r18
     ca2:	73 2b       	or	r23, r19
     ca4:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     ca8:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     cac:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     cb0:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     cb4:	b0 9b       	sbis	0x16, 0	; 22
     cb6:	1a c0       	rjmp	.+52     	; 0xcec <__vector_14+0x9a>
     cb8:	01 96       	adiw	r24, 0x01	; 1
     cba:	09 2e       	mov	r0, r25
     cbc:	00 0c       	add	r0, r0
     cbe:	aa 0b       	sbc	r26, r26
     cc0:	bb 0b       	sbc	r27, r27
     cc2:	bc 01       	movw	r22, r24
     cc4:	55 27       	eor	r21, r21
     cc6:	44 27       	eor	r20, r20
     cc8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ccc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cd0:	a0 e0       	ldi	r26, 0x00	; 0
     cd2:	b0 e0       	ldi	r27, 0x00	; 0
     cd4:	84 2b       	or	r24, r20
     cd6:	95 2b       	or	r25, r21
     cd8:	a6 2b       	or	r26, r22
     cda:	b7 2b       	or	r27, r23
     cdc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     ce0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     ce4:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     ce8:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     cec:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x12>
     cf0:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x13>
     cf4:	30 97       	sbiw	r30, 0x00	; 0
     cf6:	39 f0       	breq	.+14     	; 0xd06 <__vector_14+0xb4>
     cf8:	69 e0       	ldi	r22, 0x09	; 9
     cfa:	70 e0       	ldi	r23, 0x00	; 0
     cfc:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x12>
     d00:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x13>
     d04:	09 95       	icall
     d06:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     d0a:	ff 91       	pop	r31
     d0c:	ef 91       	pop	r30
     d0e:	bf 91       	pop	r27
     d10:	af 91       	pop	r26
     d12:	9f 91       	pop	r25
     d14:	8f 91       	pop	r24
     d16:	7f 91       	pop	r23
     d18:	6f 91       	pop	r22
     d1a:	5f 91       	pop	r21
     d1c:	4f 91       	pop	r20
     d1e:	3f 91       	pop	r19
     d20:	2f 91       	pop	r18
     d22:	1f 91       	pop	r17
     d24:	0f 91       	pop	r16
     d26:	0f 90       	pop	r0
     d28:	0f be       	out	0x3f, r0	; 63
     d2a:	0f 90       	pop	r0
     d2c:	1f 90       	pop	r1
     d2e:	18 95       	reti

00000d30 <__vector_15>:
     d30:	1f 92       	push	r1
     d32:	0f 92       	push	r0
     d34:	0f b6       	in	r0, 0x3f	; 63
     d36:	0f 92       	push	r0
     d38:	11 24       	eor	r1, r1
     d3a:	0f 93       	push	r16
     d3c:	1f 93       	push	r17
     d3e:	2f 93       	push	r18
     d40:	3f 93       	push	r19
     d42:	4f 93       	push	r20
     d44:	5f 93       	push	r21
     d46:	6f 93       	push	r22
     d48:	7f 93       	push	r23
     d4a:	8f 93       	push	r24
     d4c:	9f 93       	push	r25
     d4e:	af 93       	push	r26
     d50:	bf 93       	push	r27
     d52:	ef 93       	push	r30
     d54:	ff 93       	push	r31
     d56:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     d5a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     d5e:	ac 01       	movw	r20, r24
     d60:	09 2e       	mov	r0, r25
     d62:	00 0c       	add	r0, r0
     d64:	66 0b       	sbc	r22, r22
     d66:	77 0b       	sbc	r23, r23
     d68:	9a 01       	movw	r18, r20
     d6a:	11 27       	eor	r17, r17
     d6c:	00 27       	eor	r16, r16
     d6e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d72:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	40 2b       	or	r20, r16
     d7c:	51 2b       	or	r21, r17
     d7e:	62 2b       	or	r22, r18
     d80:	73 2b       	or	r23, r19
     d82:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     d86:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     d8a:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     d8e:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     d92:	b0 9b       	sbis	0x16, 0	; 22
     d94:	1a c0       	rjmp	.+52     	; 0xdca <__vector_15+0x9a>
     d96:	01 96       	adiw	r24, 0x01	; 1
     d98:	09 2e       	mov	r0, r25
     d9a:	00 0c       	add	r0, r0
     d9c:	aa 0b       	sbc	r26, r26
     d9e:	bb 0b       	sbc	r27, r27
     da0:	bc 01       	movw	r22, r24
     da2:	55 27       	eor	r21, r21
     da4:	44 27       	eor	r20, r20
     da6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     daa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dae:	a0 e0       	ldi	r26, 0x00	; 0
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	84 2b       	or	r24, r20
     db4:	95 2b       	or	r25, r21
     db6:	a6 2b       	or	r26, r22
     db8:	b7 2b       	or	r27, r23
     dba:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     dbe:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     dc2:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     dc6:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     dca:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x14>
     dce:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x15>
     dd2:	30 97       	sbiw	r30, 0x00	; 0
     dd4:	39 f0       	breq	.+14     	; 0xde4 <__vector_15+0xb4>
     dd6:	6a e0       	ldi	r22, 0x0A	; 10
     dd8:	70 e0       	ldi	r23, 0x00	; 0
     dda:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x14>
     dde:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x15>
     de2:	09 95       	icall
     de4:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     de8:	ff 91       	pop	r31
     dea:	ef 91       	pop	r30
     dec:	bf 91       	pop	r27
     dee:	af 91       	pop	r26
     df0:	9f 91       	pop	r25
     df2:	8f 91       	pop	r24
     df4:	7f 91       	pop	r23
     df6:	6f 91       	pop	r22
     df8:	5f 91       	pop	r21
     dfa:	4f 91       	pop	r20
     dfc:	3f 91       	pop	r19
     dfe:	2f 91       	pop	r18
     e00:	1f 91       	pop	r17
     e02:	0f 91       	pop	r16
     e04:	0f 90       	pop	r0
     e06:	0f be       	out	0x3f, r0	; 63
     e08:	0f 90       	pop	r0
     e0a:	1f 90       	pop	r1
     e0c:	18 95       	reti

00000e0e <__vector_16>:
     e0e:	1f 92       	push	r1
     e10:	0f 92       	push	r0
     e12:	0f b6       	in	r0, 0x3f	; 63
     e14:	0f 92       	push	r0
     e16:	11 24       	eor	r1, r1
     e18:	0f 93       	push	r16
     e1a:	1f 93       	push	r17
     e1c:	2f 93       	push	r18
     e1e:	3f 93       	push	r19
     e20:	4f 93       	push	r20
     e22:	5f 93       	push	r21
     e24:	6f 93       	push	r22
     e26:	7f 93       	push	r23
     e28:	8f 93       	push	r24
     e2a:	9f 93       	push	r25
     e2c:	af 93       	push	r26
     e2e:	bf 93       	push	r27
     e30:	ef 93       	push	r30
     e32:	ff 93       	push	r31
     e34:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     e38:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     e3c:	ac 01       	movw	r20, r24
     e3e:	09 2e       	mov	r0, r25
     e40:	00 0c       	add	r0, r0
     e42:	66 0b       	sbc	r22, r22
     e44:	77 0b       	sbc	r23, r23
     e46:	9a 01       	movw	r18, r20
     e48:	11 27       	eor	r17, r17
     e4a:	00 27       	eor	r16, r16
     e4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e54:	60 e0       	ldi	r22, 0x00	; 0
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	40 2b       	or	r20, r16
     e5a:	51 2b       	or	r21, r17
     e5c:	62 2b       	or	r22, r18
     e5e:	73 2b       	or	r23, r19
     e60:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     e64:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     e68:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     e6c:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     e70:	b0 9b       	sbis	0x16, 0	; 22
     e72:	1a c0       	rjmp	.+52     	; 0xea8 <__vector_16+0x9a>
     e74:	01 96       	adiw	r24, 0x01	; 1
     e76:	09 2e       	mov	r0, r25
     e78:	00 0c       	add	r0, r0
     e7a:	aa 0b       	sbc	r26, r26
     e7c:	bb 0b       	sbc	r27, r27
     e7e:	bc 01       	movw	r22, r24
     e80:	55 27       	eor	r21, r21
     e82:	44 27       	eor	r20, r20
     e84:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e88:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e8c:	a0 e0       	ldi	r26, 0x00	; 0
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	84 2b       	or	r24, r20
     e92:	95 2b       	or	r25, r21
     e94:	a6 2b       	or	r26, r22
     e96:	b7 2b       	or	r27, r23
     e98:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     e9c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     ea0:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     ea4:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     ea8:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x16>
     eac:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x17>
     eb0:	30 97       	sbiw	r30, 0x00	; 0
     eb2:	39 f0       	breq	.+14     	; 0xec2 <__vector_16+0xb4>
     eb4:	6b e0       	ldi	r22, 0x0B	; 11
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x16>
     ebc:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x17>
     ec0:	09 95       	icall
     ec2:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     ec6:	ff 91       	pop	r31
     ec8:	ef 91       	pop	r30
     eca:	bf 91       	pop	r27
     ecc:	af 91       	pop	r26
     ece:	9f 91       	pop	r25
     ed0:	8f 91       	pop	r24
     ed2:	7f 91       	pop	r23
     ed4:	6f 91       	pop	r22
     ed6:	5f 91       	pop	r21
     ed8:	4f 91       	pop	r20
     eda:	3f 91       	pop	r19
     edc:	2f 91       	pop	r18
     ede:	1f 91       	pop	r17
     ee0:	0f 91       	pop	r16
     ee2:	0f 90       	pop	r0
     ee4:	0f be       	out	0x3f, r0	; 63
     ee6:	0f 90       	pop	r0
     ee8:	1f 90       	pop	r1
     eea:	18 95       	reti

00000eec <__vector_17>:
     eec:	1f 92       	push	r1
     eee:	0f 92       	push	r0
     ef0:	0f b6       	in	r0, 0x3f	; 63
     ef2:	0f 92       	push	r0
     ef4:	11 24       	eor	r1, r1
     ef6:	0f 93       	push	r16
     ef8:	1f 93       	push	r17
     efa:	2f 93       	push	r18
     efc:	3f 93       	push	r19
     efe:	4f 93       	push	r20
     f00:	5f 93       	push	r21
     f02:	6f 93       	push	r22
     f04:	7f 93       	push	r23
     f06:	8f 93       	push	r24
     f08:	9f 93       	push	r25
     f0a:	af 93       	push	r26
     f0c:	bf 93       	push	r27
     f0e:	ef 93       	push	r30
     f10:	ff 93       	push	r31
     f12:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     f16:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     f1a:	ac 01       	movw	r20, r24
     f1c:	09 2e       	mov	r0, r25
     f1e:	00 0c       	add	r0, r0
     f20:	66 0b       	sbc	r22, r22
     f22:	77 0b       	sbc	r23, r23
     f24:	9a 01       	movw	r18, r20
     f26:	11 27       	eor	r17, r17
     f28:	00 27       	eor	r16, r16
     f2a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f2e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f32:	60 e0       	ldi	r22, 0x00	; 0
     f34:	70 e0       	ldi	r23, 0x00	; 0
     f36:	40 2b       	or	r20, r16
     f38:	51 2b       	or	r21, r17
     f3a:	62 2b       	or	r22, r18
     f3c:	73 2b       	or	r23, r19
     f3e:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     f42:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     f46:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     f4a:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     f4e:	b0 9b       	sbis	0x16, 0	; 22
     f50:	1a c0       	rjmp	.+52     	; 0xf86 <__vector_17+0x9a>
     f52:	01 96       	adiw	r24, 0x01	; 1
     f54:	09 2e       	mov	r0, r25
     f56:	00 0c       	add	r0, r0
     f58:	aa 0b       	sbc	r26, r26
     f5a:	bb 0b       	sbc	r27, r27
     f5c:	bc 01       	movw	r22, r24
     f5e:	55 27       	eor	r21, r21
     f60:	44 27       	eor	r20, r20
     f62:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f66:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f6a:	a0 e0       	ldi	r26, 0x00	; 0
     f6c:	b0 e0       	ldi	r27, 0x00	; 0
     f6e:	84 2b       	or	r24, r20
     f70:	95 2b       	or	r25, r21
     f72:	a6 2b       	or	r26, r22
     f74:	b7 2b       	or	r27, r23
     f76:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     f7a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     f7e:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     f82:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     f86:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x18>
     f8a:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x19>
     f8e:	30 97       	sbiw	r30, 0x00	; 0
     f90:	39 f0       	breq	.+14     	; 0xfa0 <__vector_17+0xb4>
     f92:	6c e0       	ldi	r22, 0x0C	; 12
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x18>
     f9a:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x19>
     f9e:	09 95       	icall
     fa0:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
     fa4:	ff 91       	pop	r31
     fa6:	ef 91       	pop	r30
     fa8:	bf 91       	pop	r27
     faa:	af 91       	pop	r26
     fac:	9f 91       	pop	r25
     fae:	8f 91       	pop	r24
     fb0:	7f 91       	pop	r23
     fb2:	6f 91       	pop	r22
     fb4:	5f 91       	pop	r21
     fb6:	4f 91       	pop	r20
     fb8:	3f 91       	pop	r19
     fba:	2f 91       	pop	r18
     fbc:	1f 91       	pop	r17
     fbe:	0f 91       	pop	r16
     fc0:	0f 90       	pop	r0
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	0f 90       	pop	r0
     fc6:	1f 90       	pop	r1
     fc8:	18 95       	reti

00000fca <__vector_18>:
     fca:	1f 92       	push	r1
     fcc:	0f 92       	push	r0
     fce:	0f b6       	in	r0, 0x3f	; 63
     fd0:	0f 92       	push	r0
     fd2:	11 24       	eor	r1, r1
     fd4:	0f 93       	push	r16
     fd6:	1f 93       	push	r17
     fd8:	2f 93       	push	r18
     fda:	3f 93       	push	r19
     fdc:	4f 93       	push	r20
     fde:	5f 93       	push	r21
     fe0:	6f 93       	push	r22
     fe2:	7f 93       	push	r23
     fe4:	8f 93       	push	r24
     fe6:	9f 93       	push	r25
     fe8:	af 93       	push	r26
     fea:	bf 93       	push	r27
     fec:	ef 93       	push	r30
     fee:	ff 93       	push	r31
     ff0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     ff4:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     ff8:	ac 01       	movw	r20, r24
     ffa:	09 2e       	mov	r0, r25
     ffc:	00 0c       	add	r0, r0
     ffe:	66 0b       	sbc	r22, r22
    1000:	77 0b       	sbc	r23, r23
    1002:	9a 01       	movw	r18, r20
    1004:	11 27       	eor	r17, r17
    1006:	00 27       	eor	r16, r16
    1008:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    100c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1010:	60 e0       	ldi	r22, 0x00	; 0
    1012:	70 e0       	ldi	r23, 0x00	; 0
    1014:	40 2b       	or	r20, r16
    1016:	51 2b       	or	r21, r17
    1018:	62 2b       	or	r22, r18
    101a:	73 2b       	or	r23, r19
    101c:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    1020:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    1024:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    1028:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    102c:	b0 9b       	sbis	0x16, 0	; 22
    102e:	1a c0       	rjmp	.+52     	; 0x1064 <__vector_18+0x9a>
    1030:	01 96       	adiw	r24, 0x01	; 1
    1032:	09 2e       	mov	r0, r25
    1034:	00 0c       	add	r0, r0
    1036:	aa 0b       	sbc	r26, r26
    1038:	bb 0b       	sbc	r27, r27
    103a:	bc 01       	movw	r22, r24
    103c:	55 27       	eor	r21, r21
    103e:	44 27       	eor	r20, r20
    1040:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1044:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1048:	a0 e0       	ldi	r26, 0x00	; 0
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	84 2b       	or	r24, r20
    104e:	95 2b       	or	r25, r21
    1050:	a6 2b       	or	r26, r22
    1052:	b7 2b       	or	r27, r23
    1054:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    1058:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    105c:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    1060:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    1064:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x1a>
    1068:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x1b>
    106c:	30 97       	sbiw	r30, 0x00	; 0
    106e:	39 f0       	breq	.+14     	; 0x107e <__vector_18+0xb4>
    1070:	6d e0       	ldi	r22, 0x0D	; 13
    1072:	70 e0       	ldi	r23, 0x00	; 0
    1074:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x1a>
    1078:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x1b>
    107c:	09 95       	icall
    107e:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
    1082:	ff 91       	pop	r31
    1084:	ef 91       	pop	r30
    1086:	bf 91       	pop	r27
    1088:	af 91       	pop	r26
    108a:	9f 91       	pop	r25
    108c:	8f 91       	pop	r24
    108e:	7f 91       	pop	r23
    1090:	6f 91       	pop	r22
    1092:	5f 91       	pop	r21
    1094:	4f 91       	pop	r20
    1096:	3f 91       	pop	r19
    1098:	2f 91       	pop	r18
    109a:	1f 91       	pop	r17
    109c:	0f 91       	pop	r16
    109e:	0f 90       	pop	r0
    10a0:	0f be       	out	0x3f, r0	; 63
    10a2:	0f 90       	pop	r0
    10a4:	1f 90       	pop	r1
    10a6:	18 95       	reti

000010a8 <__vector_19>:
    10a8:	1f 92       	push	r1
    10aa:	0f 92       	push	r0
    10ac:	0f b6       	in	r0, 0x3f	; 63
    10ae:	0f 92       	push	r0
    10b0:	11 24       	eor	r1, r1
    10b2:	0f 93       	push	r16
    10b4:	1f 93       	push	r17
    10b6:	2f 93       	push	r18
    10b8:	3f 93       	push	r19
    10ba:	4f 93       	push	r20
    10bc:	5f 93       	push	r21
    10be:	6f 93       	push	r22
    10c0:	7f 93       	push	r23
    10c2:	8f 93       	push	r24
    10c4:	9f 93       	push	r25
    10c6:	af 93       	push	r26
    10c8:	bf 93       	push	r27
    10ca:	ef 93       	push	r30
    10cc:	ff 93       	push	r31
    10ce:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    10d2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    10d6:	ac 01       	movw	r20, r24
    10d8:	09 2e       	mov	r0, r25
    10da:	00 0c       	add	r0, r0
    10dc:	66 0b       	sbc	r22, r22
    10de:	77 0b       	sbc	r23, r23
    10e0:	9a 01       	movw	r18, r20
    10e2:	11 27       	eor	r17, r17
    10e4:	00 27       	eor	r16, r16
    10e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ee:	60 e0       	ldi	r22, 0x00	; 0
    10f0:	70 e0       	ldi	r23, 0x00	; 0
    10f2:	40 2b       	or	r20, r16
    10f4:	51 2b       	or	r21, r17
    10f6:	62 2b       	or	r22, r18
    10f8:	73 2b       	or	r23, r19
    10fa:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    10fe:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    1102:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    1106:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    110a:	b0 9b       	sbis	0x16, 0	; 22
    110c:	1a c0       	rjmp	.+52     	; 0x1142 <__vector_19+0x9a>
    110e:	01 96       	adiw	r24, 0x01	; 1
    1110:	09 2e       	mov	r0, r25
    1112:	00 0c       	add	r0, r0
    1114:	aa 0b       	sbc	r26, r26
    1116:	bb 0b       	sbc	r27, r27
    1118:	bc 01       	movw	r22, r24
    111a:	55 27       	eor	r21, r21
    111c:	44 27       	eor	r20, r20
    111e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1122:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1126:	a0 e0       	ldi	r26, 0x00	; 0
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	84 2b       	or	r24, r20
    112c:	95 2b       	or	r25, r21
    112e:	a6 2b       	or	r26, r22
    1130:	b7 2b       	or	r27, r23
    1132:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    1136:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    113a:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    113e:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    1142:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x1c>
    1146:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1d>
    114a:	30 97       	sbiw	r30, 0x00	; 0
    114c:	39 f0       	breq	.+14     	; 0x115c <__vector_19+0xb4>
    114e:	6e e0       	ldi	r22, 0x0E	; 14
    1150:	70 e0       	ldi	r23, 0x00	; 0
    1152:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x1c>
    1156:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1d>
    115a:	09 95       	icall
    115c:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
    1160:	ff 91       	pop	r31
    1162:	ef 91       	pop	r30
    1164:	bf 91       	pop	r27
    1166:	af 91       	pop	r26
    1168:	9f 91       	pop	r25
    116a:	8f 91       	pop	r24
    116c:	7f 91       	pop	r23
    116e:	6f 91       	pop	r22
    1170:	5f 91       	pop	r21
    1172:	4f 91       	pop	r20
    1174:	3f 91       	pop	r19
    1176:	2f 91       	pop	r18
    1178:	1f 91       	pop	r17
    117a:	0f 91       	pop	r16
    117c:	0f 90       	pop	r0
    117e:	0f be       	out	0x3f, r0	; 63
    1180:	0f 90       	pop	r0
    1182:	1f 90       	pop	r1
    1184:	18 95       	reti

00001186 <__vector_20>:
    1186:	1f 92       	push	r1
    1188:	0f 92       	push	r0
    118a:	0f b6       	in	r0, 0x3f	; 63
    118c:	0f 92       	push	r0
    118e:	11 24       	eor	r1, r1
    1190:	0f 93       	push	r16
    1192:	1f 93       	push	r17
    1194:	2f 93       	push	r18
    1196:	3f 93       	push	r19
    1198:	4f 93       	push	r20
    119a:	5f 93       	push	r21
    119c:	6f 93       	push	r22
    119e:	7f 93       	push	r23
    11a0:	8f 93       	push	r24
    11a2:	9f 93       	push	r25
    11a4:	af 93       	push	r26
    11a6:	bf 93       	push	r27
    11a8:	ef 93       	push	r30
    11aa:	ff 93       	push	r31
    11ac:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    11b0:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    11b4:	ac 01       	movw	r20, r24
    11b6:	09 2e       	mov	r0, r25
    11b8:	00 0c       	add	r0, r0
    11ba:	66 0b       	sbc	r22, r22
    11bc:	77 0b       	sbc	r23, r23
    11be:	9a 01       	movw	r18, r20
    11c0:	11 27       	eor	r17, r17
    11c2:	00 27       	eor	r16, r16
    11c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11cc:	60 e0       	ldi	r22, 0x00	; 0
    11ce:	70 e0       	ldi	r23, 0x00	; 0
    11d0:	40 2b       	or	r20, r16
    11d2:	51 2b       	or	r21, r17
    11d4:	62 2b       	or	r22, r18
    11d6:	73 2b       	or	r23, r19
    11d8:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    11dc:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    11e0:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    11e4:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    11e8:	b0 9b       	sbis	0x16, 0	; 22
    11ea:	1a c0       	rjmp	.+52     	; 0x1220 <__vector_20+0x9a>
    11ec:	01 96       	adiw	r24, 0x01	; 1
    11ee:	09 2e       	mov	r0, r25
    11f0:	00 0c       	add	r0, r0
    11f2:	aa 0b       	sbc	r26, r26
    11f4:	bb 0b       	sbc	r27, r27
    11f6:	bc 01       	movw	r22, r24
    11f8:	55 27       	eor	r21, r21
    11fa:	44 27       	eor	r20, r20
    11fc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1200:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1204:	a0 e0       	ldi	r26, 0x00	; 0
    1206:	b0 e0       	ldi	r27, 0x00	; 0
    1208:	84 2b       	or	r24, r20
    120a:	95 2b       	or	r25, r21
    120c:	a6 2b       	or	r26, r22
    120e:	b7 2b       	or	r27, r23
    1210:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    1214:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    1218:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    121c:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    1220:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1e>
    1224:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1f>
    1228:	30 97       	sbiw	r30, 0x00	; 0
    122a:	39 f0       	breq	.+14     	; 0x123a <__vector_20+0xb4>
    122c:	6f e0       	ldi	r22, 0x0F	; 15
    122e:	70 e0       	ldi	r23, 0x00	; 0
    1230:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1e>
    1234:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1f>
    1238:	09 95       	icall
    123a:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
    123e:	ff 91       	pop	r31
    1240:	ef 91       	pop	r30
    1242:	bf 91       	pop	r27
    1244:	af 91       	pop	r26
    1246:	9f 91       	pop	r25
    1248:	8f 91       	pop	r24
    124a:	7f 91       	pop	r23
    124c:	6f 91       	pop	r22
    124e:	5f 91       	pop	r21
    1250:	4f 91       	pop	r20
    1252:	3f 91       	pop	r19
    1254:	2f 91       	pop	r18
    1256:	1f 91       	pop	r17
    1258:	0f 91       	pop	r16
    125a:	0f 90       	pop	r0
    125c:	0f be       	out	0x3f, r0	; 63
    125e:	0f 90       	pop	r0
    1260:	1f 90       	pop	r1
    1262:	18 95       	reti

00001264 <__vector_21>:
    1264:	1f 92       	push	r1
    1266:	0f 92       	push	r0
    1268:	0f b6       	in	r0, 0x3f	; 63
    126a:	0f 92       	push	r0
    126c:	11 24       	eor	r1, r1
    126e:	0f 93       	push	r16
    1270:	1f 93       	push	r17
    1272:	2f 93       	push	r18
    1274:	3f 93       	push	r19
    1276:	4f 93       	push	r20
    1278:	5f 93       	push	r21
    127a:	6f 93       	push	r22
    127c:	7f 93       	push	r23
    127e:	8f 93       	push	r24
    1280:	9f 93       	push	r25
    1282:	af 93       	push	r26
    1284:	bf 93       	push	r27
    1286:	ef 93       	push	r30
    1288:	ff 93       	push	r31
    128a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    128e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    1292:	ac 01       	movw	r20, r24
    1294:	09 2e       	mov	r0, r25
    1296:	00 0c       	add	r0, r0
    1298:	66 0b       	sbc	r22, r22
    129a:	77 0b       	sbc	r23, r23
    129c:	9a 01       	movw	r18, r20
    129e:	11 27       	eor	r17, r17
    12a0:	00 27       	eor	r16, r16
    12a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12aa:	60 e0       	ldi	r22, 0x00	; 0
    12ac:	70 e0       	ldi	r23, 0x00	; 0
    12ae:	40 2b       	or	r20, r16
    12b0:	51 2b       	or	r21, r17
    12b2:	62 2b       	or	r22, r18
    12b4:	73 2b       	or	r23, r19
    12b6:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    12ba:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    12be:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    12c2:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    12c6:	b0 9b       	sbis	0x16, 0	; 22
    12c8:	1a c0       	rjmp	.+52     	; 0x12fe <__vector_21+0x9a>
    12ca:	01 96       	adiw	r24, 0x01	; 1
    12cc:	09 2e       	mov	r0, r25
    12ce:	00 0c       	add	r0, r0
    12d0:	aa 0b       	sbc	r26, r26
    12d2:	bb 0b       	sbc	r27, r27
    12d4:	bc 01       	movw	r22, r24
    12d6:	55 27       	eor	r21, r21
    12d8:	44 27       	eor	r20, r20
    12da:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12de:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12e2:	a0 e0       	ldi	r26, 0x00	; 0
    12e4:	b0 e0       	ldi	r27, 0x00	; 0
    12e6:	84 2b       	or	r24, r20
    12e8:	95 2b       	or	r25, r21
    12ea:	a6 2b       	or	r26, r22
    12ec:	b7 2b       	or	r27, r23
    12ee:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    12f2:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    12f6:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    12fa:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    12fe:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x20>
    1302:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x21>
    1306:	30 97       	sbiw	r30, 0x00	; 0
    1308:	39 f0       	breq	.+14     	; 0x1318 <__vector_21+0xb4>
    130a:	60 e1       	ldi	r22, 0x10	; 16
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x20>
    1312:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x21>
    1316:	09 95       	icall
    1318:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
    131c:	ff 91       	pop	r31
    131e:	ef 91       	pop	r30
    1320:	bf 91       	pop	r27
    1322:	af 91       	pop	r26
    1324:	9f 91       	pop	r25
    1326:	8f 91       	pop	r24
    1328:	7f 91       	pop	r23
    132a:	6f 91       	pop	r22
    132c:	5f 91       	pop	r21
    132e:	4f 91       	pop	r20
    1330:	3f 91       	pop	r19
    1332:	2f 91       	pop	r18
    1334:	1f 91       	pop	r17
    1336:	0f 91       	pop	r16
    1338:	0f 90       	pop	r0
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	0f 90       	pop	r0
    133e:	1f 90       	pop	r1
    1340:	18 95       	reti

00001342 <__vector_22>:
    1342:	1f 92       	push	r1
    1344:	0f 92       	push	r0
    1346:	0f b6       	in	r0, 0x3f	; 63
    1348:	0f 92       	push	r0
    134a:	11 24       	eor	r1, r1
    134c:	0f 93       	push	r16
    134e:	1f 93       	push	r17
    1350:	2f 93       	push	r18
    1352:	3f 93       	push	r19
    1354:	4f 93       	push	r20
    1356:	5f 93       	push	r21
    1358:	6f 93       	push	r22
    135a:	7f 93       	push	r23
    135c:	8f 93       	push	r24
    135e:	9f 93       	push	r25
    1360:	af 93       	push	r26
    1362:	bf 93       	push	r27
    1364:	ef 93       	push	r30
    1366:	ff 93       	push	r31
    1368:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    136c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    1370:	ac 01       	movw	r20, r24
    1372:	09 2e       	mov	r0, r25
    1374:	00 0c       	add	r0, r0
    1376:	66 0b       	sbc	r22, r22
    1378:	77 0b       	sbc	r23, r23
    137a:	9a 01       	movw	r18, r20
    137c:	11 27       	eor	r17, r17
    137e:	00 27       	eor	r16, r16
    1380:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1384:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1388:	60 e0       	ldi	r22, 0x00	; 0
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	40 2b       	or	r20, r16
    138e:	51 2b       	or	r21, r17
    1390:	62 2b       	or	r22, r18
    1392:	73 2b       	or	r23, r19
    1394:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    1398:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    139c:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    13a0:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    13a4:	b0 9b       	sbis	0x16, 0	; 22
    13a6:	1a c0       	rjmp	.+52     	; 0x13dc <__vector_22+0x9a>
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	09 2e       	mov	r0, r25
    13ac:	00 0c       	add	r0, r0
    13ae:	aa 0b       	sbc	r26, r26
    13b0:	bb 0b       	sbc	r27, r27
    13b2:	bc 01       	movw	r22, r24
    13b4:	55 27       	eor	r21, r21
    13b6:	44 27       	eor	r20, r20
    13b8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13bc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13c0:	a0 e0       	ldi	r26, 0x00	; 0
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	84 2b       	or	r24, r20
    13c6:	95 2b       	or	r25, r21
    13c8:	a6 2b       	or	r26, r22
    13ca:	b7 2b       	or	r27, r23
    13cc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    13d0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    13d4:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    13d8:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    13dc:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x22>
    13e0:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x23>
    13e4:	30 97       	sbiw	r30, 0x00	; 0
    13e6:	39 f0       	breq	.+14     	; 0x13f6 <__vector_22+0xb4>
    13e8:	61 e1       	ldi	r22, 0x11	; 17
    13ea:	70 e0       	ldi	r23, 0x00	; 0
    13ec:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x22>
    13f0:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x23>
    13f4:	09 95       	icall
    13f6:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
    13fa:	ff 91       	pop	r31
    13fc:	ef 91       	pop	r30
    13fe:	bf 91       	pop	r27
    1400:	af 91       	pop	r26
    1402:	9f 91       	pop	r25
    1404:	8f 91       	pop	r24
    1406:	7f 91       	pop	r23
    1408:	6f 91       	pop	r22
    140a:	5f 91       	pop	r21
    140c:	4f 91       	pop	r20
    140e:	3f 91       	pop	r19
    1410:	2f 91       	pop	r18
    1412:	1f 91       	pop	r17
    1414:	0f 91       	pop	r16
    1416:	0f 90       	pop	r0
    1418:	0f be       	out	0x3f, r0	; 63
    141a:	0f 90       	pop	r0
    141c:	1f 90       	pop	r1
    141e:	18 95       	reti

00001420 <__vector_9>:
        return 1;
    }
    return 0;
}

TIMER_OVERFLOW_INTERRUPT {
    1420:	1f 92       	push	r1
    1422:	0f 92       	push	r0
    1424:	0f b6       	in	r0, 0x3f	; 63
    1426:	0f 92       	push	r0
    1428:	11 24       	eor	r1, r1
    142a:	2f 93       	push	r18
    142c:	3f 93       	push	r19
    142e:	4f 93       	push	r20
    1430:	5f 93       	push	r21
    1432:	6f 93       	push	r22
    1434:	7f 93       	push	r23
    1436:	8f 93       	push	r24
    1438:	9f 93       	push	r25
    143a:	ef 93       	push	r30
    143c:	ff 93       	push	r31
    TIMER_OCLR();
    overflows++;
    143e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    1442:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    1446:	01 96       	adiw	r24, 0x01	; 1
    1448:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
    144c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
    TIMERSET(timerQ);
    1450:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <timerQ>
    1454:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <timerQ+0x1>
    1458:	30 97       	sbiw	r30, 0x00	; 0
    145a:	01 f1       	breq	.+64     	; 0x149c <__vector_9+0x7c>
    145c:	42 81       	ldd	r20, Z+2	; 0x02
    145e:	53 81       	ldd	r21, Z+3	; 0x03
    1460:	64 81       	ldd	r22, Z+4	; 0x04
    1462:	75 81       	ldd	r23, Z+5	; 0x05
    1464:	86 17       	cp	r24, r22
    1466:	97 07       	cpc	r25, r23
    1468:	c9 f4       	brne	.+50     	; 0x149c <__vector_9+0x7c>
    146a:	ca 01       	movw	r24, r20
    146c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1470:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1474:	42 1b       	sub	r20, r18
    1476:	53 0b       	sbc	r21, r19
    1478:	41 30       	cpi	r20, 0x01	; 1
    147a:	51 05       	cpc	r21, r1
    147c:	29 f4       	brne	.+10     	; 0x1488 <__vector_9+0x68>
    147e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1482:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1486:	01 96       	adiw	r24, 0x01	; 1
    1488:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    148c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1490:	ef e6       	ldi	r30, 0x6F	; 111
    1492:	f0 e0       	ldi	r31, 0x00	; 0
    1494:	80 81       	ld	r24, Z
    1496:	82 60       	ori	r24, 0x02	; 2
    1498:	80 83       	st	Z, r24
    149a:	05 c0       	rjmp	.+10     	; 0x14a6 <__vector_9+0x86>
    149c:	ef e6       	ldi	r30, 0x6F	; 111
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	80 81       	ld	r24, Z
    14a2:	8d 7f       	andi	r24, 0xFD	; 253
    14a4:	80 83       	st	Z, r24
}
    14a6:	ff 91       	pop	r31
    14a8:	ef 91       	pop	r30
    14aa:	9f 91       	pop	r25
    14ac:	8f 91       	pop	r24
    14ae:	7f 91       	pop	r23
    14b0:	6f 91       	pop	r22
    14b2:	5f 91       	pop	r21
    14b4:	4f 91       	pop	r20
    14b6:	3f 91       	pop	r19
    14b8:	2f 91       	pop	r18
    14ba:	0f 90       	pop	r0
    14bc:	0f be       	out	0x3f, r0	; 63
    14be:	0f 90       	pop	r0
    14c0:	1f 90       	pop	r1
    14c2:	18 95       	reti

000014c4 <__vector_7>:

TIMER_COMPARE_INTERRUPT {
    14c4:	1f 92       	push	r1
    14c6:	0f 92       	push	r0
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	0f 92       	push	r0
    14cc:	11 24       	eor	r1, r1
    14ce:	cf 92       	push	r12
    14d0:	df 92       	push	r13
    14d2:	ef 92       	push	r14
    14d4:	ff 92       	push	r15
    14d6:	2f 93       	push	r18
    14d8:	3f 93       	push	r19
    14da:	4f 93       	push	r20
    14dc:	5f 93       	push	r21
    14de:	6f 93       	push	r22
    14e0:	7f 93       	push	r23
    14e2:	8f 93       	push	r24
    14e4:	9f 93       	push	r25
    14e6:	af 93       	push	r26
    14e8:	bf 93       	push	r27
    14ea:	ef 93       	push	r30
    14ec:	ff 93       	push	r31
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    14ee:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    14f2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    14f6:	6c 01       	movw	r12, r24
    14f8:	09 2e       	mov	r0, r25
    14fa:	00 0c       	add	r0, r0
    14fc:	ee 08       	sbc	r14, r14
    14fe:	ff 08       	sbc	r15, r15
    1500:	76 01       	movw	r14, r12
    1502:	dd 24       	eor	r13, r13
    1504:	cc 24       	eor	r12, r12
    1506:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    150a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    150e:	60 e0       	ldi	r22, 0x00	; 0
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	c4 2a       	or	r12, r20
    1514:	d5 2a       	or	r13, r21
    1516:	e6 2a       	or	r14, r22
    1518:	f7 2a       	or	r15, r23
    151a:	b0 9b       	sbis	0x16, 0	; 22
    151c:	1e c0       	rjmp	.+60     	; 0x155a <__vector_7+0x96>
    151e:	6c 01       	movw	r12, r24
    1520:	2f ef       	ldi	r18, 0xFF	; 255
    1522:	c2 1a       	sub	r12, r18
    1524:	d2 0a       	sbc	r13, r18
    1526:	0d 2c       	mov	r0, r13
    1528:	00 0c       	add	r0, r0
    152a:	ee 08       	sbc	r14, r14
    152c:	ff 08       	sbc	r15, r15
    152e:	d6 01       	movw	r26, r12
    1530:	99 27       	eor	r25, r25
    1532:	88 27       	eor	r24, r24
    1534:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1538:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    153c:	e1 2c       	mov	r14, r1
    153e:	f1 2c       	mov	r15, r1
    1540:	c8 2a       	or	r12, r24
    1542:	d9 2a       	or	r13, r25
    1544:	ea 2a       	or	r14, r26
    1546:	fb 2a       	or	r15, r27
    1548:	08 c0       	rjmp	.+16     	; 0x155a <__vector_7+0x96>
    while (timerQ && (timerQ->baseline - now <= 0))
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    154a:	80 e2       	ldi	r24, 0x20	; 32
    154c:	91 e0       	ldi	r25, 0x01	; 1
    154e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <dequeue>
    1552:	62 e2       	ldi	r22, 0x22	; 34
    1554:	71 e0       	ldi	r23, 0x01	; 1
    1556:	0e 94 b2 01 	call	0x364	; 0x364 <enqueueByDeadline>

TIMER_COMPARE_INTERRUPT {
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    while (timerQ && (timerQ->baseline - now <= 0))
    155a:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <timerQ>
    155e:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <timerQ+0x1>
    1562:	30 97       	sbiw	r30, 0x00	; 0
    1564:	69 f0       	breq	.+26     	; 0x1580 <__vector_7+0xbc>
    1566:	82 81       	ldd	r24, Z+2	; 0x02
    1568:	93 81       	ldd	r25, Z+3	; 0x03
    156a:	a4 81       	ldd	r26, Z+4	; 0x04
    156c:	b5 81       	ldd	r27, Z+5	; 0x05
    156e:	8c 19       	sub	r24, r12
    1570:	9d 09       	sbc	r25, r13
    1572:	ae 09       	sbc	r26, r14
    1574:	bf 09       	sbc	r27, r15
    1576:	18 16       	cp	r1, r24
    1578:	19 06       	cpc	r1, r25
    157a:	1a 06       	cpc	r1, r26
    157c:	1b 06       	cpc	r1, r27
    157e:	2c f7       	brge	.-54     	; 0x154a <__vector_7+0x86>
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    TIMERSET(timerQ);
    1580:	30 97       	sbiw	r30, 0x00	; 0
    1582:	21 f1       	breq	.+72     	; 0x15cc <__vector_7+0x108>
    1584:	82 81       	ldd	r24, Z+2	; 0x02
    1586:	93 81       	ldd	r25, Z+3	; 0x03
    1588:	a4 81       	ldd	r26, Z+4	; 0x04
    158a:	b5 81       	ldd	r27, Z+5	; 0x05
    158c:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
    1590:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
    1594:	2a 17       	cp	r18, r26
    1596:	3b 07       	cpc	r19, r27
    1598:	c9 f4       	brne	.+50     	; 0x15cc <__vector_7+0x108>
    159a:	9c 01       	movw	r18, r24
    159c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15a4:	84 1b       	sub	r24, r20
    15a6:	95 0b       	sbc	r25, r21
    15a8:	01 97       	sbiw	r24, 0x01	; 1
    15aa:	31 f4       	brne	.+12     	; 0x15b8 <__vector_7+0xf4>
    15ac:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15b0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15b4:	2f 5f       	subi	r18, 0xFF	; 255
    15b6:	3f 4f       	sbci	r19, 0xFF	; 255
    15b8:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    15bc:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    15c0:	ef e6       	ldi	r30, 0x6F	; 111
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	80 81       	ld	r24, Z
    15c6:	82 60       	ori	r24, 0x02	; 2
    15c8:	80 83       	st	Z, r24
    15ca:	05 c0       	rjmp	.+10     	; 0x15d6 <__vector_7+0x112>
    15cc:	ef e6       	ldi	r30, 0x6F	; 111
    15ce:	f0 e0       	ldi	r31, 0x00	; 0
    15d0:	80 81       	ld	r24, Z
    15d2:	8d 7f       	andi	r24, 0xFD	; 253
    15d4:	80 83       	st	Z, r24
    schedule();
    15d6:	0e 94 0e 02 	call	0x41c	; 0x41c <schedule>
}
    15da:	ff 91       	pop	r31
    15dc:	ef 91       	pop	r30
    15de:	bf 91       	pop	r27
    15e0:	af 91       	pop	r26
    15e2:	9f 91       	pop	r25
    15e4:	8f 91       	pop	r24
    15e6:	7f 91       	pop	r23
    15e8:	6f 91       	pop	r22
    15ea:	5f 91       	pop	r21
    15ec:	4f 91       	pop	r20
    15ee:	3f 91       	pop	r19
    15f0:	2f 91       	pop	r18
    15f2:	ff 90       	pop	r15
    15f4:	ef 90       	pop	r14
    15f6:	df 90       	pop	r13
    15f8:	cf 90       	pop	r12
    15fa:	0f 90       	pop	r0
    15fc:	0f be       	out	0x3f, r0	; 63
    15fe:	0f 90       	pop	r0
    1600:	1f 90       	pop	r1
    1602:	18 95       	reti

00001604 <__divmodsi4>:
    1604:	05 2e       	mov	r0, r21
    1606:	97 fb       	bst	r25, 7
    1608:	1e f4       	brtc	.+6      	; 0x1610 <__divmodsi4+0xc>
    160a:	00 94       	com	r0
    160c:	0e 94 19 0b 	call	0x1632	; 0x1632 <__negsi2>
    1610:	57 fd       	sbrc	r21, 7
    1612:	07 d0       	rcall	.+14     	; 0x1622 <__divmodsi4_neg2>
    1614:	0e 94 21 0b 	call	0x1642	; 0x1642 <__udivmodsi4>
    1618:	07 fc       	sbrc	r0, 7
    161a:	03 d0       	rcall	.+6      	; 0x1622 <__divmodsi4_neg2>
    161c:	4e f4       	brtc	.+18     	; 0x1630 <__divmodsi4_exit>
    161e:	0c 94 19 0b 	jmp	0x1632	; 0x1632 <__negsi2>

00001622 <__divmodsi4_neg2>:
    1622:	50 95       	com	r21
    1624:	40 95       	com	r20
    1626:	30 95       	com	r19
    1628:	21 95       	neg	r18
    162a:	3f 4f       	sbci	r19, 0xFF	; 255
    162c:	4f 4f       	sbci	r20, 0xFF	; 255
    162e:	5f 4f       	sbci	r21, 0xFF	; 255

00001630 <__divmodsi4_exit>:
    1630:	08 95       	ret

00001632 <__negsi2>:
    1632:	90 95       	com	r25
    1634:	80 95       	com	r24
    1636:	70 95       	com	r23
    1638:	61 95       	neg	r22
    163a:	7f 4f       	sbci	r23, 0xFF	; 255
    163c:	8f 4f       	sbci	r24, 0xFF	; 255
    163e:	9f 4f       	sbci	r25, 0xFF	; 255
    1640:	08 95       	ret

00001642 <__udivmodsi4>:
    1642:	a1 e2       	ldi	r26, 0x21	; 33
    1644:	1a 2e       	mov	r1, r26
    1646:	aa 1b       	sub	r26, r26
    1648:	bb 1b       	sub	r27, r27
    164a:	fd 01       	movw	r30, r26
    164c:	0d c0       	rjmp	.+26     	; 0x1668 <__udivmodsi4_ep>

0000164e <__udivmodsi4_loop>:
    164e:	aa 1f       	adc	r26, r26
    1650:	bb 1f       	adc	r27, r27
    1652:	ee 1f       	adc	r30, r30
    1654:	ff 1f       	adc	r31, r31
    1656:	a2 17       	cp	r26, r18
    1658:	b3 07       	cpc	r27, r19
    165a:	e4 07       	cpc	r30, r20
    165c:	f5 07       	cpc	r31, r21
    165e:	20 f0       	brcs	.+8      	; 0x1668 <__udivmodsi4_ep>
    1660:	a2 1b       	sub	r26, r18
    1662:	b3 0b       	sbc	r27, r19
    1664:	e4 0b       	sbc	r30, r20
    1666:	f5 0b       	sbc	r31, r21

00001668 <__udivmodsi4_ep>:
    1668:	66 1f       	adc	r22, r22
    166a:	77 1f       	adc	r23, r23
    166c:	88 1f       	adc	r24, r24
    166e:	99 1f       	adc	r25, r25
    1670:	1a 94       	dec	r1
    1672:	69 f7       	brne	.-38     	; 0x164e <__udivmodsi4_loop>
    1674:	60 95       	com	r22
    1676:	70 95       	com	r23
    1678:	80 95       	com	r24
    167a:	90 95       	com	r25
    167c:	9b 01       	movw	r18, r22
    167e:	ac 01       	movw	r20, r24
    1680:	bd 01       	movw	r22, r26
    1682:	cf 01       	movw	r24, r30
    1684:	08 95       	ret

00001686 <setjmp>:
    1686:	dc 01       	movw	r26, r24
    1688:	2d 92       	st	X+, r2
    168a:	3d 92       	st	X+, r3
    168c:	4d 92       	st	X+, r4
    168e:	5d 92       	st	X+, r5
    1690:	6d 92       	st	X+, r6
    1692:	7d 92       	st	X+, r7
    1694:	8d 92       	st	X+, r8
    1696:	9d 92       	st	X+, r9
    1698:	ad 92       	st	X+, r10
    169a:	bd 92       	st	X+, r11
    169c:	cd 92       	st	X+, r12
    169e:	dd 92       	st	X+, r13
    16a0:	ed 92       	st	X+, r14
    16a2:	fd 92       	st	X+, r15
    16a4:	0d 93       	st	X+, r16
    16a6:	1d 93       	st	X+, r17
    16a8:	cd 93       	st	X+, r28
    16aa:	dd 93       	st	X+, r29
    16ac:	ff 91       	pop	r31
    16ae:	ef 91       	pop	r30
    16b0:	8d b7       	in	r24, 0x3d	; 61
    16b2:	8d 93       	st	X+, r24
    16b4:	8e b7       	in	r24, 0x3e	; 62
    16b6:	8d 93       	st	X+, r24
    16b8:	8f b7       	in	r24, 0x3f	; 63
    16ba:	8d 93       	st	X+, r24
    16bc:	ed 93       	st	X+, r30
    16be:	fd 93       	st	X+, r31
    16c0:	88 27       	eor	r24, r24
    16c2:	99 27       	eor	r25, r25
    16c4:	09 94       	ijmp

000016c6 <longjmp>:
    16c6:	dc 01       	movw	r26, r24
    16c8:	cb 01       	movw	r24, r22
    16ca:	81 30       	cpi	r24, 0x01	; 1
    16cc:	91 05       	cpc	r25, r1
    16ce:	81 1d       	adc	r24, r1
    16d0:	2d 90       	ld	r2, X+
    16d2:	3d 90       	ld	r3, X+
    16d4:	4d 90       	ld	r4, X+
    16d6:	5d 90       	ld	r5, X+
    16d8:	6d 90       	ld	r6, X+
    16da:	7d 90       	ld	r7, X+
    16dc:	8d 90       	ld	r8, X+
    16de:	9d 90       	ld	r9, X+
    16e0:	ad 90       	ld	r10, X+
    16e2:	bd 90       	ld	r11, X+
    16e4:	cd 90       	ld	r12, X+
    16e6:	dd 90       	ld	r13, X+
    16e8:	ed 90       	ld	r14, X+
    16ea:	fd 90       	ld	r15, X+
    16ec:	0d 91       	ld	r16, X+
    16ee:	1d 91       	ld	r17, X+
    16f0:	cd 91       	ld	r28, X+
    16f2:	dd 91       	ld	r29, X+
    16f4:	ed 91       	ld	r30, X+
    16f6:	fd 91       	ld	r31, X+
    16f8:	0d 90       	ld	r0, X+
    16fa:	f8 94       	cli
    16fc:	fe bf       	out	0x3e, r31	; 62
    16fe:	0f be       	out	0x3f, r0	; 63
    1700:	ed bf       	out	0x3d, r30	; 61
    1702:	ed 91       	ld	r30, X+
    1704:	fd 91       	ld	r31, X+
    1706:	09 94       	ijmp

00001708 <_exit>:
    1708:	f8 94       	cli

0000170a <__stop_program>:
    170a:	ff cf       	rjmp	.-2      	; 0x170a <__stop_program>
