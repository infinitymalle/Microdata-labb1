
Labb 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001f1c  00001fb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011c  0080011c  00001fcc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001fcc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ffc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  0000203c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000027cd  00000000  00000000  00002274  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fef  00000000  00000000  00004a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001495  00000000  00000000  00005a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bc0  00000000  00000000  00006ec8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000904  00000000  00000000  00007a88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002390  00000000  00000000  0000838c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000a71c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__vector_1>
       8:	0c 94 9d 04 	jmp	0x93a	; 0x93a <__vector_2>
       c:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <__vector_3>
      10:	0c 94 7b 05 	jmp	0xaf6	; 0xaf6 <__vector_4>
      14:	0c 94 ea 05 	jmp	0xbd4	; 0xbd4 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 55 0c 	jmp	0x18aa	; 0x18aa <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 03 0c 	jmp	0x1806	; 0x1806 <__vector_9>
      28:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__vector_10>
      2c:	0c 94 c8 06 	jmp	0xd90	; 0xd90 <__vector_11>
      30:	0c 94 37 07 	jmp	0xe6e	; 0xe6e <__vector_12>
      34:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__vector_13>
      38:	0c 94 15 08 	jmp	0x102a	; 0x102a <__vector_14>
      3c:	0c 94 84 08 	jmp	0x1108	; 0x1108 <__vector_15>
      40:	0c 94 f3 08 	jmp	0x11e6	; 0x11e6 <__vector_16>
      44:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <__vector_17>
      48:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <__vector_18>
      4c:	0c 94 40 0a 	jmp	0x1480	; 0x1480 <__vector_19>
      50:	0c 94 af 0a 	jmp	0x155e	; 0x155e <__vector_20>
      54:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__vector_21>
      58:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ec e1       	ldi	r30, 0x1C	; 28
      70:	ff e1       	ldi	r31, 0x1F	; 31
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ac 31       	cpi	r26, 0x1C	; 28
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ac e1       	ldi	r26, 0x1C	; 28
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	af 36       	cpi	r26, 0x6F	; 111
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <main>
      92:	0c 94 8c 0f 	jmp	0x1f18	; 0x1f18 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <LCD_Init>:
		LCDCS    - Asynchronous clock source
		LCDMUX's - Duty = 1/4, Bias = 1/3
		LCDPM's  - Number of Segments = 25
	*/
	
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
      9a:	87 eb       	ldi	r24, 0xB7	; 183
      9c:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	/*
		LCD Frame Rate Register:
		LCDCD's - Prescaler setting N = 16
	*/
	
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
      a0:	87 e0       	ldi	r24, 0x07	; 7
      a2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCD Contrast Control Register
		None of the LCDDC's used = 300 microseconds
		LCDCC's = 3,35V
	*/
	
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
      a6:	8f e0       	ldi	r24, 0x0F	; 15
      a8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	
	/*
		LCDEN = LCD Enabled
		LCDAB = Low Power Waveform
	*/
	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
      ac:	80 ec       	ldi	r24, 0xC0	; 192
      ae:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	// start joystick
	//DDRB = 0b11010000;								//För att tillåta sättningen av bitarna (Tror vi :))
	//EIFR = (1 << PCIF0) | (1 << PCIF1);
	//DDRB  = (1 << DDB7) | (1 << DDB6) | (1 << DDB4) | DDRB;
	
	DDRE  = (1 << DDE6) | (1 << DDE4) | DDRE;		// Sätt portE pin 6 och 4 till output
      b2:	8d b1       	in	r24, 0x0d	; 13
      b4:	80 65       	ori	r24, 0x50	; 80
      b6:	8d b9       	out	0x0d, r24	; 13
	EIMSK = (1 << PCIE1) | (1 << PCIE0) | EIMSK;
      b8:	8d b3       	in	r24, 0x1d	; 29
      ba:	80 6c       	ori	r24, 0xC0	; 192
      bc:	8d bb       	out	0x1d, r24	; 29
	/*
		Joystick up
	*/
	PCMSK1 = (1 << PCINT14) | PCMSK1;
      be:	ec e6       	ldi	r30, 0x6C	; 108
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	80 81       	ld	r24, Z
      c4:	80 64       	ori	r24, 0x40	; 64
      c6:	80 83       	st	Z, r24
	PORTB = (1 << PB6) | PORTB;
      c8:	85 b1       	in	r24, 0x05	; 5
      ca:	80 64       	ori	r24, 0x40	; 64
      cc:	85 b9       	out	0x05, r24	; 5
	
	/*
		Joystick down
	*/
	PCMSK1 = (1 << PCINT15) | PCMSK1;
      ce:	80 81       	ld	r24, Z
      d0:	80 68       	ori	r24, 0x80	; 128
      d2:	80 83       	st	Z, r24
	PORTB = (1 << PB7) | PORTB;
      d4:	85 b1       	in	r24, 0x05	; 5
      d6:	80 68       	ori	r24, 0x80	; 128
      d8:	85 b9       	out	0x05, r24	; 5
	
	/*
		Joystick right
	*/
	PCMSK0 = (1 << PCINT3) | PCMSK0;
      da:	ab e6       	ldi	r26, 0x6B	; 107
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	8c 91       	ld	r24, X
      e0:	88 60       	ori	r24, 0x08	; 8
      e2:	8c 93       	st	X, r24
	PORTE = (1 << PE3) | PORTE;
      e4:	8e b1       	in	r24, 0x0e	; 14
      e6:	88 60       	ori	r24, 0x08	; 8
      e8:	8e b9       	out	0x0e, r24	; 14
	
	/*
		Joystick left
	*/
	PCMSK0 =  (1 << PCINT2) | PCMSK0;
      ea:	8c 91       	ld	r24, X
      ec:	84 60       	ori	r24, 0x04	; 4
      ee:	8c 93       	st	X, r24
	PORTE =  (1 << PE2) | PORTE;
      f0:	8e b1       	in	r24, 0x0e	; 14
      f2:	84 60       	ori	r24, 0x04	; 4
      f4:	8e b9       	out	0x0e, r24	; 14
	
	/*
		Joystick press
	*/
	PCMSK1 = (1 << PCINT12) | PCMSK1;
      f6:	80 81       	ld	r24, Z
      f8:	80 61       	ori	r24, 0x10	; 16
      fa:	80 83       	st	Z, r24
	PORTB = (1 << PB4) | PORTB;
      fc:	85 b1       	in	r24, 0x05	; 5
      fe:	80 61       	ori	r24, 0x10	; 16
     100:	85 b9       	out	0x05, r24	; 5
	
	//LCDDR1  = 0x40 | (LCDDR1  & 0x99);
	LCDDR0  = 0x20   | (LCDDR0  & 0x99);
     102:	ec ee       	ldi	r30, 0xEC	; 236
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	80 81       	ld	r24, Z
     108:	89 79       	andi	r24, 0x99	; 153
     10a:	80 62       	ori	r24, 0x20	; 32
     10c:	80 83       	st	Z, r24
     10e:	08 95       	ret

00000110 <writeChar>:
	pp++;
	writeChar( num % 10 + '0', pp);
}

void writeChar(char ch, int pos)
{
     110:	cf 93       	push	r28
     112:	df 93       	push	r29
     114:	cd b7       	in	r28, 0x3d	; 61
     116:	de b7       	in	r29, 0x3e	; 62
     118:	64 97       	sbiw	r28, 0x14	; 20
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	f8 94       	cli
     11e:	de bf       	out	0x3e, r29	; 62
     120:	0f be       	out	0x3f, r0	; 63
     122:	cd bf       	out	0x3d, r28	; 61
	// All the numbers
	// 0 - 0x1551, 1 - 0x0110, 2 - 0x1E11, 3 - 0x1B11, 4 - 0x0B50, 5 - 0x1B41, 6 - 0x1F41, 7 - 0x0111, 8 - 0x1F51, 9 - 0x0B51
	uint16_t scc[] = {0x1551, 0x0110, 0x1E11, 0x1B11, 0x0B50, 0x1B41, 0x1F41, 0x0111, 0x1F51, 0x0B51};
     124:	94 e1       	ldi	r25, 0x14	; 20
     126:	e8 e0       	ldi	r30, 0x08	; 8
     128:	f1 e0       	ldi	r31, 0x01	; 1
     12a:	de 01       	movw	r26, r28
     12c:	11 96       	adiw	r26, 0x01	; 1
     12e:	01 90       	ld	r0, Z+
     130:	0d 92       	st	X+, r0
     132:	9a 95       	dec	r25
     134:	e1 f7       	brne	.-8      	; 0x12e <writeChar+0x1e>
	
	if(pos >= 0 && pos <= 5){
     136:	66 30       	cpi	r22, 0x06	; 6
     138:	71 05       	cpc	r23, r1
     13a:	08 f0       	brcs	.+2      	; 0x13e <writeChar+0x2e>
     13c:	46 c0       	rjmp	.+140    	; 0x1ca <writeChar+0xba>
		if (ch >= '0' || ch <= '9'){
			int pair = pos / 2;					      // Make sure it's either pair 0,1 - 2,3 or 4,5
     13e:	fb 01       	movw	r30, r22
     140:	77 23       	and	r23, r23
     142:	0c f4       	brge	.+2      	; 0x146 <writeChar+0x36>
     144:	31 96       	adiw	r30, 0x01	; 1
     146:	f5 95       	asr	r31
     148:	e7 95       	ror	r30
			uint8_t *lcddr = (uint8_t *) 0xEC + pair; // Point to register position 0xEC which is LCDDR0 and add pair to get LCDDR0, LCDDR1 or LCDDR2
     14a:	e4 51       	subi	r30, 0x14	; 20
     14c:	ff 4f       	sbci	r31, 0xFF	; 255
			uint16_t num = scc[ch - '0'];			  // Get the hexadecimal number from the list
     14e:	a8 2f       	mov	r26, r24
     150:	b0 e0       	ldi	r27, 0x00	; 0
     152:	d0 97       	sbiw	r26, 0x30	; 48
     154:	aa 0f       	add	r26, r26
     156:	bb 1f       	adc	r27, r27
     158:	81 e0       	ldi	r24, 0x01	; 1
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	8c 0f       	add	r24, r28
     15e:	9d 1f       	adc	r25, r29
     160:	a8 0f       	add	r26, r24
     162:	b9 1f       	adc	r27, r25
     164:	0d 90       	ld	r0, X+
     166:	bc 91       	ld	r27, X
     168:	a0 2d       	mov	r26, r0

			for (int i = 0; i <= 3; i++) {			  // Loop through every number in the hexadecimal number
     16a:	40 e0       	ldi	r20, 0x00	; 0
     16c:	50 e0       	ldi	r21, 0x00	; 0
     16e:	2a c0       	rjmp	.+84     	; 0x1c4 <writeChar+0xb4>
				int nibble = num & 0xF;				  // Get the least significant number in the hex
     170:	cd 01       	movw	r24, r26
     172:	8f 70       	andi	r24, 0x0F	; 15
     174:	99 27       	eor	r25, r25
				
				if(pos % 2 == 1) {				      // Check if the nibble parts should be in the left or right number in the pair
     176:	9b 01       	movw	r18, r22
     178:	21 70       	andi	r18, 0x01	; 1
     17a:	30 78       	andi	r19, 0x80	; 128
     17c:	33 23       	and	r19, r19
     17e:	34 f4       	brge	.+12     	; 0x18c <writeChar+0x7c>
     180:	21 50       	subi	r18, 0x01	; 1
     182:	31 09       	sbc	r19, r1
     184:	2e 6f       	ori	r18, 0xFE	; 254
     186:	3f 6f       	ori	r19, 0xFF	; 255
     188:	2f 5f       	subi	r18, 0xFF	; 255
     18a:	3f 4f       	sbci	r19, 0xFF	; 255
     18c:	21 30       	cpi	r18, 0x01	; 1
     18e:	31 05       	cpc	r19, r1
     190:	51 f4       	brne	.+20     	; 0x1a6 <writeChar+0x96>
					nibble *= 0x10;					  // If pos % 2 == 1 -> nibble will load in right digit
     192:	82 95       	swap	r24
     194:	92 95       	swap	r25
     196:	90 7f       	andi	r25, 0xF0	; 240
     198:	98 27       	eor	r25, r24
     19a:	80 7f       	andi	r24, 0xF0	; 240
     19c:	98 27       	eor	r25, r24
					*lcddr = *lcddr & 0xF;
     19e:	20 81       	ld	r18, Z
     1a0:	2f 70       	andi	r18, 0x0F	; 15
     1a2:	20 83       	st	Z, r18
     1a4:	03 c0       	rjmp	.+6      	; 0x1ac <writeChar+0x9c>
				}
				
				else {
					*lcddr = *lcddr & 0xF0;
     1a6:	20 81       	ld	r18, Z
     1a8:	20 7f       	andi	r18, 0xF0	; 240
     1aa:	20 83       	st	Z, r18
				}
				
				*lcddr = *lcddr | nibble;			  // Write the nibble to the digit
     1ac:	90 81       	ld	r25, Z
     1ae:	89 2b       	or	r24, r25
     1b0:	80 83       	st	Z, r24
				lcddr += 5;							  // Go to LCDDRx + 5
     1b2:	35 96       	adiw	r30, 0x05	; 5
				num /= 0x10;						  // Next nibble
     1b4:	b2 95       	swap	r27
     1b6:	a2 95       	swap	r26
     1b8:	af 70       	andi	r26, 0x0F	; 15
     1ba:	ab 27       	eor	r26, r27
     1bc:	bf 70       	andi	r27, 0x0F	; 15
     1be:	ab 27       	eor	r26, r27
		if (ch >= '0' || ch <= '9'){
			int pair = pos / 2;					      // Make sure it's either pair 0,1 - 2,3 or 4,5
			uint8_t *lcddr = (uint8_t *) 0xEC + pair; // Point to register position 0xEC which is LCDDR0 and add pair to get LCDDR0, LCDDR1 or LCDDR2
			uint16_t num = scc[ch - '0'];			  // Get the hexadecimal number from the list

			for (int i = 0; i <= 3; i++) {			  // Loop through every number in the hexadecimal number
     1c0:	4f 5f       	subi	r20, 0xFF	; 255
     1c2:	5f 4f       	sbci	r21, 0xFF	; 255
     1c4:	44 30       	cpi	r20, 0x04	; 4
     1c6:	51 05       	cpc	r21, r1
     1c8:	9c f2       	brlt	.-90     	; 0x170 <writeChar+0x60>
				lcddr += 5;							  // Go to LCDDRx + 5
				num /= 0x10;						  // Next nibble
			}
		}
	}
}
     1ca:	64 96       	adiw	r28, 0x14	; 20
     1cc:	0f b6       	in	r0, 0x3f	; 63
     1ce:	f8 94       	cli
     1d0:	de bf       	out	0x3e, r29	; 62
     1d2:	0f be       	out	0x3f, r0	; 63
     1d4:	cd bf       	out	0x3d, r28	; 61
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	08 95       	ret

000001dc <printAt>:
	
	
	
}

void printAt(long num, int pos) {
     1dc:	8f 92       	push	r8
     1de:	9f 92       	push	r9
     1e0:	af 92       	push	r10
     1e2:	bf 92       	push	r11
     1e4:	cf 92       	push	r12
     1e6:	df 92       	push	r13
     1e8:	ef 92       	push	r14
     1ea:	ff 92       	push	r15
     1ec:	cf 93       	push	r28
     1ee:	df 93       	push	r29
     1f0:	4b 01       	movw	r8, r22
     1f2:	5c 01       	movw	r10, r24
     1f4:	ea 01       	movw	r28, r20
	int pp = pos;
	writeChar( (num % 100) / 10 + '0', pp);
     1f6:	24 e6       	ldi	r18, 0x64	; 100
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	40 e0       	ldi	r20, 0x00	; 0
     1fc:	50 e0       	ldi	r21, 0x00	; 0
     1fe:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <__divmodsi4>
     202:	0f 2e       	mov	r0, r31
     204:	fa e0       	ldi	r31, 0x0A	; 10
     206:	cf 2e       	mov	r12, r31
     208:	d1 2c       	mov	r13, r1
     20a:	e1 2c       	mov	r14, r1
     20c:	f1 2c       	mov	r15, r1
     20e:	f0 2d       	mov	r31, r0
     210:	a7 01       	movw	r20, r14
     212:	96 01       	movw	r18, r12
     214:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <__divmodsi4>
     218:	be 01       	movw	r22, r28
     21a:	80 e3       	ldi	r24, 0x30	; 48
     21c:	82 0f       	add	r24, r18
     21e:	0e 94 88 00 	call	0x110	; 0x110 <writeChar>
	pp++;
     222:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
     224:	c5 01       	movw	r24, r10
     226:	b4 01       	movw	r22, r8
     228:	a7 01       	movw	r20, r14
     22a:	96 01       	movw	r18, r12
     22c:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <__divmodsi4>
     230:	86 2f       	mov	r24, r22
     232:	be 01       	movw	r22, r28
     234:	80 5d       	subi	r24, 0xD0	; 208
     236:	0e 94 88 00 	call	0x110	; 0x110 <writeChar>
}
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	ff 90       	pop	r15
     240:	ef 90       	pop	r14
     242:	df 90       	pop	r13
     244:	cf 90       	pop	r12
     246:	bf 90       	pop	r11
     248:	af 90       	pop	r10
     24a:	9f 90       	pop	r9
     24c:	8f 90       	pop	r8
     24e:	08 95       	ret

00000250 <updatedisplay>:
		}
	}
}

void updatedisplay(int currentFreq){
	printAt(currentFreq, 4);
     250:	bc 01       	movw	r22, r24
     252:	99 0f       	add	r25, r25
     254:	88 0b       	sbc	r24, r24
     256:	99 0b       	sbc	r25, r25
     258:	44 e0       	ldi	r20, 0x04	; 4
     25a:	50 e0       	ldi	r21, 0x00	; 0
     25c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <printAt>
     260:	08 95       	ret

00000262 <direction>:
#include "Joystick.h"
//#include "TinyTimber.h"
//#include "PulseGenerator.h"
//#include "Porthandler.h"

void direction(Joystick *self){
     262:	cf 92       	push	r12
     264:	df 92       	push	r13
     266:	ef 92       	push	r14
     268:	ff 92       	push	r15
     26a:	0f 93       	push	r16
     26c:	1f 93       	push	r17
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	ec 01       	movw	r28, r24
	if (PINB >> 7 == 0){
     274:	1f 99       	sbic	0x03, 7	; 3
     276:	2e c0       	rjmp	.+92     	; 0x2d4 <direction+0x72>
		if(self->pulse->focus == 1){
     278:	ec 81       	ldd	r30, Y+4	; 0x04
     27a:	fd 81       	ldd	r31, Y+5	; 0x05
     27c:	84 81       	ldd	r24, Z+4	; 0x04
     27e:	95 81       	ldd	r25, Z+5	; 0x05
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	a1 f4       	brne	.+40     	; 0x2ac <direction+0x4a>
			AFTER(MSEC(400), self->pulse->pulse1, decrease, 0);
     284:	06 81       	ldd	r16, Z+6	; 0x06
     286:	17 81       	ldd	r17, Z+7	; 0x07
     288:	c1 2c       	mov	r12, r1
     28a:	d1 2c       	mov	r13, r1
     28c:	0f 2e       	mov	r0, r31
     28e:	f9 e8       	ldi	r31, 0x89	; 137
     290:	ef 2e       	mov	r14, r31
     292:	f2 e0       	ldi	r31, 0x02	; 2
     294:	ff 2e       	mov	r15, r31
     296:	f0 2d       	mov	r31, r0
     298:	20 e0       	ldi	r18, 0x00	; 0
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	a9 01       	movw	r20, r18
     29e:	64 ed       	ldi	r22, 0xD4	; 212
     2a0:	70 e3       	ldi	r23, 0x30	; 48
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
     2aa:	77 c0       	rjmp	.+238    	; 0x39a <direction+0x138>
		}else{
			AFTER(MSEC(400), self->pulse->pulse2, decrease, 0);
     2ac:	00 85       	ldd	r16, Z+8	; 0x08
     2ae:	11 85       	ldd	r17, Z+9	; 0x09
     2b0:	c1 2c       	mov	r12, r1
     2b2:	d1 2c       	mov	r13, r1
     2b4:	0f 2e       	mov	r0, r31
     2b6:	f9 e8       	ldi	r31, 0x89	; 137
     2b8:	ef 2e       	mov	r14, r31
     2ba:	f2 e0       	ldi	r31, 0x02	; 2
     2bc:	ff 2e       	mov	r15, r31
     2be:	f0 2d       	mov	r31, r0
     2c0:	20 e0       	ldi	r18, 0x00	; 0
     2c2:	30 e0       	ldi	r19, 0x00	; 0
     2c4:	a9 01       	movw	r20, r18
     2c6:	64 ed       	ldi	r22, 0xD4	; 212
     2c8:	70 e3       	ldi	r23, 0x30	; 48
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
     2d2:	63 c0       	rjmp	.+198    	; 0x39a <direction+0x138>
		}
	}
	
	else if (PINB >> 6 == 0){
     2d4:	83 b1       	in	r24, 0x03	; 3
     2d6:	82 95       	swap	r24
     2d8:	86 95       	lsr	r24
     2da:	86 95       	lsr	r24
     2dc:	83 70       	andi	r24, 0x03	; 3
     2de:	71 f5       	brne	.+92     	; 0x33c <direction+0xda>
		if(self->pulse->focus == 1){
     2e0:	ec 81       	ldd	r30, Y+4	; 0x04
     2e2:	fd 81       	ldd	r31, Y+5	; 0x05
     2e4:	84 81       	ldd	r24, Z+4	; 0x04
     2e6:	95 81       	ldd	r25, Z+5	; 0x05
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	a1 f4       	brne	.+40     	; 0x314 <direction+0xb2>
			AFTER(MSEC(400), self->pulse->pulse1, increase, 0);
     2ec:	06 81       	ldd	r16, Z+6	; 0x06
     2ee:	17 81       	ldd	r17, Z+7	; 0x07
     2f0:	c1 2c       	mov	r12, r1
     2f2:	d1 2c       	mov	r13, r1
     2f4:	0f 2e       	mov	r0, r31
     2f6:	fe e7       	ldi	r31, 0x7E	; 126
     2f8:	ef 2e       	mov	r14, r31
     2fa:	f2 e0       	ldi	r31, 0x02	; 2
     2fc:	ff 2e       	mov	r15, r31
     2fe:	f0 2d       	mov	r31, r0
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	a9 01       	movw	r20, r18
     306:	64 ed       	ldi	r22, 0xD4	; 212
     308:	70 e3       	ldi	r23, 0x30	; 48
     30a:	80 e0       	ldi	r24, 0x00	; 0
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
     312:	43 c0       	rjmp	.+134    	; 0x39a <direction+0x138>
		}else{
			AFTER(MSEC(400), self->pulse->pulse2, increase, 0);
     314:	00 85       	ldd	r16, Z+8	; 0x08
     316:	11 85       	ldd	r17, Z+9	; 0x09
     318:	c1 2c       	mov	r12, r1
     31a:	d1 2c       	mov	r13, r1
     31c:	0f 2e       	mov	r0, r31
     31e:	fe e7       	ldi	r31, 0x7E	; 126
     320:	ef 2e       	mov	r14, r31
     322:	f2 e0       	ldi	r31, 0x02	; 2
     324:	ff 2e       	mov	r15, r31
     326:	f0 2d       	mov	r31, r0
     328:	20 e0       	ldi	r18, 0x00	; 0
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	a9 01       	movw	r20, r18
     32e:	64 ed       	ldi	r22, 0xD4	; 212
     330:	70 e3       	ldi	r23, 0x30	; 48
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
     33a:	2f c0       	rjmp	.+94     	; 0x39a <direction+0x138>
		}
	}
	
	else if(PINB >> 4 == 0){
     33c:	83 b1       	in	r24, 0x03	; 3
     33e:	82 95       	swap	r24
     340:	8f 70       	andi	r24, 0x0F	; 15
     342:	59 f5       	brne	.+86     	; 0x39a <direction+0x138>
		if(self->pulse->focus == 1){
     344:	ec 81       	ldd	r30, Y+4	; 0x04
     346:	fd 81       	ldd	r31, Y+5	; 0x05
     348:	84 81       	ldd	r24, Z+4	; 0x04
     34a:	95 81       	ldd	r25, Z+5	; 0x05
     34c:	01 97       	sbiw	r24, 0x01	; 1
     34e:	99 f4       	brne	.+38     	; 0x376 <direction+0x114>
			ASYNC(self->pulse->pulse1, stored, 0);
     350:	06 81       	ldd	r16, Z+6	; 0x06
     352:	17 81       	ldd	r17, Z+7	; 0x07
     354:	c1 2c       	mov	r12, r1
     356:	d1 2c       	mov	r13, r1
     358:	0f 2e       	mov	r0, r31
     35a:	f5 e9       	ldi	r31, 0x95	; 149
     35c:	ef 2e       	mov	r14, r31
     35e:	f2 e0       	ldi	r31, 0x02	; 2
     360:	ff 2e       	mov	r15, r31
     362:	f0 2d       	mov	r31, r0
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	a9 01       	movw	r20, r18
     36a:	60 e0       	ldi	r22, 0x00	; 0
     36c:	70 e0       	ldi	r23, 0x00	; 0
     36e:	cb 01       	movw	r24, r22
     370:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
     374:	12 c0       	rjmp	.+36     	; 0x39a <direction+0x138>
		}else{
			ASYNC(self->pulse->pulse2, stored, 0);
     376:	00 85       	ldd	r16, Z+8	; 0x08
     378:	11 85       	ldd	r17, Z+9	; 0x09
     37a:	c1 2c       	mov	r12, r1
     37c:	d1 2c       	mov	r13, r1
     37e:	0f 2e       	mov	r0, r31
     380:	f5 e9       	ldi	r31, 0x95	; 149
     382:	ef 2e       	mov	r14, r31
     384:	f2 e0       	ldi	r31, 0x02	; 2
     386:	ff 2e       	mov	r15, r31
     388:	f0 2d       	mov	r31, r0
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	a9 01       	movw	r20, r18
     390:	60 e0       	ldi	r22, 0x00	; 0
     392:	70 e0       	ldi	r23, 0x00	; 0
     394:	cb 01       	movw	r24, r22
     396:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
		}
	}
	
	ASYNC(self->pulse, updategui, 0);
     39a:	0c 81       	ldd	r16, Y+4	; 0x04
     39c:	1d 81       	ldd	r17, Y+5	; 0x05
     39e:	c1 2c       	mov	r12, r1
     3a0:	d1 2c       	mov	r13, r1
     3a2:	0f 2e       	mov	r0, r31
     3a4:	ff e3       	ldi	r31, 0x3F	; 63
     3a6:	ef 2e       	mov	r14, r31
     3a8:	f2 e0       	ldi	r31, 0x02	; 2
     3aa:	ff 2e       	mov	r15, r31
     3ac:	f0 2d       	mov	r31, r0
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	a9 01       	movw	r20, r18
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	cb 01       	movw	r24, r22
     3ba:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
}
     3be:	df 91       	pop	r29
     3c0:	cf 91       	pop	r28
     3c2:	1f 91       	pop	r17
     3c4:	0f 91       	pop	r16
     3c6:	ff 90       	pop	r15
     3c8:	ef 90       	pop	r14
     3ca:	df 90       	pop	r13
     3cc:	cf 90       	pop	r12
     3ce:	08 95       	ret

000003d0 <main>:
#include "Joystick.h"



int main(void)
{
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	cd b7       	in	r28, 0x3d	; 61
     3d6:	de b7       	in	r29, 0x3e	; 62
     3d8:	a6 97       	sbiw	r28, 0x26	; 38
     3da:	0f b6       	in	r0, 0x3f	; 63
     3dc:	f8 94       	cli
     3de:	de bf       	out	0x3e, r29	; 62
     3e0:	0f be       	out	0x3f, r0	; 63
     3e2:	cd bf       	out	0x3d, r28	; 61
    CLKPR = 0x80;
     3e4:	e1 e6       	ldi	r30, 0x61	; 97
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	80 e8       	ldi	r24, 0x80	; 128
     3ea:	80 83       	st	Z, r24
    CLKPR = 0x00;
     3ec:	10 82       	st	Z, r1
    //LCD_Init();
	
	GUI gui = initGUI();
     3ee:	1a 82       	std	Y+2, r1	; 0x02
     3f0:	19 82       	std	Y+1, r1	; 0x01
     3f2:	1c 82       	std	Y+4, r1	; 0x04
     3f4:	1b 82       	std	Y+3, r1	; 0x03
	Pulsegen pulse1 = initPulsegen(0, 0);
     3f6:	88 e0       	ldi	r24, 0x08	; 8
     3f8:	de 01       	movw	r26, r28
     3fa:	15 96       	adiw	r26, 0x05	; 5
     3fc:	fd 01       	movw	r30, r26
     3fe:	98 2f       	mov	r25, r24
     400:	11 92       	st	Z+, r1
     402:	9a 95       	dec	r25
     404:	e9 f7       	brne	.-6      	; 0x400 <__DATA_REGION_LENGTH__>
	Pulsegen pulse2 = initPulsegen(0, 0);
     406:	9e 01       	movw	r18, r28
     408:	23 5f       	subi	r18, 0xF3	; 243
     40a:	3f 4f       	sbci	r19, 0xFF	; 255
     40c:	f9 01       	movw	r30, r18
     40e:	11 92       	st	Z+, r1
     410:	8a 95       	dec	r24
     412:	e9 f7       	brne	.-6      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
	Pulse pulse = initPulse(1, &pulse1, &pulse2, &gui);
     414:	1e 8a       	std	Y+22, r1	; 0x16
     416:	1d 8a       	std	Y+21, r1	; 0x15
     418:	18 8e       	std	Y+24, r1	; 0x18
     41a:	1f 8a       	std	Y+23, r1	; 0x17
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	9a 8f       	std	Y+26, r25	; 0x1a
     422:	89 8f       	std	Y+25, r24	; 0x19
     424:	bc 8f       	std	Y+28, r27	; 0x1c
     426:	ab 8f       	std	Y+27, r26	; 0x1b
     428:	3e 8f       	std	Y+30, r19	; 0x1e
     42a:	2d 8f       	std	Y+29, r18	; 0x1d
     42c:	ce 01       	movw	r24, r28
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	98 a3       	std	Y+32, r25	; 0x20
     432:	8f 8f       	std	Y+31, r24	; 0x1f
	Joystick joystick = initJoystick(&pulse);
     434:	1a a2       	std	Y+34, r1	; 0x22
     436:	19 a2       	std	Y+33, r1	; 0x21
     438:	1c a2       	std	Y+36, r1	; 0x24
     43a:	1b a2       	std	Y+35, r1	; 0x23
     43c:	44 96       	adiw	r24, 0x14	; 20
     43e:	9e a3       	std	Y+38, r25	; 0x26
     440:	8d a3       	std	Y+37, r24	; 0x25
	
	INSTALL(&joystick, direction, IRQ_PCINT0);
     442:	41 e0       	ldi	r20, 0x01	; 1
     444:	61 e3       	ldi	r22, 0x31	; 49
     446:	71 e0       	ldi	r23, 0x01	; 1
     448:	0c 96       	adiw	r24, 0x0c	; 12
     44a:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <install>
	INSTALL(&joystick, direction, IRQ_PCINT1);
     44e:	42 e0       	ldi	r20, 0x02	; 2
     450:	61 e3       	ldi	r22, 0x31	; 49
     452:	71 e0       	ldi	r23, 0x01	; 1
     454:	ce 01       	movw	r24, r28
     456:	81 96       	adiw	r24, 0x21	; 33
     458:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <install>
	
	return TINYTIMBER(&joystick, LCD_Init, NULL);
     45c:	40 e0       	ldi	r20, 0x00	; 0
     45e:	50 e0       	ldi	r21, 0x00	; 0
     460:	6d e4       	ldi	r22, 0x4D	; 77
     462:	70 e0       	ldi	r23, 0x00	; 0
     464:	ce 01       	movw	r24, r28
     466:	81 96       	adiw	r24, 0x21	; 33
     468:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <tinytimber>
}
     46c:	a6 96       	adiw	r28, 0x26	; 38
     46e:	0f b6       	in	r0, 0x3f	; 63
     470:	f8 94       	cli
     472:	de bf       	out	0x3e, r29	; 62
     474:	0f be       	out	0x3f, r0	; 63
     476:	cd bf       	out	0x3d, r28	; 61
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	08 95       	ret

0000047e <updategui>:
#include "Porthandler.h"

void changefocus(Pulse *self, int newfocus){
	self->focus = newfocus;
}
void updategui(Pulse *self){
     47e:	cf 92       	push	r12
     480:	df 92       	push	r13
     482:	ef 92       	push	r14
     484:	ff 92       	push	r15
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	fc 01       	movw	r30, r24
	if(self->focus == 1){
     48c:	84 81       	ldd	r24, Z+4	; 0x04
     48e:	95 81       	ldd	r25, Z+5	; 0x05
     490:	01 97       	sbiw	r24, 0x01	; 1
     492:	b9 f4       	brne	.+46     	; 0x4c2 <updategui+0x44>
		ASYNC(self->gui, updatedisplay, self->pulse1->currentFreq);
     494:	a6 81       	ldd	r26, Z+6	; 0x06
     496:	b7 81       	ldd	r27, Z+7	; 0x07
     498:	02 85       	ldd	r16, Z+10	; 0x0a
     49a:	13 85       	ldd	r17, Z+11	; 0x0b
     49c:	14 96       	adiw	r26, 0x04	; 4
     49e:	cd 90       	ld	r12, X+
     4a0:	dc 90       	ld	r13, X
     4a2:	15 97       	sbiw	r26, 0x05	; 5
     4a4:	0f 2e       	mov	r0, r31
     4a6:	f8 e2       	ldi	r31, 0x28	; 40
     4a8:	ef 2e       	mov	r14, r31
     4aa:	f1 e0       	ldi	r31, 0x01	; 1
     4ac:	ff 2e       	mov	r15, r31
     4ae:	f0 2d       	mov	r31, r0
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	a9 01       	movw	r20, r18
     4b6:	60 e0       	ldi	r22, 0x00	; 0
     4b8:	70 e0       	ldi	r23, 0x00	; 0
     4ba:	cb 01       	movw	r24, r22
     4bc:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
     4c0:	16 c0       	rjmp	.+44     	; 0x4ee <updategui+0x70>
	}else{
		ASYNC(self->gui, updatedisplay, self->pulse2->currentFreq);
     4c2:	a0 85       	ldd	r26, Z+8	; 0x08
     4c4:	b1 85       	ldd	r27, Z+9	; 0x09
     4c6:	02 85       	ldd	r16, Z+10	; 0x0a
     4c8:	13 85       	ldd	r17, Z+11	; 0x0b
     4ca:	14 96       	adiw	r26, 0x04	; 4
     4cc:	cd 90       	ld	r12, X+
     4ce:	dc 90       	ld	r13, X
     4d0:	15 97       	sbiw	r26, 0x05	; 5
     4d2:	0f 2e       	mov	r0, r31
     4d4:	f8 e2       	ldi	r31, 0x28	; 40
     4d6:	ef 2e       	mov	r14, r31
     4d8:	f1 e0       	ldi	r31, 0x01	; 1
     4da:	ff 2e       	mov	r15, r31
     4dc:	f0 2d       	mov	r31, r0
     4de:	20 e0       	ldi	r18, 0x00	; 0
     4e0:	30 e0       	ldi	r19, 0x00	; 0
     4e2:	a9 01       	movw	r20, r18
     4e4:	60 e0       	ldi	r22, 0x00	; 0
     4e6:	70 e0       	ldi	r23, 0x00	; 0
     4e8:	cb 01       	movw	r24, r22
     4ea:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
	}
}
     4ee:	1f 91       	pop	r17
     4f0:	0f 91       	pop	r16
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	df 90       	pop	r13
     4f8:	cf 90       	pop	r12
     4fa:	08 95       	ret

000004fc <increase>:
#include <avr/interrupt.h>
#include <stdbool.h>
#include "PulseGenerator.h"

void increase(Pulsegen *self){
	if (self->currentFreq < 99 && self->currentFreq >= 0){
     4fc:	fc 01       	movw	r30, r24
     4fe:	24 81       	ldd	r18, Z+4	; 0x04
     500:	35 81       	ldd	r19, Z+5	; 0x05
     502:	23 36       	cpi	r18, 0x63	; 99
     504:	31 05       	cpc	r19, r1
     506:	20 f4       	brcc	.+8      	; 0x510 <__stack+0x11>
		self->currentFreq++;
     508:	2f 5f       	subi	r18, 0xFF	; 255
     50a:	3f 4f       	sbci	r19, 0xFF	; 255
     50c:	35 83       	std	Z+5, r19	; 0x05
     50e:	24 83       	std	Z+4, r18	; 0x04
     510:	08 95       	ret

00000512 <decrease>:
	}
}

void decrease(Pulsegen *self){
	if (self->currentFreq <=99 && self->currentFreq > 0){
     512:	fc 01       	movw	r30, r24
     514:	24 81       	ldd	r18, Z+4	; 0x04
     516:	35 81       	ldd	r19, Z+5	; 0x05
     518:	a9 01       	movw	r20, r18
     51a:	41 50       	subi	r20, 0x01	; 1
     51c:	51 09       	sbc	r21, r1
     51e:	43 36       	cpi	r20, 0x63	; 99
     520:	51 05       	cpc	r21, r1
     522:	10 f4       	brcc	.+4      	; 0x528 <decrease+0x16>
		self->currentFreq--;
     524:	55 83       	std	Z+5, r21	; 0x05
     526:	44 83       	std	Z+4, r20	; 0x04
     528:	08 95       	ret

0000052a <stored>:
	}
}

void stored(Pulsegen *self){
     52a:	fc 01       	movw	r30, r24
	if(self->currentFreq != 0){
     52c:	84 81       	ldd	r24, Z+4	; 0x04
     52e:	95 81       	ldd	r25, Z+5	; 0x05
     530:	00 97       	sbiw	r24, 0x00	; 0
     532:	29 f0       	breq	.+10     	; 0x53e <stored+0x14>
		self->storedFreq = self->currentFreq;
     534:	97 83       	std	Z+7, r25	; 0x07
     536:	86 83       	std	Z+6, r24	; 0x06
		self->currentFreq = 0;
     538:	15 82       	std	Z+5, r1	; 0x05
     53a:	14 82       	std	Z+4, r1	; 0x04
     53c:	08 95       	ret
	}
	else{
		self->currentFreq = self->storedFreq;
     53e:	86 81       	ldd	r24, Z+6	; 0x06
     540:	97 81       	ldd	r25, Z+7	; 0x07
     542:	95 83       	std	Z+5, r25	; 0x05
     544:	84 83       	std	Z+4, r24	; 0x04
     546:	08 95       	ret

00000548 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
     54c:	00 d0       	rcall	.+0      	; 0x54e <initialize+0x6>
     54e:	00 d0       	rcall	.+0      	; 0x550 <initialize+0x8>
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	18 c0       	rjmp	.+48     	; 0x58a <initialize+0x42>
     55a:	ac 01       	movw	r20, r24
     55c:	4f 5f       	subi	r20, 0xFF	; 255
     55e:	5f 4f       	sbci	r21, 0xFF	; 255
     560:	9a 01       	movw	r18, r20
     562:	22 95       	swap	r18
     564:	32 95       	swap	r19
     566:	30 7f       	andi	r19, 0xF0	; 240
     568:	32 27       	eor	r19, r18
     56a:	20 7f       	andi	r18, 0xF0	; 240
     56c:	32 27       	eor	r19, r18
     56e:	21 50       	subi	r18, 0x01	; 1
     570:	3e 4f       	sbci	r19, 0xFE	; 254
     572:	82 95       	swap	r24
     574:	92 95       	swap	r25
     576:	90 7f       	andi	r25, 0xF0	; 240
     578:	98 27       	eor	r25, r24
     57a:	80 7f       	andi	r24, 0xF0	; 240
     57c:	98 27       	eor	r25, r24
     57e:	fc 01       	movw	r30, r24
     580:	e1 50       	subi	r30, 0x01	; 1
     582:	fe 4f       	sbci	r31, 0xFE	; 254
     584:	31 83       	std	Z+1, r19	; 0x01
     586:	20 83       	st	Z, r18
     588:	ca 01       	movw	r24, r20
     58a:	8e 30       	cpi	r24, 0x0E	; 14
     58c:	91 05       	cpc	r25, r1
     58e:	2c f3       	brlt	.-54     	; 0x55a <initialize+0x12>
     590:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <messages+0xe1>
     594:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <messages+0xe0>
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	15 c0       	rjmp	.+42     	; 0x5c8 <initialize+0x80>
     59e:	ac 01       	movw	r20, r24
     5a0:	4f 5f       	subi	r20, 0xFF	; 255
     5a2:	5f 4f       	sbci	r21, 0xFF	; 255
     5a4:	6d e1       	ldi	r22, 0x1D	; 29
     5a6:	64 9f       	mul	r22, r20
     5a8:	90 01       	movw	r18, r0
     5aa:	65 9f       	mul	r22, r21
     5ac:	30 0d       	add	r19, r0
     5ae:	11 24       	eor	r1, r1
     5b0:	26 5b       	subi	r18, 0xB6	; 182
     5b2:	3e 4f       	sbci	r19, 0xFE	; 254
     5b4:	68 9f       	mul	r22, r24
     5b6:	f0 01       	movw	r30, r0
     5b8:	69 9f       	mul	r22, r25
     5ba:	f0 0d       	add	r31, r0
     5bc:	11 24       	eor	r1, r1
     5be:	e6 5b       	subi	r30, 0xB6	; 182
     5c0:	fe 4f       	sbci	r31, 0xFE	; 254
     5c2:	31 83       	std	Z+1, r19	; 0x01
     5c4:	20 83       	st	Z, r18
     5c6:	ca 01       	movw	r24, r20
     5c8:	83 30       	cpi	r24, 0x03	; 3
     5ca:	91 05       	cpc	r25, r1
     5cc:	44 f3       	brlt	.-48     	; 0x59e <initialize+0x56>
     5ce:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <threads+0x58>
     5d2:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <threads+0x57>
     5d6:	1a 82       	std	Y+2, r1	; 0x02
     5d8:	19 82       	std	Y+1, r1	; 0x01
     5da:	32 c0       	rjmp	.+100    	; 0x640 <initialize+0xf8>
     5dc:	2d e1       	ldi	r18, 0x1D	; 29
     5de:	49 81       	ldd	r20, Y+1	; 0x01
     5e0:	5a 81       	ldd	r21, Y+2	; 0x02
     5e2:	24 9f       	mul	r18, r20
     5e4:	c0 01       	movw	r24, r0
     5e6:	25 9f       	mul	r18, r21
     5e8:	90 0d       	add	r25, r0
     5ea:	11 24       	eor	r1, r1
     5ec:	fc 01       	movw	r30, r24
     5ee:	e0 5b       	subi	r30, 0xB0	; 176
     5f0:	fe 4f       	sbci	r31, 0xFE	; 254
     5f2:	fc 83       	std	Y+4, r31	; 0x04
     5f4:	eb 83       	std	Y+3, r30	; 0x03
     5f6:	cf 01       	movw	r24, r30
     5f8:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <setjmp>
     5fc:	20 e6       	ldi	r18, 0x60	; 96
     5fe:	49 81       	ldd	r20, Y+1	; 0x01
     600:	5a 81       	ldd	r21, Y+2	; 0x02
     602:	24 9f       	mul	r18, r20
     604:	c0 01       	movw	r24, r0
     606:	25 9f       	mul	r18, r21
     608:	90 0d       	add	r25, r0
     60a:	11 24       	eor	r1, r1
     60c:	85 5b       	subi	r24, 0xB5	; 181
     60e:	9c 4f       	sbci	r25, 0xFC	; 252
     610:	eb 81       	ldd	r30, Y+3	; 0x03
     612:	fc 81       	ldd	r31, Y+4	; 0x04
     614:	91 8b       	std	Z+17, r25	; 0x11
     616:	80 8b       	std	Z+16, r24	; 0x10
     618:	93 8b       	std	Z+19, r25	; 0x13
     61a:	82 8b       	std	Z+18, r24	; 0x12
     61c:	80 e8       	ldi	r24, 0x80	; 128
     61e:	9e e0       	ldi	r25, 0x0E	; 14
     620:	96 8b       	std	Z+22, r25	; 0x16
     622:	85 8b       	std	Z+21, r24	; 0x15
     624:	8d e1       	ldi	r24, 0x1D	; 29
     626:	84 9f       	mul	r24, r20
     628:	f0 01       	movw	r30, r0
     62a:	85 9f       	mul	r24, r21
     62c:	f0 0d       	add	r31, r0
     62e:	11 24       	eor	r1, r1
     630:	e6 5b       	subi	r30, 0xB6	; 182
     632:	fe 4f       	sbci	r31, 0xFE	; 254
     634:	15 82       	std	Z+5, r1	; 0x05
     636:	14 82       	std	Z+4, r1	; 0x04
     638:	4f 5f       	subi	r20, 0xFF	; 255
     63a:	5f 4f       	sbci	r21, 0xFF	; 255
     63c:	5a 83       	std	Y+2, r21	; 0x02
     63e:	49 83       	std	Y+1, r20	; 0x01
     640:	29 81       	ldd	r18, Y+1	; 0x01
     642:	3a 81       	ldd	r19, Y+2	; 0x02
     644:	24 30       	cpi	r18, 0x04	; 4
     646:	31 05       	cpc	r19, r1
     648:	4c f2       	brlt	.-110    	; 0x5dc <initialize+0x94>
     64a:	e2 ee       	ldi	r30, 0xE2	; 226
     64c:	f1 e0       	ldi	r31, 0x01	; 1
     64e:	11 82       	std	Z+1, r1	; 0x01
     650:	10 82       	st	Z, r1
     652:	15 82       	std	Z+5, r1	; 0x05
     654:	14 82       	std	Z+4, r1	; 0x04
     656:	13 82       	std	Z+3, r1	; 0x03
     658:	12 82       	std	Z+2, r1	; 0x02
     65a:	e1 e6       	ldi	r30, 0x61	; 97
     65c:	f0 e0       	ldi	r31, 0x00	; 0
     65e:	80 e8       	ldi	r24, 0x80	; 128
     660:	80 83       	st	Z, r24
     662:	10 82       	st	Z, r1
     664:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     668:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	df 91       	pop	r29
     682:	cf 91       	pop	r28
     684:	08 95       	ret

00000686 <dispatch>:
     686:	cf 93       	push	r28
     688:	df 93       	push	r29
     68a:	00 d0       	rcall	.+0      	; 0x68c <dispatch+0x6>
     68c:	cd b7       	in	r28, 0x3d	; 61
     68e:	de b7       	in	r29, 0x3e	; 62
     690:	9a 83       	std	Y+2, r25	; 0x02
     692:	89 83       	std	Y+1, r24	; 0x01
     694:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     698:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     69c:	06 96       	adiw	r24, 0x06	; 6
     69e:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <setjmp>
     6a2:	89 2b       	or	r24, r25
     6a4:	59 f4       	brne	.+22     	; 0x6bc <dispatch+0x36>
     6a6:	89 81       	ldd	r24, Y+1	; 0x01
     6a8:	9a 81       	ldd	r25, Y+2	; 0x02
     6aa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6ae:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     6b2:	61 e0       	ldi	r22, 0x01	; 1
     6b4:	70 e0       	ldi	r23, 0x00	; 0
     6b6:	06 96       	adiw	r24, 0x06	; 6
     6b8:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <longjmp>
     6bc:	0f 90       	pop	r0
     6be:	0f 90       	pop	r0
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	08 95       	ret

000006c6 <enqueueByDeadline>:
     6c6:	0f 93       	push	r16
     6c8:	1f 93       	push	r17
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	dc 01       	movw	r26, r24
     6d0:	cb 01       	movw	r24, r22
     6d2:	eb 01       	movw	r28, r22
     6d4:	e8 81       	ld	r30, Y
     6d6:	f9 81       	ldd	r31, Y+1	; 0x01
     6d8:	c0 e0       	ldi	r28, 0x00	; 0
     6da:	d0 e0       	ldi	r29, 0x00	; 0
     6dc:	04 c0       	rjmp	.+8      	; 0x6e6 <enqueueByDeadline+0x20>
     6de:	ef 01       	movw	r28, r30
     6e0:	01 90       	ld	r0, Z+
     6e2:	f0 81       	ld	r31, Z
     6e4:	e0 2d       	mov	r30, r0
     6e6:	30 97       	sbiw	r30, 0x00	; 0
     6e8:	79 f0       	breq	.+30     	; 0x708 <enqueueByDeadline+0x42>
     6ea:	06 81       	ldd	r16, Z+6	; 0x06
     6ec:	17 81       	ldd	r17, Z+7	; 0x07
     6ee:	20 85       	ldd	r18, Z+8	; 0x08
     6f0:	31 85       	ldd	r19, Z+9	; 0x09
     6f2:	16 96       	adiw	r26, 0x06	; 6
     6f4:	4d 91       	ld	r20, X+
     6f6:	5d 91       	ld	r21, X+
     6f8:	6d 91       	ld	r22, X+
     6fa:	7c 91       	ld	r23, X
     6fc:	19 97       	sbiw	r26, 0x09	; 9
     6fe:	40 17       	cp	r20, r16
     700:	51 07       	cpc	r21, r17
     702:	62 07       	cpc	r22, r18
     704:	73 07       	cpc	r23, r19
     706:	5c f7       	brge	.-42     	; 0x6de <enqueueByDeadline+0x18>
     708:	11 96       	adiw	r26, 0x01	; 1
     70a:	fc 93       	st	X, r31
     70c:	ee 93       	st	-X, r30
     70e:	20 97       	sbiw	r28, 0x00	; 0
     710:	21 f4       	brne	.+8      	; 0x71a <enqueueByDeadline+0x54>
     712:	fc 01       	movw	r30, r24
     714:	b1 83       	std	Z+1, r27	; 0x01
     716:	a0 83       	st	Z, r26
     718:	02 c0       	rjmp	.+4      	; 0x71e <enqueueByDeadline+0x58>
     71a:	b9 83       	std	Y+1, r27	; 0x01
     71c:	a8 83       	st	Y, r26
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	1f 91       	pop	r17
     724:	0f 91       	pop	r16
     726:	08 95       	ret

00000728 <enqueueByBaseline>:
     728:	0f 93       	push	r16
     72a:	1f 93       	push	r17
     72c:	cf 93       	push	r28
     72e:	df 93       	push	r29
     730:	dc 01       	movw	r26, r24
     732:	cb 01       	movw	r24, r22
     734:	eb 01       	movw	r28, r22
     736:	e8 81       	ld	r30, Y
     738:	f9 81       	ldd	r31, Y+1	; 0x01
     73a:	c0 e0       	ldi	r28, 0x00	; 0
     73c:	d0 e0       	ldi	r29, 0x00	; 0
     73e:	04 c0       	rjmp	.+8      	; 0x748 <enqueueByBaseline+0x20>
     740:	ef 01       	movw	r28, r30
     742:	01 90       	ld	r0, Z+
     744:	f0 81       	ld	r31, Z
     746:	e0 2d       	mov	r30, r0
     748:	30 97       	sbiw	r30, 0x00	; 0
     74a:	79 f0       	breq	.+30     	; 0x76a <enqueueByBaseline+0x42>
     74c:	02 81       	ldd	r16, Z+2	; 0x02
     74e:	13 81       	ldd	r17, Z+3	; 0x03
     750:	24 81       	ldd	r18, Z+4	; 0x04
     752:	35 81       	ldd	r19, Z+5	; 0x05
     754:	12 96       	adiw	r26, 0x02	; 2
     756:	4d 91       	ld	r20, X+
     758:	5d 91       	ld	r21, X+
     75a:	6d 91       	ld	r22, X+
     75c:	7c 91       	ld	r23, X
     75e:	15 97       	sbiw	r26, 0x05	; 5
     760:	40 17       	cp	r20, r16
     762:	51 07       	cpc	r21, r17
     764:	62 07       	cpc	r22, r18
     766:	73 07       	cpc	r23, r19
     768:	5c f7       	brge	.-42     	; 0x740 <enqueueByBaseline+0x18>
     76a:	11 96       	adiw	r26, 0x01	; 1
     76c:	fc 93       	st	X, r31
     76e:	ee 93       	st	-X, r30
     770:	20 97       	sbiw	r28, 0x00	; 0
     772:	21 f4       	brne	.+8      	; 0x77c <enqueueByBaseline+0x54>
     774:	fc 01       	movw	r30, r24
     776:	b1 83       	std	Z+1, r27	; 0x01
     778:	a0 83       	st	Z, r26
     77a:	02 c0       	rjmp	.+4      	; 0x780 <enqueueByBaseline+0x58>
     77c:	b9 83       	std	Y+1, r27	; 0x01
     77e:	a8 83       	st	Y, r26
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	1f 91       	pop	r17
     786:	0f 91       	pop	r16
     788:	08 95       	ret

0000078a <dequeue>:
     78a:	dc 01       	movw	r26, r24
     78c:	ed 91       	ld	r30, X+
     78e:	fc 91       	ld	r31, X
     790:	11 97       	sbiw	r26, 0x01	; 1
     792:	30 97       	sbiw	r30, 0x00	; 0
     794:	59 f4       	brne	.+22     	; 0x7ac <dequeue+0x22>
     796:	8f ef       	ldi	r24, 0xFF	; 255
     798:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     79c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     7a0:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	83 bf       	out	0x33, r24	; 51
     7a8:	88 95       	sleep
     7aa:	fc cf       	rjmp	.-8      	; 0x7a4 <dequeue+0x1a>
     7ac:	20 81       	ld	r18, Z
     7ae:	31 81       	ldd	r19, Z+1	; 0x01
     7b0:	2d 93       	st	X+, r18
     7b2:	3c 93       	st	X, r19
     7b4:	cf 01       	movw	r24, r30
     7b6:	08 95       	ret

000007b8 <insert>:
     7b8:	fb 01       	movw	r30, r22
     7ba:	20 81       	ld	r18, Z
     7bc:	31 81       	ldd	r19, Z+1	; 0x01
     7be:	fc 01       	movw	r30, r24
     7c0:	31 83       	std	Z+1, r19	; 0x01
     7c2:	20 83       	st	Z, r18
     7c4:	fb 01       	movw	r30, r22
     7c6:	91 83       	std	Z+1, r25	; 0x01
     7c8:	80 83       	st	Z, r24
     7ca:	08 95       	ret

000007cc <push>:
     7cc:	fb 01       	movw	r30, r22
     7ce:	20 81       	ld	r18, Z
     7d0:	31 81       	ldd	r19, Z+1	; 0x01
     7d2:	fc 01       	movw	r30, r24
     7d4:	31 83       	std	Z+1, r19	; 0x01
     7d6:	20 83       	st	Z, r18
     7d8:	fb 01       	movw	r30, r22
     7da:	91 83       	std	Z+1, r25	; 0x01
     7dc:	80 83       	st	Z, r24
     7de:	08 95       	ret

000007e0 <pop>:
     7e0:	dc 01       	movw	r26, r24
     7e2:	ed 91       	ld	r30, X+
     7e4:	fc 91       	ld	r31, X
     7e6:	11 97       	sbiw	r26, 0x01	; 1
     7e8:	20 81       	ld	r18, Z
     7ea:	31 81       	ldd	r19, Z+1	; 0x01
     7ec:	2d 93       	st	X+, r18
     7ee:	3c 93       	st	X, r19
     7f0:	cf 01       	movw	r24, r30
     7f2:	08 95       	ret

000007f4 <schedule>:
     7f4:	cf 93       	push	r28
     7f6:	df 93       	push	r29
     7f8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     7fc:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     800:	c2 81       	ldd	r28, Z+2	; 0x02
     802:	d3 81       	ldd	r29, Z+3	; 0x03
     804:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
     808:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
     80c:	30 97       	sbiw	r30, 0x00	; 0
     80e:	19 f1       	breq	.+70     	; 0x856 <schedule+0x62>
     810:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     814:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     818:	89 2b       	or	r24, r25
     81a:	e9 f0       	breq	.+58     	; 0x856 <schedule+0x62>
     81c:	20 97       	sbiw	r28, 0x00	; 0
     81e:	69 f0       	breq	.+26     	; 0x83a <schedule+0x46>
     820:	86 81       	ldd	r24, Z+6	; 0x06
     822:	97 81       	ldd	r25, Z+7	; 0x07
     824:	a0 85       	ldd	r26, Z+8	; 0x08
     826:	b1 85       	ldd	r27, Z+9	; 0x09
     828:	4e 81       	ldd	r20, Y+6	; 0x06
     82a:	5f 81       	ldd	r21, Y+7	; 0x07
     82c:	68 85       	ldd	r22, Y+8	; 0x08
     82e:	79 85       	ldd	r23, Y+9	; 0x09
     830:	84 1b       	sub	r24, r20
     832:	95 0b       	sbc	r25, r21
     834:	a6 0b       	sbc	r26, r22
     836:	b7 0b       	sbc	r27, r23
     838:	72 f4       	brpl	.+28     	; 0x856 <schedule+0x62>
     83a:	84 e0       	ldi	r24, 0x04	; 4
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <pop>
     842:	62 e0       	ldi	r22, 0x02	; 2
     844:	71 e0       	ldi	r23, 0x01	; 1
     846:	0e 94 e6 03 	call	0x7cc	; 0x7cc <push>
     84a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     84e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     852:	0e 94 43 03 	call	0x686	; 0x686 <dispatch>
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	08 95       	ret

0000085c <__vector_1>:
     85c:	1f 92       	push	r1
     85e:	0f 92       	push	r0
     860:	0f b6       	in	r0, 0x3f	; 63
     862:	0f 92       	push	r0
     864:	11 24       	eor	r1, r1
     866:	0f 93       	push	r16
     868:	1f 93       	push	r17
     86a:	2f 93       	push	r18
     86c:	3f 93       	push	r19
     86e:	4f 93       	push	r20
     870:	5f 93       	push	r21
     872:	6f 93       	push	r22
     874:	7f 93       	push	r23
     876:	8f 93       	push	r24
     878:	9f 93       	push	r25
     87a:	af 93       	push	r26
     87c:	bf 93       	push	r27
     87e:	ef 93       	push	r30
     880:	ff 93       	push	r31
     882:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     886:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     88a:	ac 01       	movw	r20, r24
     88c:	09 2e       	mov	r0, r25
     88e:	00 0c       	add	r0, r0
     890:	66 0b       	sbc	r22, r22
     892:	77 0b       	sbc	r23, r23
     894:	9a 01       	movw	r18, r20
     896:	11 27       	eor	r17, r17
     898:	00 27       	eor	r16, r16
     89a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     89e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8a2:	60 e0       	ldi	r22, 0x00	; 0
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	40 2b       	or	r20, r16
     8a8:	51 2b       	or	r21, r17
     8aa:	62 2b       	or	r22, r18
     8ac:	73 2b       	or	r23, r19
     8ae:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     8b2:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     8b6:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     8ba:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     8be:	b0 9b       	sbis	0x16, 0	; 22
     8c0:	1a c0       	rjmp	.+52     	; 0x8f6 <__vector_1+0x9a>
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	09 2e       	mov	r0, r25
     8c6:	00 0c       	add	r0, r0
     8c8:	aa 0b       	sbc	r26, r26
     8ca:	bb 0b       	sbc	r27, r27
     8cc:	bc 01       	movw	r22, r24
     8ce:	55 27       	eor	r21, r21
     8d0:	44 27       	eor	r20, r20
     8d2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8d6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8da:	a0 e0       	ldi	r26, 0x00	; 0
     8dc:	b0 e0       	ldi	r27, 0x00	; 0
     8de:	84 2b       	or	r24, r20
     8e0:	95 2b       	or	r25, r21
     8e2:	a6 2b       	or	r26, r22
     8e4:	b7 2b       	or	r27, r23
     8e6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     8ea:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     8ee:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     8f2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     8f6:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable>
     8fa:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x1>
     8fe:	30 97       	sbiw	r30, 0x00	; 0
     900:	39 f0       	breq	.+14     	; 0x910 <__vector_1+0xb4>
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable>
     90a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x1>
     90e:	09 95       	icall
     910:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     914:	ff 91       	pop	r31
     916:	ef 91       	pop	r30
     918:	bf 91       	pop	r27
     91a:	af 91       	pop	r26
     91c:	9f 91       	pop	r25
     91e:	8f 91       	pop	r24
     920:	7f 91       	pop	r23
     922:	6f 91       	pop	r22
     924:	5f 91       	pop	r21
     926:	4f 91       	pop	r20
     928:	3f 91       	pop	r19
     92a:	2f 91       	pop	r18
     92c:	1f 91       	pop	r17
     92e:	0f 91       	pop	r16
     930:	0f 90       	pop	r0
     932:	0f be       	out	0x3f, r0	; 63
     934:	0f 90       	pop	r0
     936:	1f 90       	pop	r1
     938:	18 95       	reti

0000093a <__vector_2>:
     93a:	1f 92       	push	r1
     93c:	0f 92       	push	r0
     93e:	0f b6       	in	r0, 0x3f	; 63
     940:	0f 92       	push	r0
     942:	11 24       	eor	r1, r1
     944:	0f 93       	push	r16
     946:	1f 93       	push	r17
     948:	2f 93       	push	r18
     94a:	3f 93       	push	r19
     94c:	4f 93       	push	r20
     94e:	5f 93       	push	r21
     950:	6f 93       	push	r22
     952:	7f 93       	push	r23
     954:	8f 93       	push	r24
     956:	9f 93       	push	r25
     958:	af 93       	push	r26
     95a:	bf 93       	push	r27
     95c:	ef 93       	push	r30
     95e:	ff 93       	push	r31
     960:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     964:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     968:	ac 01       	movw	r20, r24
     96a:	09 2e       	mov	r0, r25
     96c:	00 0c       	add	r0, r0
     96e:	66 0b       	sbc	r22, r22
     970:	77 0b       	sbc	r23, r23
     972:	9a 01       	movw	r18, r20
     974:	11 27       	eor	r17, r17
     976:	00 27       	eor	r16, r16
     978:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     97c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     980:	60 e0       	ldi	r22, 0x00	; 0
     982:	70 e0       	ldi	r23, 0x00	; 0
     984:	40 2b       	or	r20, r16
     986:	51 2b       	or	r21, r17
     988:	62 2b       	or	r22, r18
     98a:	73 2b       	or	r23, r19
     98c:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     990:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     994:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     998:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     99c:	b0 9b       	sbis	0x16, 0	; 22
     99e:	1a c0       	rjmp	.+52     	; 0x9d4 <__vector_2+0x9a>
     9a0:	01 96       	adiw	r24, 0x01	; 1
     9a2:	09 2e       	mov	r0, r25
     9a4:	00 0c       	add	r0, r0
     9a6:	aa 0b       	sbc	r26, r26
     9a8:	bb 0b       	sbc	r27, r27
     9aa:	bc 01       	movw	r22, r24
     9ac:	55 27       	eor	r21, r21
     9ae:	44 27       	eor	r20, r20
     9b0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9b4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9b8:	a0 e0       	ldi	r26, 0x00	; 0
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	84 2b       	or	r24, r20
     9be:	95 2b       	or	r25, r21
     9c0:	a6 2b       	or	r26, r22
     9c2:	b7 2b       	or	r27, r23
     9c4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     9c8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     9cc:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     9d0:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     9d4:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x2>
     9d8:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x3>
     9dc:	30 97       	sbiw	r30, 0x00	; 0
     9de:	39 f0       	breq	.+14     	; 0x9ee <__vector_2+0xb4>
     9e0:	61 e0       	ldi	r22, 0x01	; 1
     9e2:	70 e0       	ldi	r23, 0x00	; 0
     9e4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x2>
     9e8:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x3>
     9ec:	09 95       	icall
     9ee:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     9f2:	ff 91       	pop	r31
     9f4:	ef 91       	pop	r30
     9f6:	bf 91       	pop	r27
     9f8:	af 91       	pop	r26
     9fa:	9f 91       	pop	r25
     9fc:	8f 91       	pop	r24
     9fe:	7f 91       	pop	r23
     a00:	6f 91       	pop	r22
     a02:	5f 91       	pop	r21
     a04:	4f 91       	pop	r20
     a06:	3f 91       	pop	r19
     a08:	2f 91       	pop	r18
     a0a:	1f 91       	pop	r17
     a0c:	0f 91       	pop	r16
     a0e:	0f 90       	pop	r0
     a10:	0f be       	out	0x3f, r0	; 63
     a12:	0f 90       	pop	r0
     a14:	1f 90       	pop	r1
     a16:	18 95       	reti

00000a18 <__vector_3>:
     a18:	1f 92       	push	r1
     a1a:	0f 92       	push	r0
     a1c:	0f b6       	in	r0, 0x3f	; 63
     a1e:	0f 92       	push	r0
     a20:	11 24       	eor	r1, r1
     a22:	0f 93       	push	r16
     a24:	1f 93       	push	r17
     a26:	2f 93       	push	r18
     a28:	3f 93       	push	r19
     a2a:	4f 93       	push	r20
     a2c:	5f 93       	push	r21
     a2e:	6f 93       	push	r22
     a30:	7f 93       	push	r23
     a32:	8f 93       	push	r24
     a34:	9f 93       	push	r25
     a36:	af 93       	push	r26
     a38:	bf 93       	push	r27
     a3a:	ef 93       	push	r30
     a3c:	ff 93       	push	r31
     a3e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     a42:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     a46:	ac 01       	movw	r20, r24
     a48:	09 2e       	mov	r0, r25
     a4a:	00 0c       	add	r0, r0
     a4c:	66 0b       	sbc	r22, r22
     a4e:	77 0b       	sbc	r23, r23
     a50:	9a 01       	movw	r18, r20
     a52:	11 27       	eor	r17, r17
     a54:	00 27       	eor	r16, r16
     a56:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a5a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a5e:	60 e0       	ldi	r22, 0x00	; 0
     a60:	70 e0       	ldi	r23, 0x00	; 0
     a62:	40 2b       	or	r20, r16
     a64:	51 2b       	or	r21, r17
     a66:	62 2b       	or	r22, r18
     a68:	73 2b       	or	r23, r19
     a6a:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     a6e:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     a72:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     a76:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     a7a:	b0 9b       	sbis	0x16, 0	; 22
     a7c:	1a c0       	rjmp	.+52     	; 0xab2 <__vector_3+0x9a>
     a7e:	01 96       	adiw	r24, 0x01	; 1
     a80:	09 2e       	mov	r0, r25
     a82:	00 0c       	add	r0, r0
     a84:	aa 0b       	sbc	r26, r26
     a86:	bb 0b       	sbc	r27, r27
     a88:	bc 01       	movw	r22, r24
     a8a:	55 27       	eor	r21, r21
     a8c:	44 27       	eor	r20, r20
     a8e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a92:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a96:	a0 e0       	ldi	r26, 0x00	; 0
     a98:	b0 e0       	ldi	r27, 0x00	; 0
     a9a:	84 2b       	or	r24, r20
     a9c:	95 2b       	or	r25, r21
     a9e:	a6 2b       	or	r26, r22
     aa0:	b7 2b       	or	r27, r23
     aa2:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     aa6:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     aaa:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     aae:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     ab2:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x4>
     ab6:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x5>
     aba:	30 97       	sbiw	r30, 0x00	; 0
     abc:	39 f0       	breq	.+14     	; 0xacc <__vector_3+0xb4>
     abe:	62 e0       	ldi	r22, 0x02	; 2
     ac0:	70 e0       	ldi	r23, 0x00	; 0
     ac2:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x4>
     ac6:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x5>
     aca:	09 95       	icall
     acc:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     ad0:	ff 91       	pop	r31
     ad2:	ef 91       	pop	r30
     ad4:	bf 91       	pop	r27
     ad6:	af 91       	pop	r26
     ad8:	9f 91       	pop	r25
     ada:	8f 91       	pop	r24
     adc:	7f 91       	pop	r23
     ade:	6f 91       	pop	r22
     ae0:	5f 91       	pop	r21
     ae2:	4f 91       	pop	r20
     ae4:	3f 91       	pop	r19
     ae6:	2f 91       	pop	r18
     ae8:	1f 91       	pop	r17
     aea:	0f 91       	pop	r16
     aec:	0f 90       	pop	r0
     aee:	0f be       	out	0x3f, r0	; 63
     af0:	0f 90       	pop	r0
     af2:	1f 90       	pop	r1
     af4:	18 95       	reti

00000af6 <__vector_4>:
     af6:	1f 92       	push	r1
     af8:	0f 92       	push	r0
     afa:	0f b6       	in	r0, 0x3f	; 63
     afc:	0f 92       	push	r0
     afe:	11 24       	eor	r1, r1
     b00:	0f 93       	push	r16
     b02:	1f 93       	push	r17
     b04:	2f 93       	push	r18
     b06:	3f 93       	push	r19
     b08:	4f 93       	push	r20
     b0a:	5f 93       	push	r21
     b0c:	6f 93       	push	r22
     b0e:	7f 93       	push	r23
     b10:	8f 93       	push	r24
     b12:	9f 93       	push	r25
     b14:	af 93       	push	r26
     b16:	bf 93       	push	r27
     b18:	ef 93       	push	r30
     b1a:	ff 93       	push	r31
     b1c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     b20:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     b24:	ac 01       	movw	r20, r24
     b26:	09 2e       	mov	r0, r25
     b28:	00 0c       	add	r0, r0
     b2a:	66 0b       	sbc	r22, r22
     b2c:	77 0b       	sbc	r23, r23
     b2e:	9a 01       	movw	r18, r20
     b30:	11 27       	eor	r17, r17
     b32:	00 27       	eor	r16, r16
     b34:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b38:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	40 2b       	or	r20, r16
     b42:	51 2b       	or	r21, r17
     b44:	62 2b       	or	r22, r18
     b46:	73 2b       	or	r23, r19
     b48:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     b4c:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     b50:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     b54:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     b58:	b0 9b       	sbis	0x16, 0	; 22
     b5a:	1a c0       	rjmp	.+52     	; 0xb90 <__vector_4+0x9a>
     b5c:	01 96       	adiw	r24, 0x01	; 1
     b5e:	09 2e       	mov	r0, r25
     b60:	00 0c       	add	r0, r0
     b62:	aa 0b       	sbc	r26, r26
     b64:	bb 0b       	sbc	r27, r27
     b66:	bc 01       	movw	r22, r24
     b68:	55 27       	eor	r21, r21
     b6a:	44 27       	eor	r20, r20
     b6c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b70:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b74:	a0 e0       	ldi	r26, 0x00	; 0
     b76:	b0 e0       	ldi	r27, 0x00	; 0
     b78:	84 2b       	or	r24, r20
     b7a:	95 2b       	or	r25, r21
     b7c:	a6 2b       	or	r26, r22
     b7e:	b7 2b       	or	r27, r23
     b80:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     b84:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     b88:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     b8c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     b90:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x6>
     b94:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x7>
     b98:	30 97       	sbiw	r30, 0x00	; 0
     b9a:	39 f0       	breq	.+14     	; 0xbaa <__vector_4+0xb4>
     b9c:	63 e0       	ldi	r22, 0x03	; 3
     b9e:	70 e0       	ldi	r23, 0x00	; 0
     ba0:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x6>
     ba4:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x7>
     ba8:	09 95       	icall
     baa:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     bae:	ff 91       	pop	r31
     bb0:	ef 91       	pop	r30
     bb2:	bf 91       	pop	r27
     bb4:	af 91       	pop	r26
     bb6:	9f 91       	pop	r25
     bb8:	8f 91       	pop	r24
     bba:	7f 91       	pop	r23
     bbc:	6f 91       	pop	r22
     bbe:	5f 91       	pop	r21
     bc0:	4f 91       	pop	r20
     bc2:	3f 91       	pop	r19
     bc4:	2f 91       	pop	r18
     bc6:	1f 91       	pop	r17
     bc8:	0f 91       	pop	r16
     bca:	0f 90       	pop	r0
     bcc:	0f be       	out	0x3f, r0	; 63
     bce:	0f 90       	pop	r0
     bd0:	1f 90       	pop	r1
     bd2:	18 95       	reti

00000bd4 <__vector_5>:
     bd4:	1f 92       	push	r1
     bd6:	0f 92       	push	r0
     bd8:	0f b6       	in	r0, 0x3f	; 63
     bda:	0f 92       	push	r0
     bdc:	11 24       	eor	r1, r1
     bde:	0f 93       	push	r16
     be0:	1f 93       	push	r17
     be2:	2f 93       	push	r18
     be4:	3f 93       	push	r19
     be6:	4f 93       	push	r20
     be8:	5f 93       	push	r21
     bea:	6f 93       	push	r22
     bec:	7f 93       	push	r23
     bee:	8f 93       	push	r24
     bf0:	9f 93       	push	r25
     bf2:	af 93       	push	r26
     bf4:	bf 93       	push	r27
     bf6:	ef 93       	push	r30
     bf8:	ff 93       	push	r31
     bfa:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     bfe:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     c02:	ac 01       	movw	r20, r24
     c04:	09 2e       	mov	r0, r25
     c06:	00 0c       	add	r0, r0
     c08:	66 0b       	sbc	r22, r22
     c0a:	77 0b       	sbc	r23, r23
     c0c:	9a 01       	movw	r18, r20
     c0e:	11 27       	eor	r17, r17
     c10:	00 27       	eor	r16, r16
     c12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c1a:	60 e0       	ldi	r22, 0x00	; 0
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	40 2b       	or	r20, r16
     c20:	51 2b       	or	r21, r17
     c22:	62 2b       	or	r22, r18
     c24:	73 2b       	or	r23, r19
     c26:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     c2a:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     c2e:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     c32:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     c36:	b0 9b       	sbis	0x16, 0	; 22
     c38:	1a c0       	rjmp	.+52     	; 0xc6e <__vector_5+0x9a>
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	09 2e       	mov	r0, r25
     c3e:	00 0c       	add	r0, r0
     c40:	aa 0b       	sbc	r26, r26
     c42:	bb 0b       	sbc	r27, r27
     c44:	bc 01       	movw	r22, r24
     c46:	55 27       	eor	r21, r21
     c48:	44 27       	eor	r20, r20
     c4a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c4e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c52:	a0 e0       	ldi	r26, 0x00	; 0
     c54:	b0 e0       	ldi	r27, 0x00	; 0
     c56:	84 2b       	or	r24, r20
     c58:	95 2b       	or	r25, r21
     c5a:	a6 2b       	or	r26, r22
     c5c:	b7 2b       	or	r27, r23
     c5e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     c62:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     c66:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     c6a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     c6e:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x8>
     c72:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x9>
     c76:	30 97       	sbiw	r30, 0x00	; 0
     c78:	39 f0       	breq	.+14     	; 0xc88 <__vector_5+0xb4>
     c7a:	64 e0       	ldi	r22, 0x04	; 4
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x8>
     c82:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x9>
     c86:	09 95       	icall
     c88:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     c8c:	ff 91       	pop	r31
     c8e:	ef 91       	pop	r30
     c90:	bf 91       	pop	r27
     c92:	af 91       	pop	r26
     c94:	9f 91       	pop	r25
     c96:	8f 91       	pop	r24
     c98:	7f 91       	pop	r23
     c9a:	6f 91       	pop	r22
     c9c:	5f 91       	pop	r21
     c9e:	4f 91       	pop	r20
     ca0:	3f 91       	pop	r19
     ca2:	2f 91       	pop	r18
     ca4:	1f 91       	pop	r17
     ca6:	0f 91       	pop	r16
     ca8:	0f 90       	pop	r0
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	0f 90       	pop	r0
     cae:	1f 90       	pop	r1
     cb0:	18 95       	reti

00000cb2 <__vector_10>:
     cb2:	1f 92       	push	r1
     cb4:	0f 92       	push	r0
     cb6:	0f b6       	in	r0, 0x3f	; 63
     cb8:	0f 92       	push	r0
     cba:	11 24       	eor	r1, r1
     cbc:	0f 93       	push	r16
     cbe:	1f 93       	push	r17
     cc0:	2f 93       	push	r18
     cc2:	3f 93       	push	r19
     cc4:	4f 93       	push	r20
     cc6:	5f 93       	push	r21
     cc8:	6f 93       	push	r22
     cca:	7f 93       	push	r23
     ccc:	8f 93       	push	r24
     cce:	9f 93       	push	r25
     cd0:	af 93       	push	r26
     cd2:	bf 93       	push	r27
     cd4:	ef 93       	push	r30
     cd6:	ff 93       	push	r31
     cd8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     cdc:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     ce0:	ac 01       	movw	r20, r24
     ce2:	09 2e       	mov	r0, r25
     ce4:	00 0c       	add	r0, r0
     ce6:	66 0b       	sbc	r22, r22
     ce8:	77 0b       	sbc	r23, r23
     cea:	9a 01       	movw	r18, r20
     cec:	11 27       	eor	r17, r17
     cee:	00 27       	eor	r16, r16
     cf0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cf4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf8:	60 e0       	ldi	r22, 0x00	; 0
     cfa:	70 e0       	ldi	r23, 0x00	; 0
     cfc:	40 2b       	or	r20, r16
     cfe:	51 2b       	or	r21, r17
     d00:	62 2b       	or	r22, r18
     d02:	73 2b       	or	r23, r19
     d04:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     d08:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     d0c:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     d10:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     d14:	b0 9b       	sbis	0x16, 0	; 22
     d16:	1a c0       	rjmp	.+52     	; 0xd4c <__vector_10+0x9a>
     d18:	01 96       	adiw	r24, 0x01	; 1
     d1a:	09 2e       	mov	r0, r25
     d1c:	00 0c       	add	r0, r0
     d1e:	aa 0b       	sbc	r26, r26
     d20:	bb 0b       	sbc	r27, r27
     d22:	bc 01       	movw	r22, r24
     d24:	55 27       	eor	r21, r21
     d26:	44 27       	eor	r20, r20
     d28:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d2c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d30:	a0 e0       	ldi	r26, 0x00	; 0
     d32:	b0 e0       	ldi	r27, 0x00	; 0
     d34:	84 2b       	or	r24, r20
     d36:	95 2b       	or	r25, r21
     d38:	a6 2b       	or	r26, r22
     d3a:	b7 2b       	or	r27, r23
     d3c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     d40:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     d44:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     d48:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     d4c:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0xa>
     d50:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0xb>
     d54:	30 97       	sbiw	r30, 0x00	; 0
     d56:	39 f0       	breq	.+14     	; 0xd66 <__vector_10+0xb4>
     d58:	65 e0       	ldi	r22, 0x05	; 5
     d5a:	70 e0       	ldi	r23, 0x00	; 0
     d5c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0xa>
     d60:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0xb>
     d64:	09 95       	icall
     d66:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     d6a:	ff 91       	pop	r31
     d6c:	ef 91       	pop	r30
     d6e:	bf 91       	pop	r27
     d70:	af 91       	pop	r26
     d72:	9f 91       	pop	r25
     d74:	8f 91       	pop	r24
     d76:	7f 91       	pop	r23
     d78:	6f 91       	pop	r22
     d7a:	5f 91       	pop	r21
     d7c:	4f 91       	pop	r20
     d7e:	3f 91       	pop	r19
     d80:	2f 91       	pop	r18
     d82:	1f 91       	pop	r17
     d84:	0f 91       	pop	r16
     d86:	0f 90       	pop	r0
     d88:	0f be       	out	0x3f, r0	; 63
     d8a:	0f 90       	pop	r0
     d8c:	1f 90       	pop	r1
     d8e:	18 95       	reti

00000d90 <__vector_11>:
     d90:	1f 92       	push	r1
     d92:	0f 92       	push	r0
     d94:	0f b6       	in	r0, 0x3f	; 63
     d96:	0f 92       	push	r0
     d98:	11 24       	eor	r1, r1
     d9a:	0f 93       	push	r16
     d9c:	1f 93       	push	r17
     d9e:	2f 93       	push	r18
     da0:	3f 93       	push	r19
     da2:	4f 93       	push	r20
     da4:	5f 93       	push	r21
     da6:	6f 93       	push	r22
     da8:	7f 93       	push	r23
     daa:	8f 93       	push	r24
     dac:	9f 93       	push	r25
     dae:	af 93       	push	r26
     db0:	bf 93       	push	r27
     db2:	ef 93       	push	r30
     db4:	ff 93       	push	r31
     db6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     dba:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     dbe:	ac 01       	movw	r20, r24
     dc0:	09 2e       	mov	r0, r25
     dc2:	00 0c       	add	r0, r0
     dc4:	66 0b       	sbc	r22, r22
     dc6:	77 0b       	sbc	r23, r23
     dc8:	9a 01       	movw	r18, r20
     dca:	11 27       	eor	r17, r17
     dcc:	00 27       	eor	r16, r16
     dce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dd2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dd6:	60 e0       	ldi	r22, 0x00	; 0
     dd8:	70 e0       	ldi	r23, 0x00	; 0
     dda:	40 2b       	or	r20, r16
     ddc:	51 2b       	or	r21, r17
     dde:	62 2b       	or	r22, r18
     de0:	73 2b       	or	r23, r19
     de2:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     de6:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     dea:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     dee:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     df2:	b0 9b       	sbis	0x16, 0	; 22
     df4:	1a c0       	rjmp	.+52     	; 0xe2a <__vector_11+0x9a>
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	09 2e       	mov	r0, r25
     dfa:	00 0c       	add	r0, r0
     dfc:	aa 0b       	sbc	r26, r26
     dfe:	bb 0b       	sbc	r27, r27
     e00:	bc 01       	movw	r22, r24
     e02:	55 27       	eor	r21, r21
     e04:	44 27       	eor	r20, r20
     e06:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e0a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e0e:	a0 e0       	ldi	r26, 0x00	; 0
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	84 2b       	or	r24, r20
     e14:	95 2b       	or	r25, r21
     e16:	a6 2b       	or	r26, r22
     e18:	b7 2b       	or	r27, r23
     e1a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     e1e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     e22:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     e26:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     e2a:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xc>
     e2e:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xd>
     e32:	30 97       	sbiw	r30, 0x00	; 0
     e34:	39 f0       	breq	.+14     	; 0xe44 <__vector_11+0xb4>
     e36:	66 e0       	ldi	r22, 0x06	; 6
     e38:	70 e0       	ldi	r23, 0x00	; 0
     e3a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xc>
     e3e:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xd>
     e42:	09 95       	icall
     e44:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     e48:	ff 91       	pop	r31
     e4a:	ef 91       	pop	r30
     e4c:	bf 91       	pop	r27
     e4e:	af 91       	pop	r26
     e50:	9f 91       	pop	r25
     e52:	8f 91       	pop	r24
     e54:	7f 91       	pop	r23
     e56:	6f 91       	pop	r22
     e58:	5f 91       	pop	r21
     e5a:	4f 91       	pop	r20
     e5c:	3f 91       	pop	r19
     e5e:	2f 91       	pop	r18
     e60:	1f 91       	pop	r17
     e62:	0f 91       	pop	r16
     e64:	0f 90       	pop	r0
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	0f 90       	pop	r0
     e6a:	1f 90       	pop	r1
     e6c:	18 95       	reti

00000e6e <__vector_12>:
     e6e:	1f 92       	push	r1
     e70:	0f 92       	push	r0
     e72:	0f b6       	in	r0, 0x3f	; 63
     e74:	0f 92       	push	r0
     e76:	11 24       	eor	r1, r1
     e78:	0f 93       	push	r16
     e7a:	1f 93       	push	r17
     e7c:	2f 93       	push	r18
     e7e:	3f 93       	push	r19
     e80:	4f 93       	push	r20
     e82:	5f 93       	push	r21
     e84:	6f 93       	push	r22
     e86:	7f 93       	push	r23
     e88:	8f 93       	push	r24
     e8a:	9f 93       	push	r25
     e8c:	af 93       	push	r26
     e8e:	bf 93       	push	r27
     e90:	ef 93       	push	r30
     e92:	ff 93       	push	r31
     e94:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     e98:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     e9c:	ac 01       	movw	r20, r24
     e9e:	09 2e       	mov	r0, r25
     ea0:	00 0c       	add	r0, r0
     ea2:	66 0b       	sbc	r22, r22
     ea4:	77 0b       	sbc	r23, r23
     ea6:	9a 01       	movw	r18, r20
     ea8:	11 27       	eor	r17, r17
     eaa:	00 27       	eor	r16, r16
     eac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	40 2b       	or	r20, r16
     eba:	51 2b       	or	r21, r17
     ebc:	62 2b       	or	r22, r18
     ebe:	73 2b       	or	r23, r19
     ec0:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     ec4:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     ec8:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     ecc:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     ed0:	b0 9b       	sbis	0x16, 0	; 22
     ed2:	1a c0       	rjmp	.+52     	; 0xf08 <__vector_12+0x9a>
     ed4:	01 96       	adiw	r24, 0x01	; 1
     ed6:	09 2e       	mov	r0, r25
     ed8:	00 0c       	add	r0, r0
     eda:	aa 0b       	sbc	r26, r26
     edc:	bb 0b       	sbc	r27, r27
     ede:	bc 01       	movw	r22, r24
     ee0:	55 27       	eor	r21, r21
     ee2:	44 27       	eor	r20, r20
     ee4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ee8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eec:	a0 e0       	ldi	r26, 0x00	; 0
     eee:	b0 e0       	ldi	r27, 0x00	; 0
     ef0:	84 2b       	or	r24, r20
     ef2:	95 2b       	or	r25, r21
     ef4:	a6 2b       	or	r26, r22
     ef6:	b7 2b       	or	r27, r23
     ef8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     efc:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     f00:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     f04:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     f08:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xe>
     f0c:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xf>
     f10:	30 97       	sbiw	r30, 0x00	; 0
     f12:	39 f0       	breq	.+14     	; 0xf22 <__vector_12+0xb4>
     f14:	67 e0       	ldi	r22, 0x07	; 7
     f16:	70 e0       	ldi	r23, 0x00	; 0
     f18:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xe>
     f1c:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xf>
     f20:	09 95       	icall
     f22:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
     f26:	ff 91       	pop	r31
     f28:	ef 91       	pop	r30
     f2a:	bf 91       	pop	r27
     f2c:	af 91       	pop	r26
     f2e:	9f 91       	pop	r25
     f30:	8f 91       	pop	r24
     f32:	7f 91       	pop	r23
     f34:	6f 91       	pop	r22
     f36:	5f 91       	pop	r21
     f38:	4f 91       	pop	r20
     f3a:	3f 91       	pop	r19
     f3c:	2f 91       	pop	r18
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	0f 90       	pop	r0
     f44:	0f be       	out	0x3f, r0	; 63
     f46:	0f 90       	pop	r0
     f48:	1f 90       	pop	r1
     f4a:	18 95       	reti

00000f4c <__vector_13>:
     f4c:	1f 92       	push	r1
     f4e:	0f 92       	push	r0
     f50:	0f b6       	in	r0, 0x3f	; 63
     f52:	0f 92       	push	r0
     f54:	11 24       	eor	r1, r1
     f56:	0f 93       	push	r16
     f58:	1f 93       	push	r17
     f5a:	2f 93       	push	r18
     f5c:	3f 93       	push	r19
     f5e:	4f 93       	push	r20
     f60:	5f 93       	push	r21
     f62:	6f 93       	push	r22
     f64:	7f 93       	push	r23
     f66:	8f 93       	push	r24
     f68:	9f 93       	push	r25
     f6a:	af 93       	push	r26
     f6c:	bf 93       	push	r27
     f6e:	ef 93       	push	r30
     f70:	ff 93       	push	r31
     f72:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
     f76:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
     f7a:	ac 01       	movw	r20, r24
     f7c:	09 2e       	mov	r0, r25
     f7e:	00 0c       	add	r0, r0
     f80:	66 0b       	sbc	r22, r22
     f82:	77 0b       	sbc	r23, r23
     f84:	9a 01       	movw	r18, r20
     f86:	11 27       	eor	r17, r17
     f88:	00 27       	eor	r16, r16
     f8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f92:	60 e0       	ldi	r22, 0x00	; 0
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	40 2b       	or	r20, r16
     f98:	51 2b       	or	r21, r17
     f9a:	62 2b       	or	r22, r18
     f9c:	73 2b       	or	r23, r19
     f9e:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
     fa2:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
     fa6:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
     faa:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
     fae:	b0 9b       	sbis	0x16, 0	; 22
     fb0:	1a c0       	rjmp	.+52     	; 0xfe6 <__vector_13+0x9a>
     fb2:	01 96       	adiw	r24, 0x01	; 1
     fb4:	09 2e       	mov	r0, r25
     fb6:	00 0c       	add	r0, r0
     fb8:	aa 0b       	sbc	r26, r26
     fba:	bb 0b       	sbc	r27, r27
     fbc:	bc 01       	movw	r22, r24
     fbe:	55 27       	eor	r21, r21
     fc0:	44 27       	eor	r20, r20
     fc2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fc6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fca:	a0 e0       	ldi	r26, 0x00	; 0
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	84 2b       	or	r24, r20
     fd0:	95 2b       	or	r25, r21
     fd2:	a6 2b       	or	r26, r22
     fd4:	b7 2b       	or	r27, r23
     fd6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
     fda:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
     fde:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
     fe2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
     fe6:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x10>
     fea:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x11>
     fee:	30 97       	sbiw	r30, 0x00	; 0
     ff0:	39 f0       	breq	.+14     	; 0x1000 <__vector_13+0xb4>
     ff2:	68 e0       	ldi	r22, 0x08	; 8
     ff4:	70 e0       	ldi	r23, 0x00	; 0
     ff6:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x10>
     ffa:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x11>
     ffe:	09 95       	icall
    1000:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    1004:	ff 91       	pop	r31
    1006:	ef 91       	pop	r30
    1008:	bf 91       	pop	r27
    100a:	af 91       	pop	r26
    100c:	9f 91       	pop	r25
    100e:	8f 91       	pop	r24
    1010:	7f 91       	pop	r23
    1012:	6f 91       	pop	r22
    1014:	5f 91       	pop	r21
    1016:	4f 91       	pop	r20
    1018:	3f 91       	pop	r19
    101a:	2f 91       	pop	r18
    101c:	1f 91       	pop	r17
    101e:	0f 91       	pop	r16
    1020:	0f 90       	pop	r0
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	0f 90       	pop	r0
    1026:	1f 90       	pop	r1
    1028:	18 95       	reti

0000102a <__vector_14>:
    102a:	1f 92       	push	r1
    102c:	0f 92       	push	r0
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	0f 92       	push	r0
    1032:	11 24       	eor	r1, r1
    1034:	0f 93       	push	r16
    1036:	1f 93       	push	r17
    1038:	2f 93       	push	r18
    103a:	3f 93       	push	r19
    103c:	4f 93       	push	r20
    103e:	5f 93       	push	r21
    1040:	6f 93       	push	r22
    1042:	7f 93       	push	r23
    1044:	8f 93       	push	r24
    1046:	9f 93       	push	r25
    1048:	af 93       	push	r26
    104a:	bf 93       	push	r27
    104c:	ef 93       	push	r30
    104e:	ff 93       	push	r31
    1050:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1054:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1058:	ac 01       	movw	r20, r24
    105a:	09 2e       	mov	r0, r25
    105c:	00 0c       	add	r0, r0
    105e:	66 0b       	sbc	r22, r22
    1060:	77 0b       	sbc	r23, r23
    1062:	9a 01       	movw	r18, r20
    1064:	11 27       	eor	r17, r17
    1066:	00 27       	eor	r16, r16
    1068:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    106c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1070:	60 e0       	ldi	r22, 0x00	; 0
    1072:	70 e0       	ldi	r23, 0x00	; 0
    1074:	40 2b       	or	r20, r16
    1076:	51 2b       	or	r21, r17
    1078:	62 2b       	or	r22, r18
    107a:	73 2b       	or	r23, r19
    107c:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    1080:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1084:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1088:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    108c:	b0 9b       	sbis	0x16, 0	; 22
    108e:	1a c0       	rjmp	.+52     	; 0x10c4 <__vector_14+0x9a>
    1090:	01 96       	adiw	r24, 0x01	; 1
    1092:	09 2e       	mov	r0, r25
    1094:	00 0c       	add	r0, r0
    1096:	aa 0b       	sbc	r26, r26
    1098:	bb 0b       	sbc	r27, r27
    109a:	bc 01       	movw	r22, r24
    109c:	55 27       	eor	r21, r21
    109e:	44 27       	eor	r20, r20
    10a0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10a4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10a8:	a0 e0       	ldi	r26, 0x00	; 0
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	84 2b       	or	r24, r20
    10ae:	95 2b       	or	r25, r21
    10b0:	a6 2b       	or	r26, r22
    10b2:	b7 2b       	or	r27, r23
    10b4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    10b8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    10bc:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    10c0:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    10c4:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x12>
    10c8:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x13>
    10cc:	30 97       	sbiw	r30, 0x00	; 0
    10ce:	39 f0       	breq	.+14     	; 0x10de <__vector_14+0xb4>
    10d0:	69 e0       	ldi	r22, 0x09	; 9
    10d2:	70 e0       	ldi	r23, 0x00	; 0
    10d4:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x12>
    10d8:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x13>
    10dc:	09 95       	icall
    10de:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    10e2:	ff 91       	pop	r31
    10e4:	ef 91       	pop	r30
    10e6:	bf 91       	pop	r27
    10e8:	af 91       	pop	r26
    10ea:	9f 91       	pop	r25
    10ec:	8f 91       	pop	r24
    10ee:	7f 91       	pop	r23
    10f0:	6f 91       	pop	r22
    10f2:	5f 91       	pop	r21
    10f4:	4f 91       	pop	r20
    10f6:	3f 91       	pop	r19
    10f8:	2f 91       	pop	r18
    10fa:	1f 91       	pop	r17
    10fc:	0f 91       	pop	r16
    10fe:	0f 90       	pop	r0
    1100:	0f be       	out	0x3f, r0	; 63
    1102:	0f 90       	pop	r0
    1104:	1f 90       	pop	r1
    1106:	18 95       	reti

00001108 <__vector_15>:
    1108:	1f 92       	push	r1
    110a:	0f 92       	push	r0
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	0f 92       	push	r0
    1110:	11 24       	eor	r1, r1
    1112:	0f 93       	push	r16
    1114:	1f 93       	push	r17
    1116:	2f 93       	push	r18
    1118:	3f 93       	push	r19
    111a:	4f 93       	push	r20
    111c:	5f 93       	push	r21
    111e:	6f 93       	push	r22
    1120:	7f 93       	push	r23
    1122:	8f 93       	push	r24
    1124:	9f 93       	push	r25
    1126:	af 93       	push	r26
    1128:	bf 93       	push	r27
    112a:	ef 93       	push	r30
    112c:	ff 93       	push	r31
    112e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1132:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1136:	ac 01       	movw	r20, r24
    1138:	09 2e       	mov	r0, r25
    113a:	00 0c       	add	r0, r0
    113c:	66 0b       	sbc	r22, r22
    113e:	77 0b       	sbc	r23, r23
    1140:	9a 01       	movw	r18, r20
    1142:	11 27       	eor	r17, r17
    1144:	00 27       	eor	r16, r16
    1146:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    114a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    114e:	60 e0       	ldi	r22, 0x00	; 0
    1150:	70 e0       	ldi	r23, 0x00	; 0
    1152:	40 2b       	or	r20, r16
    1154:	51 2b       	or	r21, r17
    1156:	62 2b       	or	r22, r18
    1158:	73 2b       	or	r23, r19
    115a:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    115e:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1162:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1166:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    116a:	b0 9b       	sbis	0x16, 0	; 22
    116c:	1a c0       	rjmp	.+52     	; 0x11a2 <__vector_15+0x9a>
    116e:	01 96       	adiw	r24, 0x01	; 1
    1170:	09 2e       	mov	r0, r25
    1172:	00 0c       	add	r0, r0
    1174:	aa 0b       	sbc	r26, r26
    1176:	bb 0b       	sbc	r27, r27
    1178:	bc 01       	movw	r22, r24
    117a:	55 27       	eor	r21, r21
    117c:	44 27       	eor	r20, r20
    117e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1182:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1186:	a0 e0       	ldi	r26, 0x00	; 0
    1188:	b0 e0       	ldi	r27, 0x00	; 0
    118a:	84 2b       	or	r24, r20
    118c:	95 2b       	or	r25, r21
    118e:	a6 2b       	or	r26, r22
    1190:	b7 2b       	or	r27, r23
    1192:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1196:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    119a:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    119e:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    11a2:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x14>
    11a6:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x15>
    11aa:	30 97       	sbiw	r30, 0x00	; 0
    11ac:	39 f0       	breq	.+14     	; 0x11bc <__vector_15+0xb4>
    11ae:	6a e0       	ldi	r22, 0x0A	; 10
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x14>
    11b6:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x15>
    11ba:	09 95       	icall
    11bc:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    11c0:	ff 91       	pop	r31
    11c2:	ef 91       	pop	r30
    11c4:	bf 91       	pop	r27
    11c6:	af 91       	pop	r26
    11c8:	9f 91       	pop	r25
    11ca:	8f 91       	pop	r24
    11cc:	7f 91       	pop	r23
    11ce:	6f 91       	pop	r22
    11d0:	5f 91       	pop	r21
    11d2:	4f 91       	pop	r20
    11d4:	3f 91       	pop	r19
    11d6:	2f 91       	pop	r18
    11d8:	1f 91       	pop	r17
    11da:	0f 91       	pop	r16
    11dc:	0f 90       	pop	r0
    11de:	0f be       	out	0x3f, r0	; 63
    11e0:	0f 90       	pop	r0
    11e2:	1f 90       	pop	r1
    11e4:	18 95       	reti

000011e6 <__vector_16>:
    11e6:	1f 92       	push	r1
    11e8:	0f 92       	push	r0
    11ea:	0f b6       	in	r0, 0x3f	; 63
    11ec:	0f 92       	push	r0
    11ee:	11 24       	eor	r1, r1
    11f0:	0f 93       	push	r16
    11f2:	1f 93       	push	r17
    11f4:	2f 93       	push	r18
    11f6:	3f 93       	push	r19
    11f8:	4f 93       	push	r20
    11fa:	5f 93       	push	r21
    11fc:	6f 93       	push	r22
    11fe:	7f 93       	push	r23
    1200:	8f 93       	push	r24
    1202:	9f 93       	push	r25
    1204:	af 93       	push	r26
    1206:	bf 93       	push	r27
    1208:	ef 93       	push	r30
    120a:	ff 93       	push	r31
    120c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1210:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1214:	ac 01       	movw	r20, r24
    1216:	09 2e       	mov	r0, r25
    1218:	00 0c       	add	r0, r0
    121a:	66 0b       	sbc	r22, r22
    121c:	77 0b       	sbc	r23, r23
    121e:	9a 01       	movw	r18, r20
    1220:	11 27       	eor	r17, r17
    1222:	00 27       	eor	r16, r16
    1224:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1228:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    122c:	60 e0       	ldi	r22, 0x00	; 0
    122e:	70 e0       	ldi	r23, 0x00	; 0
    1230:	40 2b       	or	r20, r16
    1232:	51 2b       	or	r21, r17
    1234:	62 2b       	or	r22, r18
    1236:	73 2b       	or	r23, r19
    1238:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    123c:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1240:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1244:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1248:	b0 9b       	sbis	0x16, 0	; 22
    124a:	1a c0       	rjmp	.+52     	; 0x1280 <__vector_16+0x9a>
    124c:	01 96       	adiw	r24, 0x01	; 1
    124e:	09 2e       	mov	r0, r25
    1250:	00 0c       	add	r0, r0
    1252:	aa 0b       	sbc	r26, r26
    1254:	bb 0b       	sbc	r27, r27
    1256:	bc 01       	movw	r22, r24
    1258:	55 27       	eor	r21, r21
    125a:	44 27       	eor	r20, r20
    125c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1260:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1264:	a0 e0       	ldi	r26, 0x00	; 0
    1266:	b0 e0       	ldi	r27, 0x00	; 0
    1268:	84 2b       	or	r24, r20
    126a:	95 2b       	or	r25, r21
    126c:	a6 2b       	or	r26, r22
    126e:	b7 2b       	or	r27, r23
    1270:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1274:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1278:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    127c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    1280:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x16>
    1284:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x17>
    1288:	30 97       	sbiw	r30, 0x00	; 0
    128a:	39 f0       	breq	.+14     	; 0x129a <__vector_16+0xb4>
    128c:	6b e0       	ldi	r22, 0x0B	; 11
    128e:	70 e0       	ldi	r23, 0x00	; 0
    1290:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x16>
    1294:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x17>
    1298:	09 95       	icall
    129a:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    129e:	ff 91       	pop	r31
    12a0:	ef 91       	pop	r30
    12a2:	bf 91       	pop	r27
    12a4:	af 91       	pop	r26
    12a6:	9f 91       	pop	r25
    12a8:	8f 91       	pop	r24
    12aa:	7f 91       	pop	r23
    12ac:	6f 91       	pop	r22
    12ae:	5f 91       	pop	r21
    12b0:	4f 91       	pop	r20
    12b2:	3f 91       	pop	r19
    12b4:	2f 91       	pop	r18
    12b6:	1f 91       	pop	r17
    12b8:	0f 91       	pop	r16
    12ba:	0f 90       	pop	r0
    12bc:	0f be       	out	0x3f, r0	; 63
    12be:	0f 90       	pop	r0
    12c0:	1f 90       	pop	r1
    12c2:	18 95       	reti

000012c4 <__vector_17>:
    12c4:	1f 92       	push	r1
    12c6:	0f 92       	push	r0
    12c8:	0f b6       	in	r0, 0x3f	; 63
    12ca:	0f 92       	push	r0
    12cc:	11 24       	eor	r1, r1
    12ce:	0f 93       	push	r16
    12d0:	1f 93       	push	r17
    12d2:	2f 93       	push	r18
    12d4:	3f 93       	push	r19
    12d6:	4f 93       	push	r20
    12d8:	5f 93       	push	r21
    12da:	6f 93       	push	r22
    12dc:	7f 93       	push	r23
    12de:	8f 93       	push	r24
    12e0:	9f 93       	push	r25
    12e2:	af 93       	push	r26
    12e4:	bf 93       	push	r27
    12e6:	ef 93       	push	r30
    12e8:	ff 93       	push	r31
    12ea:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    12ee:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    12f2:	ac 01       	movw	r20, r24
    12f4:	09 2e       	mov	r0, r25
    12f6:	00 0c       	add	r0, r0
    12f8:	66 0b       	sbc	r22, r22
    12fa:	77 0b       	sbc	r23, r23
    12fc:	9a 01       	movw	r18, r20
    12fe:	11 27       	eor	r17, r17
    1300:	00 27       	eor	r16, r16
    1302:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1306:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    130a:	60 e0       	ldi	r22, 0x00	; 0
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	40 2b       	or	r20, r16
    1310:	51 2b       	or	r21, r17
    1312:	62 2b       	or	r22, r18
    1314:	73 2b       	or	r23, r19
    1316:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    131a:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    131e:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1322:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1326:	b0 9b       	sbis	0x16, 0	; 22
    1328:	1a c0       	rjmp	.+52     	; 0x135e <__vector_17+0x9a>
    132a:	01 96       	adiw	r24, 0x01	; 1
    132c:	09 2e       	mov	r0, r25
    132e:	00 0c       	add	r0, r0
    1330:	aa 0b       	sbc	r26, r26
    1332:	bb 0b       	sbc	r27, r27
    1334:	bc 01       	movw	r22, r24
    1336:	55 27       	eor	r21, r21
    1338:	44 27       	eor	r20, r20
    133a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    133e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1342:	a0 e0       	ldi	r26, 0x00	; 0
    1344:	b0 e0       	ldi	r27, 0x00	; 0
    1346:	84 2b       	or	r24, r20
    1348:	95 2b       	or	r25, r21
    134a:	a6 2b       	or	r26, r22
    134c:	b7 2b       	or	r27, r23
    134e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1352:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1356:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    135a:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    135e:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x18>
    1362:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x19>
    1366:	30 97       	sbiw	r30, 0x00	; 0
    1368:	39 f0       	breq	.+14     	; 0x1378 <__vector_17+0xb4>
    136a:	6c e0       	ldi	r22, 0x0C	; 12
    136c:	70 e0       	ldi	r23, 0x00	; 0
    136e:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x18>
    1372:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x19>
    1376:	09 95       	icall
    1378:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    137c:	ff 91       	pop	r31
    137e:	ef 91       	pop	r30
    1380:	bf 91       	pop	r27
    1382:	af 91       	pop	r26
    1384:	9f 91       	pop	r25
    1386:	8f 91       	pop	r24
    1388:	7f 91       	pop	r23
    138a:	6f 91       	pop	r22
    138c:	5f 91       	pop	r21
    138e:	4f 91       	pop	r20
    1390:	3f 91       	pop	r19
    1392:	2f 91       	pop	r18
    1394:	1f 91       	pop	r17
    1396:	0f 91       	pop	r16
    1398:	0f 90       	pop	r0
    139a:	0f be       	out	0x3f, r0	; 63
    139c:	0f 90       	pop	r0
    139e:	1f 90       	pop	r1
    13a0:	18 95       	reti

000013a2 <__vector_18>:
    13a2:	1f 92       	push	r1
    13a4:	0f 92       	push	r0
    13a6:	0f b6       	in	r0, 0x3f	; 63
    13a8:	0f 92       	push	r0
    13aa:	11 24       	eor	r1, r1
    13ac:	0f 93       	push	r16
    13ae:	1f 93       	push	r17
    13b0:	2f 93       	push	r18
    13b2:	3f 93       	push	r19
    13b4:	4f 93       	push	r20
    13b6:	5f 93       	push	r21
    13b8:	6f 93       	push	r22
    13ba:	7f 93       	push	r23
    13bc:	8f 93       	push	r24
    13be:	9f 93       	push	r25
    13c0:	af 93       	push	r26
    13c2:	bf 93       	push	r27
    13c4:	ef 93       	push	r30
    13c6:	ff 93       	push	r31
    13c8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    13cc:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    13d0:	ac 01       	movw	r20, r24
    13d2:	09 2e       	mov	r0, r25
    13d4:	00 0c       	add	r0, r0
    13d6:	66 0b       	sbc	r22, r22
    13d8:	77 0b       	sbc	r23, r23
    13da:	9a 01       	movw	r18, r20
    13dc:	11 27       	eor	r17, r17
    13de:	00 27       	eor	r16, r16
    13e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13e8:	60 e0       	ldi	r22, 0x00	; 0
    13ea:	70 e0       	ldi	r23, 0x00	; 0
    13ec:	40 2b       	or	r20, r16
    13ee:	51 2b       	or	r21, r17
    13f0:	62 2b       	or	r22, r18
    13f2:	73 2b       	or	r23, r19
    13f4:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    13f8:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    13fc:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1400:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    1404:	b0 9b       	sbis	0x16, 0	; 22
    1406:	1a c0       	rjmp	.+52     	; 0x143c <__vector_18+0x9a>
    1408:	01 96       	adiw	r24, 0x01	; 1
    140a:	09 2e       	mov	r0, r25
    140c:	00 0c       	add	r0, r0
    140e:	aa 0b       	sbc	r26, r26
    1410:	bb 0b       	sbc	r27, r27
    1412:	bc 01       	movw	r22, r24
    1414:	55 27       	eor	r21, r21
    1416:	44 27       	eor	r20, r20
    1418:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    141c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1420:	a0 e0       	ldi	r26, 0x00	; 0
    1422:	b0 e0       	ldi	r27, 0x00	; 0
    1424:	84 2b       	or	r24, r20
    1426:	95 2b       	or	r25, r21
    1428:	a6 2b       	or	r26, r22
    142a:	b7 2b       	or	r27, r23
    142c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    1430:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1434:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1438:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    143c:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x1a>
    1440:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1b>
    1444:	30 97       	sbiw	r30, 0x00	; 0
    1446:	39 f0       	breq	.+14     	; 0x1456 <__vector_18+0xb4>
    1448:	6d e0       	ldi	r22, 0x0D	; 13
    144a:	70 e0       	ldi	r23, 0x00	; 0
    144c:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x1a>
    1450:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1b>
    1454:	09 95       	icall
    1456:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    145a:	ff 91       	pop	r31
    145c:	ef 91       	pop	r30
    145e:	bf 91       	pop	r27
    1460:	af 91       	pop	r26
    1462:	9f 91       	pop	r25
    1464:	8f 91       	pop	r24
    1466:	7f 91       	pop	r23
    1468:	6f 91       	pop	r22
    146a:	5f 91       	pop	r21
    146c:	4f 91       	pop	r20
    146e:	3f 91       	pop	r19
    1470:	2f 91       	pop	r18
    1472:	1f 91       	pop	r17
    1474:	0f 91       	pop	r16
    1476:	0f 90       	pop	r0
    1478:	0f be       	out	0x3f, r0	; 63
    147a:	0f 90       	pop	r0
    147c:	1f 90       	pop	r1
    147e:	18 95       	reti

00001480 <__vector_19>:
    1480:	1f 92       	push	r1
    1482:	0f 92       	push	r0
    1484:	0f b6       	in	r0, 0x3f	; 63
    1486:	0f 92       	push	r0
    1488:	11 24       	eor	r1, r1
    148a:	0f 93       	push	r16
    148c:	1f 93       	push	r17
    148e:	2f 93       	push	r18
    1490:	3f 93       	push	r19
    1492:	4f 93       	push	r20
    1494:	5f 93       	push	r21
    1496:	6f 93       	push	r22
    1498:	7f 93       	push	r23
    149a:	8f 93       	push	r24
    149c:	9f 93       	push	r25
    149e:	af 93       	push	r26
    14a0:	bf 93       	push	r27
    14a2:	ef 93       	push	r30
    14a4:	ff 93       	push	r31
    14a6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    14aa:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    14ae:	ac 01       	movw	r20, r24
    14b0:	09 2e       	mov	r0, r25
    14b2:	00 0c       	add	r0, r0
    14b4:	66 0b       	sbc	r22, r22
    14b6:	77 0b       	sbc	r23, r23
    14b8:	9a 01       	movw	r18, r20
    14ba:	11 27       	eor	r17, r17
    14bc:	00 27       	eor	r16, r16
    14be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14c6:	60 e0       	ldi	r22, 0x00	; 0
    14c8:	70 e0       	ldi	r23, 0x00	; 0
    14ca:	40 2b       	or	r20, r16
    14cc:	51 2b       	or	r21, r17
    14ce:	62 2b       	or	r22, r18
    14d0:	73 2b       	or	r23, r19
    14d2:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    14d6:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    14da:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    14de:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    14e2:	b0 9b       	sbis	0x16, 0	; 22
    14e4:	1a c0       	rjmp	.+52     	; 0x151a <__vector_19+0x9a>
    14e6:	01 96       	adiw	r24, 0x01	; 1
    14e8:	09 2e       	mov	r0, r25
    14ea:	00 0c       	add	r0, r0
    14ec:	aa 0b       	sbc	r26, r26
    14ee:	bb 0b       	sbc	r27, r27
    14f0:	bc 01       	movw	r22, r24
    14f2:	55 27       	eor	r21, r21
    14f4:	44 27       	eor	r20, r20
    14f6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14fa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14fe:	a0 e0       	ldi	r26, 0x00	; 0
    1500:	b0 e0       	ldi	r27, 0x00	; 0
    1502:	84 2b       	or	r24, r20
    1504:	95 2b       	or	r25, r21
    1506:	a6 2b       	or	r26, r22
    1508:	b7 2b       	or	r27, r23
    150a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    150e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    1512:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    1516:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    151a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1c>
    151e:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1d>
    1522:	30 97       	sbiw	r30, 0x00	; 0
    1524:	39 f0       	breq	.+14     	; 0x1534 <__vector_19+0xb4>
    1526:	6e e0       	ldi	r22, 0x0E	; 14
    1528:	70 e0       	ldi	r23, 0x00	; 0
    152a:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1c>
    152e:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1d>
    1532:	09 95       	icall
    1534:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    1538:	ff 91       	pop	r31
    153a:	ef 91       	pop	r30
    153c:	bf 91       	pop	r27
    153e:	af 91       	pop	r26
    1540:	9f 91       	pop	r25
    1542:	8f 91       	pop	r24
    1544:	7f 91       	pop	r23
    1546:	6f 91       	pop	r22
    1548:	5f 91       	pop	r21
    154a:	4f 91       	pop	r20
    154c:	3f 91       	pop	r19
    154e:	2f 91       	pop	r18
    1550:	1f 91       	pop	r17
    1552:	0f 91       	pop	r16
    1554:	0f 90       	pop	r0
    1556:	0f be       	out	0x3f, r0	; 63
    1558:	0f 90       	pop	r0
    155a:	1f 90       	pop	r1
    155c:	18 95       	reti

0000155e <__vector_20>:
    155e:	1f 92       	push	r1
    1560:	0f 92       	push	r0
    1562:	0f b6       	in	r0, 0x3f	; 63
    1564:	0f 92       	push	r0
    1566:	11 24       	eor	r1, r1
    1568:	0f 93       	push	r16
    156a:	1f 93       	push	r17
    156c:	2f 93       	push	r18
    156e:	3f 93       	push	r19
    1570:	4f 93       	push	r20
    1572:	5f 93       	push	r21
    1574:	6f 93       	push	r22
    1576:	7f 93       	push	r23
    1578:	8f 93       	push	r24
    157a:	9f 93       	push	r25
    157c:	af 93       	push	r26
    157e:	bf 93       	push	r27
    1580:	ef 93       	push	r30
    1582:	ff 93       	push	r31
    1584:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1588:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    158c:	ac 01       	movw	r20, r24
    158e:	09 2e       	mov	r0, r25
    1590:	00 0c       	add	r0, r0
    1592:	66 0b       	sbc	r22, r22
    1594:	77 0b       	sbc	r23, r23
    1596:	9a 01       	movw	r18, r20
    1598:	11 27       	eor	r17, r17
    159a:	00 27       	eor	r16, r16
    159c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15a4:	60 e0       	ldi	r22, 0x00	; 0
    15a6:	70 e0       	ldi	r23, 0x00	; 0
    15a8:	40 2b       	or	r20, r16
    15aa:	51 2b       	or	r21, r17
    15ac:	62 2b       	or	r22, r18
    15ae:	73 2b       	or	r23, r19
    15b0:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    15b4:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    15b8:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    15bc:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    15c0:	b0 9b       	sbis	0x16, 0	; 22
    15c2:	1a c0       	rjmp	.+52     	; 0x15f8 <__vector_20+0x9a>
    15c4:	01 96       	adiw	r24, 0x01	; 1
    15c6:	09 2e       	mov	r0, r25
    15c8:	00 0c       	add	r0, r0
    15ca:	aa 0b       	sbc	r26, r26
    15cc:	bb 0b       	sbc	r27, r27
    15ce:	bc 01       	movw	r22, r24
    15d0:	55 27       	eor	r21, r21
    15d2:	44 27       	eor	r20, r20
    15d4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15d8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15dc:	a0 e0       	ldi	r26, 0x00	; 0
    15de:	b0 e0       	ldi	r27, 0x00	; 0
    15e0:	84 2b       	or	r24, r20
    15e2:	95 2b       	or	r25, r21
    15e4:	a6 2b       	or	r26, r22
    15e6:	b7 2b       	or	r27, r23
    15e8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    15ec:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    15f0:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    15f4:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    15f8:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1e>
    15fc:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1f>
    1600:	30 97       	sbiw	r30, 0x00	; 0
    1602:	39 f0       	breq	.+14     	; 0x1612 <__vector_20+0xb4>
    1604:	6f e0       	ldi	r22, 0x0F	; 15
    1606:	70 e0       	ldi	r23, 0x00	; 0
    1608:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1e>
    160c:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1f>
    1610:	09 95       	icall
    1612:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    1616:	ff 91       	pop	r31
    1618:	ef 91       	pop	r30
    161a:	bf 91       	pop	r27
    161c:	af 91       	pop	r26
    161e:	9f 91       	pop	r25
    1620:	8f 91       	pop	r24
    1622:	7f 91       	pop	r23
    1624:	6f 91       	pop	r22
    1626:	5f 91       	pop	r21
    1628:	4f 91       	pop	r20
    162a:	3f 91       	pop	r19
    162c:	2f 91       	pop	r18
    162e:	1f 91       	pop	r17
    1630:	0f 91       	pop	r16
    1632:	0f 90       	pop	r0
    1634:	0f be       	out	0x3f, r0	; 63
    1636:	0f 90       	pop	r0
    1638:	1f 90       	pop	r1
    163a:	18 95       	reti

0000163c <__vector_21>:
    163c:	1f 92       	push	r1
    163e:	0f 92       	push	r0
    1640:	0f b6       	in	r0, 0x3f	; 63
    1642:	0f 92       	push	r0
    1644:	11 24       	eor	r1, r1
    1646:	0f 93       	push	r16
    1648:	1f 93       	push	r17
    164a:	2f 93       	push	r18
    164c:	3f 93       	push	r19
    164e:	4f 93       	push	r20
    1650:	5f 93       	push	r21
    1652:	6f 93       	push	r22
    1654:	7f 93       	push	r23
    1656:	8f 93       	push	r24
    1658:	9f 93       	push	r25
    165a:	af 93       	push	r26
    165c:	bf 93       	push	r27
    165e:	ef 93       	push	r30
    1660:	ff 93       	push	r31
    1662:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1666:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    166a:	ac 01       	movw	r20, r24
    166c:	09 2e       	mov	r0, r25
    166e:	00 0c       	add	r0, r0
    1670:	66 0b       	sbc	r22, r22
    1672:	77 0b       	sbc	r23, r23
    1674:	9a 01       	movw	r18, r20
    1676:	11 27       	eor	r17, r17
    1678:	00 27       	eor	r16, r16
    167a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    167e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1682:	60 e0       	ldi	r22, 0x00	; 0
    1684:	70 e0       	ldi	r23, 0x00	; 0
    1686:	40 2b       	or	r20, r16
    1688:	51 2b       	or	r21, r17
    168a:	62 2b       	or	r22, r18
    168c:	73 2b       	or	r23, r19
    168e:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    1692:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1696:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    169a:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    169e:	b0 9b       	sbis	0x16, 0	; 22
    16a0:	1a c0       	rjmp	.+52     	; 0x16d6 <__vector_21+0x9a>
    16a2:	01 96       	adiw	r24, 0x01	; 1
    16a4:	09 2e       	mov	r0, r25
    16a6:	00 0c       	add	r0, r0
    16a8:	aa 0b       	sbc	r26, r26
    16aa:	bb 0b       	sbc	r27, r27
    16ac:	bc 01       	movw	r22, r24
    16ae:	55 27       	eor	r21, r21
    16b0:	44 27       	eor	r20, r20
    16b2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16b6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ba:	a0 e0       	ldi	r26, 0x00	; 0
    16bc:	b0 e0       	ldi	r27, 0x00	; 0
    16be:	84 2b       	or	r24, r20
    16c0:	95 2b       	or	r25, r21
    16c2:	a6 2b       	or	r26, r22
    16c4:	b7 2b       	or	r27, r23
    16c6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    16ca:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    16ce:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    16d2:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    16d6:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x20>
    16da:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x21>
    16de:	30 97       	sbiw	r30, 0x00	; 0
    16e0:	39 f0       	breq	.+14     	; 0x16f0 <__vector_21+0xb4>
    16e2:	60 e1       	ldi	r22, 0x10	; 16
    16e4:	70 e0       	ldi	r23, 0x00	; 0
    16e6:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x20>
    16ea:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x21>
    16ee:	09 95       	icall
    16f0:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    16f4:	ff 91       	pop	r31
    16f6:	ef 91       	pop	r30
    16f8:	bf 91       	pop	r27
    16fa:	af 91       	pop	r26
    16fc:	9f 91       	pop	r25
    16fe:	8f 91       	pop	r24
    1700:	7f 91       	pop	r23
    1702:	6f 91       	pop	r22
    1704:	5f 91       	pop	r21
    1706:	4f 91       	pop	r20
    1708:	3f 91       	pop	r19
    170a:	2f 91       	pop	r18
    170c:	1f 91       	pop	r17
    170e:	0f 91       	pop	r16
    1710:	0f 90       	pop	r0
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	0f 90       	pop	r0
    1716:	1f 90       	pop	r1
    1718:	18 95       	reti

0000171a <__vector_22>:
    171a:	1f 92       	push	r1
    171c:	0f 92       	push	r0
    171e:	0f b6       	in	r0, 0x3f	; 63
    1720:	0f 92       	push	r0
    1722:	11 24       	eor	r1, r1
    1724:	0f 93       	push	r16
    1726:	1f 93       	push	r17
    1728:	2f 93       	push	r18
    172a:	3f 93       	push	r19
    172c:	4f 93       	push	r20
    172e:	5f 93       	push	r21
    1730:	6f 93       	push	r22
    1732:	7f 93       	push	r23
    1734:	8f 93       	push	r24
    1736:	9f 93       	push	r25
    1738:	af 93       	push	r26
    173a:	bf 93       	push	r27
    173c:	ef 93       	push	r30
    173e:	ff 93       	push	r31
    1740:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1744:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    1748:	ac 01       	movw	r20, r24
    174a:	09 2e       	mov	r0, r25
    174c:	00 0c       	add	r0, r0
    174e:	66 0b       	sbc	r22, r22
    1750:	77 0b       	sbc	r23, r23
    1752:	9a 01       	movw	r18, r20
    1754:	11 27       	eor	r17, r17
    1756:	00 27       	eor	r16, r16
    1758:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    175c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1760:	60 e0       	ldi	r22, 0x00	; 0
    1762:	70 e0       	ldi	r23, 0x00	; 0
    1764:	40 2b       	or	r20, r16
    1766:	51 2b       	or	r21, r17
    1768:	62 2b       	or	r22, r18
    176a:	73 2b       	or	r23, r19
    176c:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <timestamp>
    1770:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <timestamp+0x1>
    1774:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timestamp+0x2>
    1778:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timestamp+0x3>
    177c:	b0 9b       	sbis	0x16, 0	; 22
    177e:	1a c0       	rjmp	.+52     	; 0x17b4 <__vector_22+0x9a>
    1780:	01 96       	adiw	r24, 0x01	; 1
    1782:	09 2e       	mov	r0, r25
    1784:	00 0c       	add	r0, r0
    1786:	aa 0b       	sbc	r26, r26
    1788:	bb 0b       	sbc	r27, r27
    178a:	bc 01       	movw	r22, r24
    178c:	55 27       	eor	r21, r21
    178e:	44 27       	eor	r20, r20
    1790:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1794:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1798:	a0 e0       	ldi	r26, 0x00	; 0
    179a:	b0 e0       	ldi	r27, 0x00	; 0
    179c:	84 2b       	or	r24, r20
    179e:	95 2b       	or	r25, r21
    17a0:	a6 2b       	or	r26, r22
    17a2:	b7 2b       	or	r27, r23
    17a4:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timestamp>
    17a8:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timestamp+0x1>
    17ac:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timestamp+0x2>
    17b0:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timestamp+0x3>
    17b4:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x22>
    17b8:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x23>
    17bc:	30 97       	sbiw	r30, 0x00	; 0
    17be:	39 f0       	breq	.+14     	; 0x17ce <__vector_22+0xb4>
    17c0:	61 e1       	ldi	r22, 0x11	; 17
    17c2:	70 e0       	ldi	r23, 0x00	; 0
    17c4:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x22>
    17c8:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x23>
    17cc:	09 95       	icall
    17ce:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    17d2:	ff 91       	pop	r31
    17d4:	ef 91       	pop	r30
    17d6:	bf 91       	pop	r27
    17d8:	af 91       	pop	r26
    17da:	9f 91       	pop	r25
    17dc:	8f 91       	pop	r24
    17de:	7f 91       	pop	r23
    17e0:	6f 91       	pop	r22
    17e2:	5f 91       	pop	r21
    17e4:	4f 91       	pop	r20
    17e6:	3f 91       	pop	r19
    17e8:	2f 91       	pop	r18
    17ea:	1f 91       	pop	r17
    17ec:	0f 91       	pop	r16
    17ee:	0f 90       	pop	r0
    17f0:	0f be       	out	0x3f, r0	; 63
    17f2:	0f 90       	pop	r0
    17f4:	1f 90       	pop	r1
    17f6:	18 95       	reti

000017f8 <idle>:
    17f8:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    17fc:	78 94       	sei
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	83 bf       	out	0x33, r24	; 51
    1802:	88 95       	sleep
    1804:	fc cf       	rjmp	.-8      	; 0x17fe <idle+0x6>

00001806 <__vector_9>:
    1806:	1f 92       	push	r1
    1808:	0f 92       	push	r0
    180a:	0f b6       	in	r0, 0x3f	; 63
    180c:	0f 92       	push	r0
    180e:	11 24       	eor	r1, r1
    1810:	2f 93       	push	r18
    1812:	3f 93       	push	r19
    1814:	4f 93       	push	r20
    1816:	5f 93       	push	r21
    1818:	6f 93       	push	r22
    181a:	7f 93       	push	r23
    181c:	8f 93       	push	r24
    181e:	9f 93       	push	r25
    1820:	ef 93       	push	r30
    1822:	ff 93       	push	r31
    1824:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    1828:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    182c:	01 96       	adiw	r24, 0x01	; 1
    182e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__data_end+0x1>
    1832:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
    1836:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    183a:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    183e:	30 97       	sbiw	r30, 0x00	; 0
    1840:	01 f1       	breq	.+64     	; 0x1882 <__vector_9+0x7c>
    1842:	42 81       	ldd	r20, Z+2	; 0x02
    1844:	53 81       	ldd	r21, Z+3	; 0x03
    1846:	64 81       	ldd	r22, Z+4	; 0x04
    1848:	75 81       	ldd	r23, Z+5	; 0x05
    184a:	86 17       	cp	r24, r22
    184c:	97 07       	cpc	r25, r23
    184e:	c9 f4       	brne	.+50     	; 0x1882 <__vector_9+0x7c>
    1850:	ca 01       	movw	r24, r20
    1852:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1856:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    185a:	42 1b       	sub	r20, r18
    185c:	53 0b       	sbc	r21, r19
    185e:	41 30       	cpi	r20, 0x01	; 1
    1860:	51 05       	cpc	r21, r1
    1862:	29 f4       	brne	.+10     	; 0x186e <__vector_9+0x68>
    1864:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1868:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    186c:	01 96       	adiw	r24, 0x01	; 1
    186e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1872:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1876:	ef e6       	ldi	r30, 0x6F	; 111
    1878:	f0 e0       	ldi	r31, 0x00	; 0
    187a:	80 81       	ld	r24, Z
    187c:	82 60       	ori	r24, 0x02	; 2
    187e:	80 83       	st	Z, r24
    1880:	05 c0       	rjmp	.+10     	; 0x188c <__vector_9+0x86>
    1882:	ef e6       	ldi	r30, 0x6F	; 111
    1884:	f0 e0       	ldi	r31, 0x00	; 0
    1886:	80 81       	ld	r24, Z
    1888:	8d 7f       	andi	r24, 0xFD	; 253
    188a:	80 83       	st	Z, r24
    188c:	ff 91       	pop	r31
    188e:	ef 91       	pop	r30
    1890:	9f 91       	pop	r25
    1892:	8f 91       	pop	r24
    1894:	7f 91       	pop	r23
    1896:	6f 91       	pop	r22
    1898:	5f 91       	pop	r21
    189a:	4f 91       	pop	r20
    189c:	3f 91       	pop	r19
    189e:	2f 91       	pop	r18
    18a0:	0f 90       	pop	r0
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	0f 90       	pop	r0
    18a6:	1f 90       	pop	r1
    18a8:	18 95       	reti

000018aa <__vector_7>:
    18aa:	1f 92       	push	r1
    18ac:	0f 92       	push	r0
    18ae:	0f b6       	in	r0, 0x3f	; 63
    18b0:	0f 92       	push	r0
    18b2:	11 24       	eor	r1, r1
    18b4:	cf 92       	push	r12
    18b6:	df 92       	push	r13
    18b8:	ef 92       	push	r14
    18ba:	ff 92       	push	r15
    18bc:	2f 93       	push	r18
    18be:	3f 93       	push	r19
    18c0:	4f 93       	push	r20
    18c2:	5f 93       	push	r21
    18c4:	6f 93       	push	r22
    18c6:	7f 93       	push	r23
    18c8:	8f 93       	push	r24
    18ca:	9f 93       	push	r25
    18cc:	af 93       	push	r26
    18ce:	bf 93       	push	r27
    18d0:	ef 93       	push	r30
    18d2:	ff 93       	push	r31
    18d4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    18d8:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__data_end+0x1>
    18dc:	6c 01       	movw	r12, r24
    18de:	09 2e       	mov	r0, r25
    18e0:	00 0c       	add	r0, r0
    18e2:	ee 08       	sbc	r14, r14
    18e4:	ff 08       	sbc	r15, r15
    18e6:	76 01       	movw	r14, r12
    18e8:	dd 24       	eor	r13, r13
    18ea:	cc 24       	eor	r12, r12
    18ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18f4:	60 e0       	ldi	r22, 0x00	; 0
    18f6:	70 e0       	ldi	r23, 0x00	; 0
    18f8:	c4 2a       	or	r12, r20
    18fa:	d5 2a       	or	r13, r21
    18fc:	e6 2a       	or	r14, r22
    18fe:	f7 2a       	or	r15, r23
    1900:	b0 9b       	sbis	0x16, 0	; 22
    1902:	1e c0       	rjmp	.+60     	; 0x1940 <__vector_7+0x96>
    1904:	6c 01       	movw	r12, r24
    1906:	2f ef       	ldi	r18, 0xFF	; 255
    1908:	c2 1a       	sub	r12, r18
    190a:	d2 0a       	sbc	r13, r18
    190c:	0d 2c       	mov	r0, r13
    190e:	00 0c       	add	r0, r0
    1910:	ee 08       	sbc	r14, r14
    1912:	ff 08       	sbc	r15, r15
    1914:	d6 01       	movw	r26, r12
    1916:	99 27       	eor	r25, r25
    1918:	88 27       	eor	r24, r24
    191a:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    191e:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1922:	e1 2c       	mov	r14, r1
    1924:	f1 2c       	mov	r15, r1
    1926:	c8 2a       	or	r12, r24
    1928:	d9 2a       	or	r13, r25
    192a:	ea 2a       	or	r14, r26
    192c:	fb 2a       	or	r15, r27
    192e:	08 c0       	rjmp	.+16     	; 0x1940 <__vector_7+0x96>
    1930:	82 e2       	ldi	r24, 0x22	; 34
    1932:	91 e0       	ldi	r25, 0x01	; 1
    1934:	0e 94 c5 03 	call	0x78a	; 0x78a <dequeue>
    1938:	64 e2       	ldi	r22, 0x24	; 36
    193a:	71 e0       	ldi	r23, 0x01	; 1
    193c:	0e 94 63 03 	call	0x6c6	; 0x6c6 <enqueueByDeadline>
    1940:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    1944:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    1948:	30 97       	sbiw	r30, 0x00	; 0
    194a:	69 f0       	breq	.+26     	; 0x1966 <__vector_7+0xbc>
    194c:	82 81       	ldd	r24, Z+2	; 0x02
    194e:	93 81       	ldd	r25, Z+3	; 0x03
    1950:	a4 81       	ldd	r26, Z+4	; 0x04
    1952:	b5 81       	ldd	r27, Z+5	; 0x05
    1954:	8c 19       	sub	r24, r12
    1956:	9d 09       	sbc	r25, r13
    1958:	ae 09       	sbc	r26, r14
    195a:	bf 09       	sbc	r27, r15
    195c:	18 16       	cp	r1, r24
    195e:	19 06       	cpc	r1, r25
    1960:	1a 06       	cpc	r1, r26
    1962:	1b 06       	cpc	r1, r27
    1964:	2c f7       	brge	.-54     	; 0x1930 <__vector_7+0x86>
    1966:	30 97       	sbiw	r30, 0x00	; 0
    1968:	21 f1       	breq	.+72     	; 0x19b2 <__vector_7+0x108>
    196a:	82 81       	ldd	r24, Z+2	; 0x02
    196c:	93 81       	ldd	r25, Z+3	; 0x03
    196e:	a4 81       	ldd	r26, Z+4	; 0x04
    1970:	b5 81       	ldd	r27, Z+5	; 0x05
    1972:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1976:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    197a:	2a 17       	cp	r18, r26
    197c:	3b 07       	cpc	r19, r27
    197e:	c9 f4       	brne	.+50     	; 0x19b2 <__vector_7+0x108>
    1980:	9c 01       	movw	r18, r24
    1982:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1986:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    198a:	84 1b       	sub	r24, r20
    198c:	95 0b       	sbc	r25, r21
    198e:	01 97       	sbiw	r24, 0x01	; 1
    1990:	31 f4       	brne	.+12     	; 0x199e <__vector_7+0xf4>
    1992:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1996:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    199a:	2f 5f       	subi	r18, 0xFF	; 255
    199c:	3f 4f       	sbci	r19, 0xFF	; 255
    199e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    19a2:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    19a6:	ef e6       	ldi	r30, 0x6F	; 111
    19a8:	f0 e0       	ldi	r31, 0x00	; 0
    19aa:	80 81       	ld	r24, Z
    19ac:	82 60       	ori	r24, 0x02	; 2
    19ae:	80 83       	st	Z, r24
    19b0:	05 c0       	rjmp	.+10     	; 0x19bc <__vector_7+0x112>
    19b2:	ef e6       	ldi	r30, 0x6F	; 111
    19b4:	f0 e0       	ldi	r31, 0x00	; 0
    19b6:	80 81       	ld	r24, Z
    19b8:	8d 7f       	andi	r24, 0xFD	; 253
    19ba:	80 83       	st	Z, r24
    19bc:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <schedule>
    19c0:	ff 91       	pop	r31
    19c2:	ef 91       	pop	r30
    19c4:	bf 91       	pop	r27
    19c6:	af 91       	pop	r26
    19c8:	9f 91       	pop	r25
    19ca:	8f 91       	pop	r24
    19cc:	7f 91       	pop	r23
    19ce:	6f 91       	pop	r22
    19d0:	5f 91       	pop	r21
    19d2:	4f 91       	pop	r20
    19d4:	3f 91       	pop	r19
    19d6:	2f 91       	pop	r18
    19d8:	ff 90       	pop	r15
    19da:	ef 90       	pop	r14
    19dc:	df 90       	pop	r13
    19de:	cf 90       	pop	r12
    19e0:	0f 90       	pop	r0
    19e2:	0f be       	out	0x3f, r0	; 63
    19e4:	0f 90       	pop	r0
    19e6:	1f 90       	pop	r1
    19e8:	18 95       	reti

000019ea <async>:
    19ea:	3f 92       	push	r3
    19ec:	4f 92       	push	r4
    19ee:	5f 92       	push	r5
    19f0:	6f 92       	push	r6
    19f2:	7f 92       	push	r7
    19f4:	8f 92       	push	r8
    19f6:	9f 92       	push	r9
    19f8:	af 92       	push	r10
    19fa:	bf 92       	push	r11
    19fc:	cf 92       	push	r12
    19fe:	df 92       	push	r13
    1a00:	ef 92       	push	r14
    1a02:	ff 92       	push	r15
    1a04:	0f 93       	push	r16
    1a06:	1f 93       	push	r17
    1a08:	cf 93       	push	r28
    1a0a:	df 93       	push	r29
    1a0c:	2b 01       	movw	r4, r22
    1a0e:	3c 01       	movw	r6, r24
    1a10:	49 01       	movw	r8, r18
    1a12:	5a 01       	movw	r10, r20
    1a14:	8f b7       	in	r24, 0x3f	; 63
    1a16:	80 78       	andi	r24, 0x80	; 128
    1a18:	38 2e       	mov	r3, r24
    1a1a:	f8 94       	cli
    1a1c:	86 e0       	ldi	r24, 0x06	; 6
    1a1e:	91 e0       	ldi	r25, 0x01	; 1
    1a20:	0e 94 c5 03 	call	0x78a	; 0x78a <dequeue>
    1a24:	ec 01       	movw	r28, r24
    1a26:	1b 87       	std	Y+11, r17	; 0x0b
    1a28:	0a 87       	std	Y+10, r16	; 0x0a
    1a2a:	fd 86       	std	Y+13, r15	; 0x0d
    1a2c:	ec 86       	std	Y+12, r14	; 0x0c
    1a2e:	df 86       	std	Y+15, r13	; 0x0f
    1a30:	ce 86       	std	Y+14, r12	; 0x0e
    1a32:	33 20       	and	r3, r3
    1a34:	61 f0       	breq	.+24     	; 0x1a4e <async+0x64>
    1a36:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a3a:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a3e:	02 80       	ldd	r0, Z+2	; 0x02
    1a40:	f3 81       	ldd	r31, Z+3	; 0x03
    1a42:	e0 2d       	mov	r30, r0
    1a44:	82 81       	ldd	r24, Z+2	; 0x02
    1a46:	93 81       	ldd	r25, Z+3	; 0x03
    1a48:	a4 81       	ldd	r26, Z+4	; 0x04
    1a4a:	b5 81       	ldd	r27, Z+5	; 0x05
    1a4c:	08 c0       	rjmp	.+16     	; 0x1a5e <async+0x74>
    1a4e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <timestamp>
    1a52:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <timestamp+0x1>
    1a56:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <timestamp+0x2>
    1a5a:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <timestamp+0x3>
    1a5e:	48 0e       	add	r4, r24
    1a60:	59 1e       	adc	r5, r25
    1a62:	6a 1e       	adc	r6, r26
    1a64:	7b 1e       	adc	r7, r27
    1a66:	4a 82       	std	Y+2, r4	; 0x02
    1a68:	5b 82       	std	Y+3, r5	; 0x03
    1a6a:	6c 82       	std	Y+4, r6	; 0x04
    1a6c:	7d 82       	std	Y+5, r7	; 0x05
    1a6e:	18 14       	cp	r1, r8
    1a70:	19 04       	cpc	r1, r9
    1a72:	1a 04       	cpc	r1, r10
    1a74:	1b 04       	cpc	r1, r11
    1a76:	44 f0       	brlt	.+16     	; 0x1a88 <async+0x9e>
    1a78:	0f 2e       	mov	r0, r31
    1a7a:	88 24       	eor	r8, r8
    1a7c:	8a 94       	dec	r8
    1a7e:	98 2c       	mov	r9, r8
    1a80:	a8 2c       	mov	r10, r8
    1a82:	ff e7       	ldi	r31, 0x7F	; 127
    1a84:	bf 2e       	mov	r11, r31
    1a86:	f0 2d       	mov	r31, r0
    1a88:	84 0c       	add	r8, r4
    1a8a:	95 1c       	adc	r9, r5
    1a8c:	a6 1c       	adc	r10, r6
    1a8e:	b7 1c       	adc	r11, r7
    1a90:	8e 82       	std	Y+6, r8	; 0x06
    1a92:	9f 82       	std	Y+7, r9	; 0x07
    1a94:	a8 86       	std	Y+8, r10	; 0x08
    1a96:	b9 86       	std	Y+9, r11	; 0x09
    1a98:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1a9c:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1aa0:	c9 01       	movw	r24, r18
    1aa2:	03 2e       	mov	r0, r19
    1aa4:	00 0c       	add	r0, r0
    1aa6:	aa 0b       	sbc	r26, r26
    1aa8:	bb 0b       	sbc	r27, r27
    1aaa:	dc 01       	movw	r26, r24
    1aac:	99 27       	eor	r25, r25
    1aae:	88 27       	eor	r24, r24
    1ab0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ab4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ab8:	60 e0       	ldi	r22, 0x00	; 0
    1aba:	70 e0       	ldi	r23, 0x00	; 0
    1abc:	84 2b       	or	r24, r20
    1abe:	95 2b       	or	r25, r21
    1ac0:	a6 2b       	or	r26, r22
    1ac2:	b7 2b       	or	r27, r23
    1ac4:	b0 9b       	sbis	0x16, 0	; 22
    1ac6:	13 c0       	rjmp	.+38     	; 0x1aee <async+0x104>
    1ac8:	c9 01       	movw	r24, r18
    1aca:	01 96       	adiw	r24, 0x01	; 1
    1acc:	09 2e       	mov	r0, r25
    1ace:	00 0c       	add	r0, r0
    1ad0:	aa 0b       	sbc	r26, r26
    1ad2:	bb 0b       	sbc	r27, r27
    1ad4:	dc 01       	movw	r26, r24
    1ad6:	99 27       	eor	r25, r25
    1ad8:	88 27       	eor	r24, r24
    1ada:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ade:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ae2:	60 e0       	ldi	r22, 0x00	; 0
    1ae4:	70 e0       	ldi	r23, 0x00	; 0
    1ae6:	84 2b       	or	r24, r20
    1ae8:	95 2b       	or	r25, r21
    1aea:	a6 2b       	or	r26, r22
    1aec:	b7 2b       	or	r27, r23
    1aee:	48 1a       	sub	r4, r24
    1af0:	59 0a       	sbc	r5, r25
    1af2:	6a 0a       	sbc	r6, r26
    1af4:	7b 0a       	sbc	r7, r27
    1af6:	14 14       	cp	r1, r4
    1af8:	15 04       	cpc	r1, r5
    1afa:	16 04       	cpc	r1, r6
    1afc:	17 04       	cpc	r1, r7
    1afe:	ac f5       	brge	.+106    	; 0x1b6a <async+0x180>
    1b00:	62 e2       	ldi	r22, 0x22	; 34
    1b02:	71 e0       	ldi	r23, 0x01	; 1
    1b04:	ce 01       	movw	r24, r28
    1b06:	0e 94 94 03 	call	0x728	; 0x728 <enqueueByBaseline>
    1b0a:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <timerQ>
    1b0e:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <timerQ+0x1>
    1b12:	30 97       	sbiw	r30, 0x00	; 0
    1b14:	21 f1       	breq	.+72     	; 0x1b5e <async+0x174>
    1b16:	82 81       	ldd	r24, Z+2	; 0x02
    1b18:	93 81       	ldd	r25, Z+3	; 0x03
    1b1a:	a4 81       	ldd	r26, Z+4	; 0x04
    1b1c:	b5 81       	ldd	r27, Z+5	; 0x05
    1b1e:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__data_end>
    1b22:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__data_end+0x1>
    1b26:	2a 17       	cp	r18, r26
    1b28:	3b 07       	cpc	r19, r27
    1b2a:	c9 f4       	brne	.+50     	; 0x1b5e <async+0x174>
    1b2c:	9c 01       	movw	r18, r24
    1b2e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b32:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b36:	84 1b       	sub	r24, r20
    1b38:	95 0b       	sbc	r25, r21
    1b3a:	01 97       	sbiw	r24, 0x01	; 1
    1b3c:	31 f4       	brne	.+12     	; 0x1b4a <async+0x160>
    1b3e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b42:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b46:	2f 5f       	subi	r18, 0xFF	; 255
    1b48:	3f 4f       	sbci	r19, 0xFF	; 255
    1b4a:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b4e:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b52:	ef e6       	ldi	r30, 0x6F	; 111
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	80 81       	ld	r24, Z
    1b58:	82 60       	ori	r24, 0x02	; 2
    1b5a:	80 83       	st	Z, r24
    1b5c:	39 c0       	rjmp	.+114    	; 0x1bd0 <async+0x1e6>
    1b5e:	ef e6       	ldi	r30, 0x6F	; 111
    1b60:	f0 e0       	ldi	r31, 0x00	; 0
    1b62:	80 81       	ld	r24, Z
    1b64:	8d 7f       	andi	r24, 0xFD	; 253
    1b66:	80 83       	st	Z, r24
    1b68:	33 c0       	rjmp	.+102    	; 0x1bd0 <async+0x1e6>
    1b6a:	64 e2       	ldi	r22, 0x24	; 36
    1b6c:	71 e0       	ldi	r23, 0x01	; 1
    1b6e:	ce 01       	movw	r24, r28
    1b70:	0e 94 63 03 	call	0x6c6	; 0x6c6 <enqueueByDeadline>
    1b74:	33 20       	and	r3, r3
    1b76:	61 f1       	breq	.+88     	; 0x1bd0 <async+0x1e6>
    1b78:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1b7c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1b80:	89 2b       	or	r24, r25
    1b82:	31 f1       	breq	.+76     	; 0x1bd0 <async+0x1e6>
    1b84:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
    1b88:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
    1b8c:	86 81       	ldd	r24, Z+6	; 0x06
    1b8e:	97 81       	ldd	r25, Z+7	; 0x07
    1b90:	a0 85       	ldd	r26, Z+8	; 0x08
    1b92:	b1 85       	ldd	r27, Z+9	; 0x09
    1b94:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1b98:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1b9c:	02 80       	ldd	r0, Z+2	; 0x02
    1b9e:	f3 81       	ldd	r31, Z+3	; 0x03
    1ba0:	e0 2d       	mov	r30, r0
    1ba2:	46 81       	ldd	r20, Z+6	; 0x06
    1ba4:	57 81       	ldd	r21, Z+7	; 0x07
    1ba6:	60 85       	ldd	r22, Z+8	; 0x08
    1ba8:	71 85       	ldd	r23, Z+9	; 0x09
    1baa:	84 1b       	sub	r24, r20
    1bac:	95 0b       	sbc	r25, r21
    1bae:	a6 0b       	sbc	r26, r22
    1bb0:	b7 0b       	sbc	r27, r23
    1bb2:	72 f4       	brpl	.+28     	; 0x1bd0 <async+0x1e6>
    1bb4:	84 e0       	ldi	r24, 0x04	; 4
    1bb6:	91 e0       	ldi	r25, 0x01	; 1
    1bb8:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <pop>
    1bbc:	62 e0       	ldi	r22, 0x02	; 2
    1bbe:	71 e0       	ldi	r23, 0x01	; 1
    1bc0:	0e 94 e6 03 	call	0x7cc	; 0x7cc <push>
    1bc4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1bc8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1bcc:	0e 94 43 03 	call	0x686	; 0x686 <dispatch>
    1bd0:	33 20       	and	r3, r3
    1bd2:	09 f0       	breq	.+2      	; 0x1bd6 <async+0x1ec>
    1bd4:	78 94       	sei
    1bd6:	ce 01       	movw	r24, r28
    1bd8:	df 91       	pop	r29
    1bda:	cf 91       	pop	r28
    1bdc:	1f 91       	pop	r17
    1bde:	0f 91       	pop	r16
    1be0:	ff 90       	pop	r15
    1be2:	ef 90       	pop	r14
    1be4:	df 90       	pop	r13
    1be6:	cf 90       	pop	r12
    1be8:	bf 90       	pop	r11
    1bea:	af 90       	pop	r10
    1bec:	9f 90       	pop	r9
    1bee:	8f 90       	pop	r8
    1bf0:	7f 90       	pop	r7
    1bf2:	6f 90       	pop	r6
    1bf4:	5f 90       	pop	r5
    1bf6:	4f 90       	pop	r4
    1bf8:	3f 90       	pop	r3
    1bfa:	08 95       	ret

00001bfc <sync>:
    1bfc:	cf 92       	push	r12
    1bfe:	df 92       	push	r13
    1c00:	ef 92       	push	r14
    1c02:	ff 92       	push	r15
    1c04:	0f 93       	push	r16
    1c06:	1f 93       	push	r17
    1c08:	cf 93       	push	r28
    1c0a:	df 93       	push	r29
    1c0c:	ec 01       	movw	r28, r24
    1c0e:	7b 01       	movw	r14, r22
    1c10:	6a 01       	movw	r12, r20
    1c12:	1f b7       	in	r17, 0x3f	; 63
    1c14:	10 78       	andi	r17, 0x80	; 128
    1c16:	f8 94       	cli
    1c18:	a8 81       	ld	r26, Y
    1c1a:	b9 81       	ldd	r27, Y+1	; 0x01
    1c1c:	10 97       	sbiw	r26, 0x00	; 0
    1c1e:	19 f4       	brne	.+6      	; 0x1c26 <sync+0x2a>
    1c20:	35 c0       	rjmp	.+106    	; 0x1c8c <sync+0x90>
    1c22:	a0 81       	ld	r26, Z
    1c24:	b1 81       	ldd	r27, Z+1	; 0x01
    1c26:	14 96       	adiw	r26, 0x04	; 4
    1c28:	ed 91       	ld	r30, X+
    1c2a:	fc 91       	ld	r31, X
    1c2c:	15 97       	sbiw	r26, 0x05	; 5
    1c2e:	30 97       	sbiw	r30, 0x00	; 0
    1c30:	c1 f7       	brne	.-16     	; 0x1c22 <sync+0x26>
    1c32:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c36:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c3a:	a2 17       	cp	r26, r18
    1c3c:	b3 07       	cpc	r27, r19
    1c3e:	11 f0       	breq	.+4      	; 0x1c44 <sync+0x48>
    1c40:	11 11       	cpse	r17, r1
    1c42:	07 c0       	rjmp	.+14     	; 0x1c52 <sync+0x56>
    1c44:	11 23       	and	r17, r17
    1c46:	09 f4       	brne	.+2      	; 0x1c4a <sync+0x4e>
    1c48:	4a c0       	rjmp	.+148    	; 0x1cde <sync+0xe2>
    1c4a:	78 94       	sei
    1c4c:	8f ef       	ldi	r24, 0xFF	; 255
    1c4e:	9f ef       	ldi	r25, 0xFF	; 255
    1c50:	4e c0       	rjmp	.+156    	; 0x1cee <sync+0xf2>
    1c52:	8a 81       	ldd	r24, Y+2	; 0x02
    1c54:	9b 81       	ldd	r25, Y+3	; 0x03
    1c56:	00 97       	sbiw	r24, 0x00	; 0
    1c58:	19 f0       	breq	.+6      	; 0x1c60 <sync+0x64>
    1c5a:	fc 01       	movw	r30, r24
    1c5c:	15 82       	std	Z+5, r1	; 0x05
    1c5e:	14 82       	std	Z+4, r1	; 0x04
    1c60:	3b 83       	std	Y+3, r19	; 0x03
    1c62:	2a 83       	std	Y+2, r18	; 0x02
    1c64:	f9 01       	movw	r30, r18
    1c66:	d5 83       	std	Z+5, r29	; 0x05
    1c68:	c4 83       	std	Z+4, r28	; 0x04
    1c6a:	cd 01       	movw	r24, r26
    1c6c:	0e 94 43 03 	call	0x686	; 0x686 <dispatch>
    1c70:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c74:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c78:	82 81       	ldd	r24, Z+2	; 0x02
    1c7a:	93 81       	ldd	r25, Z+3	; 0x03
    1c7c:	89 2b       	or	r24, r25
    1c7e:	31 f4       	brne	.+12     	; 0x1c8c <sync+0x90>
    1c80:	11 23       	and	r17, r17
    1c82:	81 f1       	breq	.+96     	; 0x1ce4 <sync+0xe8>
    1c84:	78 94       	sei
    1c86:	80 e0       	ldi	r24, 0x00	; 0
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	31 c0       	rjmp	.+98     	; 0x1cee <sync+0xf2>
    1c8c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c90:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c94:	99 83       	std	Y+1, r25	; 0x01
    1c96:	88 83       	st	Y, r24
    1c98:	11 23       	and	r17, r17
    1c9a:	29 f0       	breq	.+10     	; 0x1ca6 <sync+0xaa>
    1c9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1ca0:	01 97       	sbiw	r24, 0x01	; 1
    1ca2:	09 f0       	breq	.+2      	; 0x1ca6 <sync+0xaa>
    1ca4:	78 94       	sei
    1ca6:	b6 01       	movw	r22, r12
    1ca8:	ce 01       	movw	r24, r28
    1caa:	f7 01       	movw	r30, r14
    1cac:	09 95       	icall
    1cae:	f8 2e       	mov	r15, r24
    1cb0:	09 2f       	mov	r16, r25
    1cb2:	8f b7       	in	r24, 0x3f	; 63
    1cb4:	f8 94       	cli
    1cb6:	19 82       	std	Y+1, r1	; 0x01
    1cb8:	18 82       	st	Y, r1
    1cba:	8a 81       	ldd	r24, Y+2	; 0x02
    1cbc:	9b 81       	ldd	r25, Y+3	; 0x03
    1cbe:	82 30       	cpi	r24, 0x02	; 2
    1cc0:	91 05       	cpc	r25, r1
    1cc2:	38 f0       	brcs	.+14     	; 0x1cd2 <sync+0xd6>
    1cc4:	1b 82       	std	Y+3, r1	; 0x03
    1cc6:	1a 82       	std	Y+2, r1	; 0x02
    1cc8:	fc 01       	movw	r30, r24
    1cca:	15 82       	std	Z+5, r1	; 0x05
    1ccc:	14 82       	std	Z+4, r1	; 0x04
    1cce:	0e 94 43 03 	call	0x686	; 0x686 <dispatch>
    1cd2:	11 23       	and	r17, r17
    1cd4:	51 f0       	breq	.+20     	; 0x1cea <sync+0xee>
    1cd6:	78 94       	sei
    1cd8:	8f 2d       	mov	r24, r15
    1cda:	90 2f       	mov	r25, r16
    1cdc:	08 c0       	rjmp	.+16     	; 0x1cee <sync+0xf2>
    1cde:	8f ef       	ldi	r24, 0xFF	; 255
    1ce0:	9f ef       	ldi	r25, 0xFF	; 255
    1ce2:	05 c0       	rjmp	.+10     	; 0x1cee <sync+0xf2>
    1ce4:	80 e0       	ldi	r24, 0x00	; 0
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	02 c0       	rjmp	.+4      	; 0x1cee <sync+0xf2>
    1cea:	8f 2d       	mov	r24, r15
    1cec:	90 2f       	mov	r25, r16
    1cee:	df 91       	pop	r29
    1cf0:	cf 91       	pop	r28
    1cf2:	1f 91       	pop	r17
    1cf4:	0f 91       	pop	r16
    1cf6:	ff 90       	pop	r15
    1cf8:	ef 90       	pop	r14
    1cfa:	df 90       	pop	r13
    1cfc:	cf 90       	pop	r12
    1cfe:	08 95       	ret

00001d00 <run>:
    1d00:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d04:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d08:	84 e2       	ldi	r24, 0x24	; 36
    1d0a:	91 e0       	ldi	r25, 0x01	; 1
    1d0c:	0e 94 c5 03 	call	0x78a	; 0x78a <dequeue>
    1d10:	ec 01       	movw	r28, r24
    1d12:	f8 01       	movw	r30, r16
    1d14:	93 83       	std	Z+3, r25	; 0x03
    1d16:	82 83       	std	Z+2, r24	; 0x02
    1d18:	78 94       	sei
    1d1a:	6c 85       	ldd	r22, Y+12	; 0x0c
    1d1c:	7d 85       	ldd	r23, Y+13	; 0x0d
    1d1e:	4e 85       	ldd	r20, Y+14	; 0x0e
    1d20:	5f 85       	ldd	r21, Y+15	; 0x0f
    1d22:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d24:	9b 85       	ldd	r25, Y+11	; 0x0b
    1d26:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <sync>
    1d2a:	8f b7       	in	r24, 0x3f	; 63
    1d2c:	f8 94       	cli
    1d2e:	66 e0       	ldi	r22, 0x06	; 6
    1d30:	71 e0       	ldi	r23, 0x01	; 1
    1d32:	ce 01       	movw	r24, r28
    1d34:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <insert>
    1d38:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1d3c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1d40:	01 90       	ld	r0, Z+
    1d42:	f0 81       	ld	r31, Z
    1d44:	e0 2d       	mov	r30, r0
    1d46:	c2 81       	ldd	r28, Z+2	; 0x02
    1d48:	d3 81       	ldd	r29, Z+3	; 0x03
    1d4a:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <msgQ>
    1d4e:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <msgQ+0x1>
    1d52:	30 97       	sbiw	r30, 0x00	; 0
    1d54:	a1 f0       	breq	.+40     	; 0x1d7e <run+0x7e>
    1d56:	20 97       	sbiw	r28, 0x00	; 0
    1d58:	99 f2       	breq	.-90     	; 0x1d00 <run>
    1d5a:	86 81       	ldd	r24, Z+6	; 0x06
    1d5c:	97 81       	ldd	r25, Z+7	; 0x07
    1d5e:	a0 85       	ldd	r26, Z+8	; 0x08
    1d60:	b1 85       	ldd	r27, Z+9	; 0x09
    1d62:	4e 81       	ldd	r20, Y+6	; 0x06
    1d64:	5f 81       	ldd	r21, Y+7	; 0x07
    1d66:	68 85       	ldd	r22, Y+8	; 0x08
    1d68:	79 85       	ldd	r23, Y+9	; 0x09
    1d6a:	84 1b       	sub	r24, r20
    1d6c:	95 0b       	sbc	r25, r21
    1d6e:	a6 0b       	sbc	r26, r22
    1d70:	b7 0b       	sbc	r27, r23
    1d72:	18 16       	cp	r1, r24
    1d74:	19 06       	cpc	r1, r25
    1d76:	1a 06       	cpc	r1, r26
    1d78:	1b 06       	cpc	r1, r27
    1d7a:	0c f0       	brlt	.+2      	; 0x1d7e <run+0x7e>
    1d7c:	c1 cf       	rjmp	.-126    	; 0x1d00 <run>
    1d7e:	82 e0       	ldi	r24, 0x02	; 2
    1d80:	91 e0       	ldi	r25, 0x01	; 1
    1d82:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <pop>
    1d86:	64 e0       	ldi	r22, 0x04	; 4
    1d88:	71 e0       	ldi	r23, 0x01	; 1
    1d8a:	0e 94 e6 03 	call	0x7cc	; 0x7cc <push>
    1d8e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    1d92:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    1d96:	02 c0       	rjmp	.+4      	; 0x1d9c <run+0x9c>
    1d98:	a0 81       	ld	r26, Z
    1d9a:	b1 81       	ldd	r27, Z+1	; 0x01
    1d9c:	14 96       	adiw	r26, 0x04	; 4
    1d9e:	ed 91       	ld	r30, X+
    1da0:	fc 91       	ld	r31, X
    1da2:	15 97       	sbiw	r26, 0x05	; 5
    1da4:	30 97       	sbiw	r30, 0x00	; 0
    1da6:	c1 f7       	brne	.-16     	; 0x1d98 <run+0x98>
    1da8:	cd 01       	movw	r24, r26
    1daa:	0e 94 43 03 	call	0x686	; 0x686 <dispatch>
    1dae:	a8 cf       	rjmp	.-176    	; 0x1d00 <run>

00001db0 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1db0:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1db2:	42 31       	cpi	r20, 0x12	; 18
    1db4:	b8 f4       	brcc	.+46     	; 0x1de4 <install+0x34>
        char status;
        DISABLE(status);
    1db6:	9f b7       	in	r25, 0x3f	; 63
    1db8:	90 78       	andi	r25, 0x80	; 128
    1dba:	f8 94       	cli
        otable[i] = obj;
    1dbc:	50 e0       	ldi	r21, 0x00	; 0
    1dbe:	44 0f       	add	r20, r20
    1dc0:	55 1f       	adc	r21, r21
    1dc2:	da 01       	movw	r26, r20
    1dc4:	aa 5d       	subi	r26, 0xDA	; 218
    1dc6:	be 4f       	sbci	r27, 0xFE	; 254
    1dc8:	ed 93       	st	X+, r30
    1dca:	fc 93       	st	X, r31
        mtable[i] = m;
    1dcc:	da 01       	movw	r26, r20
    1dce:	a2 54       	subi	r26, 0x42	; 66
    1dd0:	be 4f       	sbci	r27, 0xFE	; 254
    1dd2:	6d 93       	st	X+, r22
    1dd4:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1dd6:	21 e0       	ldi	r18, 0x01	; 1
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	33 83       	std	Z+3, r19	; 0x03
    1ddc:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1dde:	99 23       	and	r25, r25
    1de0:	09 f0       	breq	.+2      	; 0x1de4 <install+0x34>
    1de2:	78 94       	sei
    1de4:	08 95       	ret

00001de6 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1de6:	8c 01       	movw	r16, r24
    1de8:	7b 01       	movw	r14, r22
    1dea:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1dec:	8f b7       	in	r24, 0x3f	; 63
    1dee:	f8 94       	cli
    initialize();
    1df0:	0e 94 a4 02 	call	0x548	; 0x548 <initialize>
    ENABLE(1);
    1df4:	78 94       	sei
    if (m != NULL)
    1df6:	e1 14       	cp	r14, r1
    1df8:	f1 04       	cpc	r15, r1
    1dfa:	41 f0       	breq	.+16     	; 0x1e0c <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1dfc:	20 e0       	ldi	r18, 0x00	; 0
    1dfe:	30 e0       	ldi	r19, 0x00	; 0
    1e00:	a9 01       	movw	r20, r18
    1e02:	60 e0       	ldi	r22, 0x00	; 0
    1e04:	70 e0       	ldi	r23, 0x00	; 0
    1e06:	cb 01       	movw	r24, r22
    1e08:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <async>
    DISABLE(status);
    1e0c:	8f b7       	in	r24, 0x3f	; 63
    1e0e:	f8 94       	cli
    idle();
    1e10:	0e 94 fc 0b 	call	0x17f8	; 0x17f8 <idle>

00001e14 <__divmodsi4>:
    1e14:	05 2e       	mov	r0, r21
    1e16:	97 fb       	bst	r25, 7
    1e18:	1e f4       	brtc	.+6      	; 0x1e20 <__divmodsi4+0xc>
    1e1a:	00 94       	com	r0
    1e1c:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <__negsi2>
    1e20:	57 fd       	sbrc	r21, 7
    1e22:	07 d0       	rcall	.+14     	; 0x1e32 <__divmodsi4_neg2>
    1e24:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <__udivmodsi4>
    1e28:	07 fc       	sbrc	r0, 7
    1e2a:	03 d0       	rcall	.+6      	; 0x1e32 <__divmodsi4_neg2>
    1e2c:	4e f4       	brtc	.+18     	; 0x1e40 <__divmodsi4_exit>
    1e2e:	0c 94 21 0f 	jmp	0x1e42	; 0x1e42 <__negsi2>

00001e32 <__divmodsi4_neg2>:
    1e32:	50 95       	com	r21
    1e34:	40 95       	com	r20
    1e36:	30 95       	com	r19
    1e38:	21 95       	neg	r18
    1e3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e3c:	4f 4f       	sbci	r20, 0xFF	; 255
    1e3e:	5f 4f       	sbci	r21, 0xFF	; 255

00001e40 <__divmodsi4_exit>:
    1e40:	08 95       	ret

00001e42 <__negsi2>:
    1e42:	90 95       	com	r25
    1e44:	80 95       	com	r24
    1e46:	70 95       	com	r23
    1e48:	61 95       	neg	r22
    1e4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1e4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e50:	08 95       	ret

00001e52 <__udivmodsi4>:
    1e52:	a1 e2       	ldi	r26, 0x21	; 33
    1e54:	1a 2e       	mov	r1, r26
    1e56:	aa 1b       	sub	r26, r26
    1e58:	bb 1b       	sub	r27, r27
    1e5a:	fd 01       	movw	r30, r26
    1e5c:	0d c0       	rjmp	.+26     	; 0x1e78 <__udivmodsi4_ep>

00001e5e <__udivmodsi4_loop>:
    1e5e:	aa 1f       	adc	r26, r26
    1e60:	bb 1f       	adc	r27, r27
    1e62:	ee 1f       	adc	r30, r30
    1e64:	ff 1f       	adc	r31, r31
    1e66:	a2 17       	cp	r26, r18
    1e68:	b3 07       	cpc	r27, r19
    1e6a:	e4 07       	cpc	r30, r20
    1e6c:	f5 07       	cpc	r31, r21
    1e6e:	20 f0       	brcs	.+8      	; 0x1e78 <__udivmodsi4_ep>
    1e70:	a2 1b       	sub	r26, r18
    1e72:	b3 0b       	sbc	r27, r19
    1e74:	e4 0b       	sbc	r30, r20
    1e76:	f5 0b       	sbc	r31, r21

00001e78 <__udivmodsi4_ep>:
    1e78:	66 1f       	adc	r22, r22
    1e7a:	77 1f       	adc	r23, r23
    1e7c:	88 1f       	adc	r24, r24
    1e7e:	99 1f       	adc	r25, r25
    1e80:	1a 94       	dec	r1
    1e82:	69 f7       	brne	.-38     	; 0x1e5e <__udivmodsi4_loop>
    1e84:	60 95       	com	r22
    1e86:	70 95       	com	r23
    1e88:	80 95       	com	r24
    1e8a:	90 95       	com	r25
    1e8c:	9b 01       	movw	r18, r22
    1e8e:	ac 01       	movw	r20, r24
    1e90:	bd 01       	movw	r22, r26
    1e92:	cf 01       	movw	r24, r30
    1e94:	08 95       	ret

00001e96 <setjmp>:
    1e96:	dc 01       	movw	r26, r24
    1e98:	2d 92       	st	X+, r2
    1e9a:	3d 92       	st	X+, r3
    1e9c:	4d 92       	st	X+, r4
    1e9e:	5d 92       	st	X+, r5
    1ea0:	6d 92       	st	X+, r6
    1ea2:	7d 92       	st	X+, r7
    1ea4:	8d 92       	st	X+, r8
    1ea6:	9d 92       	st	X+, r9
    1ea8:	ad 92       	st	X+, r10
    1eaa:	bd 92       	st	X+, r11
    1eac:	cd 92       	st	X+, r12
    1eae:	dd 92       	st	X+, r13
    1eb0:	ed 92       	st	X+, r14
    1eb2:	fd 92       	st	X+, r15
    1eb4:	0d 93       	st	X+, r16
    1eb6:	1d 93       	st	X+, r17
    1eb8:	cd 93       	st	X+, r28
    1eba:	dd 93       	st	X+, r29
    1ebc:	ff 91       	pop	r31
    1ebe:	ef 91       	pop	r30
    1ec0:	8d b7       	in	r24, 0x3d	; 61
    1ec2:	8d 93       	st	X+, r24
    1ec4:	8e b7       	in	r24, 0x3e	; 62
    1ec6:	8d 93       	st	X+, r24
    1ec8:	8f b7       	in	r24, 0x3f	; 63
    1eca:	8d 93       	st	X+, r24
    1ecc:	ed 93       	st	X+, r30
    1ece:	fd 93       	st	X+, r31
    1ed0:	88 27       	eor	r24, r24
    1ed2:	99 27       	eor	r25, r25
    1ed4:	09 94       	ijmp

00001ed6 <longjmp>:
    1ed6:	dc 01       	movw	r26, r24
    1ed8:	cb 01       	movw	r24, r22
    1eda:	81 30       	cpi	r24, 0x01	; 1
    1edc:	91 05       	cpc	r25, r1
    1ede:	81 1d       	adc	r24, r1
    1ee0:	2d 90       	ld	r2, X+
    1ee2:	3d 90       	ld	r3, X+
    1ee4:	4d 90       	ld	r4, X+
    1ee6:	5d 90       	ld	r5, X+
    1ee8:	6d 90       	ld	r6, X+
    1eea:	7d 90       	ld	r7, X+
    1eec:	8d 90       	ld	r8, X+
    1eee:	9d 90       	ld	r9, X+
    1ef0:	ad 90       	ld	r10, X+
    1ef2:	bd 90       	ld	r11, X+
    1ef4:	cd 90       	ld	r12, X+
    1ef6:	dd 90       	ld	r13, X+
    1ef8:	ed 90       	ld	r14, X+
    1efa:	fd 90       	ld	r15, X+
    1efc:	0d 91       	ld	r16, X+
    1efe:	1d 91       	ld	r17, X+
    1f00:	cd 91       	ld	r28, X+
    1f02:	dd 91       	ld	r29, X+
    1f04:	ed 91       	ld	r30, X+
    1f06:	fd 91       	ld	r31, X+
    1f08:	0d 90       	ld	r0, X+
    1f0a:	f8 94       	cli
    1f0c:	fe bf       	out	0x3e, r31	; 62
    1f0e:	0f be       	out	0x3f, r0	; 63
    1f10:	ed bf       	out	0x3d, r30	; 61
    1f12:	ed 91       	ld	r30, X+
    1f14:	fd 91       	ld	r31, X+
    1f16:	09 94       	ijmp

00001f18 <_exit>:
    1f18:	f8 94       	cli

00001f1a <__stop_program>:
    1f1a:	ff cf       	rjmp	.-2      	; 0x1f1a <__stop_program>
